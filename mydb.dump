--
-- PostgreSQL database dump
--

-- Dumped from database version 17.4 (Debian 17.4-1.pgdg120+2)
-- Dumped by pg_dump version 17.4 (Debian 17.4-1.pgdg120+2)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_group_permissions (
    id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_user_groups (
    id integer NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.auth_user_user_permissions (
    id integer NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: core_navigation; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.core_navigation (
    id bigint NOT NULL,
    main_menu jsonb NOT NULL,
    site_id integer NOT NULL
);


--
-- Name: core_navigation_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.core_navigation ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.core_navigation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.django_migrations (
    id integer NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


--
-- Name: home_homepage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.home_homepage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL
);


--
-- Name: pages_articlechapterpage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pages_articlechapterpage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL,
    excerpt character varying(255) NOT NULL
);


--
-- Name: pages_articleindexpage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pages_articleindexpage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL
);


--
-- Name: pages_articlepage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pages_articlepage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL,
    excerpt character varying(255) NOT NULL,
    date date NOT NULL
);


--
-- Name: pages_packageindexpage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pages_packageindexpage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL
);


--
-- Name: pages_packagepage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.pages_packagepage (
    page_ptr_id integer NOT NULL,
    body jsonb NOT NULL,
    date date NOT NULL,
    excerpt character varying(255) NOT NULL,
    pypi_package_name character varying(255) NOT NULL
);


--
-- Name: taggit_tag; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.taggit_tag (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(100) NOT NULL
);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.taggit_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_taggeditem; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.taggit_taggeditem (
    id integer NOT NULL,
    object_id integer NOT NULL,
    content_type_id integer NOT NULL,
    tag_id integer NOT NULL
);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.taggit_taggeditem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_taggeditem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailadmin_admin; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailadmin_admin (
    id integer NOT NULL
);


--
-- Name: wagtailadmin_admin_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailadmin_admin ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailadmin_admin_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_collection; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_collection (
    id integer NOT NULL,
    path character varying(255) NOT NULL COLLATE pg_catalog."C",
    depth integer NOT NULL,
    numchild integer NOT NULL,
    name character varying(255) NOT NULL,
    CONSTRAINT wagtailcore_collection_depth_check CHECK ((depth >= 0)),
    CONSTRAINT wagtailcore_collection_numchild_check CHECK ((numchild >= 0))
);


--
-- Name: wagtailcore_collection_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_collection ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_collection_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_collectionviewrestriction; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_collectionviewrestriction (
    id integer NOT NULL,
    restriction_type character varying(20) NOT NULL,
    password character varying(255) NOT NULL,
    collection_id integer NOT NULL
);


--
-- Name: wagtailcore_collectionviewrestriction_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_collectionviewrestriction_groups (
    id integer NOT NULL,
    collectionviewrestriction_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: wagtailcore_collectionviewrestriction_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_collectionviewrestriction_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_collectionviewrestriction_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_collectionviewrestriction_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_collectionviewrestriction ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_collectionviewrestriction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_comment; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_comment (
    id integer NOT NULL,
    text text NOT NULL,
    contentpath text NOT NULL,
    "position" text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    resolved_at timestamp with time zone,
    page_id integer NOT NULL,
    resolved_by_id integer,
    revision_created_id integer,
    user_id integer NOT NULL
);


--
-- Name: wagtailcore_comment_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_comment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_comment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_commentreply; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_commentreply (
    id integer NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    comment_id integer NOT NULL,
    user_id integer NOT NULL
);


--
-- Name: wagtailcore_commentreply_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_commentreply ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_commentreply_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_groupapprovaltask; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_groupapprovaltask (
    task_ptr_id integer NOT NULL
);


--
-- Name: wagtailcore_groupapprovaltask_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_groupapprovaltask_groups (
    id integer NOT NULL,
    groupapprovaltask_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: wagtailcore_groupapprovaltask_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_groupapprovaltask_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_groupapprovaltask_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_groupcollectionpermission; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_groupcollectionpermission (
    id integer NOT NULL,
    collection_id integer NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


--
-- Name: wagtailcore_groupcollectionpermission_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_groupcollectionpermission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_groupcollectionpermission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_grouppagepermission; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_grouppagepermission (
    id integer NOT NULL,
    permission_type character varying(20),
    group_id integer NOT NULL,
    page_id integer NOT NULL,
    permission_id integer,
    CONSTRAINT permission_or_permission_type_not_null CHECK (((permission_id IS NOT NULL) OR (permission_type IS NOT NULL)))
);


--
-- Name: wagtailcore_grouppagepermission_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_grouppagepermission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_grouppagepermission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_locale; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_locale (
    id integer NOT NULL,
    language_code character varying(100) NOT NULL
);


--
-- Name: wagtailcore_locale_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_locale ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_locale_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_modellogentry; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_modellogentry (
    id integer NOT NULL,
    label text NOT NULL,
    action character varying(255) NOT NULL,
    data jsonb NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    content_changed boolean NOT NULL,
    deleted boolean NOT NULL,
    object_id character varying(255) NOT NULL,
    content_type_id integer,
    user_id integer,
    uuid uuid,
    revision_id integer
);


--
-- Name: wagtailcore_modellogentry_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_modellogentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_modellogentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_page; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_page (
    id integer NOT NULL,
    path character varying(255) NOT NULL COLLATE pg_catalog."C",
    depth integer NOT NULL,
    numchild integer NOT NULL,
    title character varying(255) NOT NULL,
    slug character varying(255) NOT NULL,
    live boolean NOT NULL,
    has_unpublished_changes boolean NOT NULL,
    url_path text NOT NULL,
    seo_title character varying(255) NOT NULL,
    show_in_menus boolean NOT NULL,
    search_description text NOT NULL,
    go_live_at timestamp with time zone,
    expire_at timestamp with time zone,
    expired boolean NOT NULL,
    content_type_id integer NOT NULL,
    owner_id integer,
    locked boolean NOT NULL,
    latest_revision_created_at timestamp with time zone,
    first_published_at timestamp with time zone,
    live_revision_id integer,
    last_published_at timestamp with time zone,
    draft_title character varying(255) NOT NULL,
    locked_at timestamp with time zone,
    locked_by_id integer,
    translation_key uuid NOT NULL,
    locale_id integer NOT NULL,
    alias_of_id integer,
    latest_revision_id integer,
    CONSTRAINT wagtailcore_page_depth_check CHECK ((depth >= 0)),
    CONSTRAINT wagtailcore_page_numchild_check CHECK ((numchild >= 0))
);


--
-- Name: wagtailcore_page_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_page ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_page_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_pagelogentry; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_pagelogentry (
    id integer NOT NULL,
    label text NOT NULL,
    action character varying(255) NOT NULL,
    data jsonb NOT NULL,
    "timestamp" timestamp with time zone NOT NULL,
    content_changed boolean NOT NULL,
    deleted boolean NOT NULL,
    content_type_id integer,
    page_id integer NOT NULL,
    revision_id integer,
    user_id integer,
    uuid uuid
);


--
-- Name: wagtailcore_pagelogentry_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_pagelogentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_pagelogentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_revision; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_revision (
    id integer NOT NULL,
    submitted_for_moderation boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    content jsonb NOT NULL,
    approved_go_live_at timestamp with time zone,
    object_id character varying(255) NOT NULL,
    user_id integer,
    content_type_id integer NOT NULL,
    base_content_type_id integer NOT NULL,
    object_str text NOT NULL
);


--
-- Name: wagtailcore_pagerevision_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_revision ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_pagerevision_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_pagesubscription; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_pagesubscription (
    id integer NOT NULL,
    comment_notifications boolean NOT NULL,
    page_id integer NOT NULL,
    user_id integer NOT NULL
);


--
-- Name: wagtailcore_pagesubscription_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_pagesubscription ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_pagesubscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_pageviewrestriction; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_pageviewrestriction (
    id integer NOT NULL,
    password character varying(255) NOT NULL,
    page_id integer NOT NULL,
    restriction_type character varying(20) NOT NULL
);


--
-- Name: wagtailcore_pageviewrestriction_groups; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_pageviewrestriction_groups (
    id integer NOT NULL,
    pageviewrestriction_id integer NOT NULL,
    group_id integer NOT NULL
);


--
-- Name: wagtailcore_pageviewrestriction_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_pageviewrestriction_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_pageviewrestriction_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_pageviewrestriction_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_pageviewrestriction ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_pageviewrestriction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_referenceindex; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_referenceindex (
    id integer NOT NULL,
    object_id character varying(255) NOT NULL,
    to_object_id character varying(255) NOT NULL,
    model_path text NOT NULL,
    content_path text NOT NULL,
    content_path_hash uuid NOT NULL,
    base_content_type_id integer NOT NULL,
    content_type_id integer NOT NULL,
    to_content_type_id integer NOT NULL
);


--
-- Name: wagtailcore_referenceindex_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_referenceindex ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_referenceindex_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_site; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_site (
    id integer NOT NULL,
    hostname character varying(255) NOT NULL,
    port integer NOT NULL,
    is_default_site boolean NOT NULL,
    root_page_id integer NOT NULL,
    site_name character varying(255) NOT NULL
);


--
-- Name: wagtailcore_site_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_site ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_site_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_task; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_task (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    active boolean NOT NULL,
    content_type_id integer NOT NULL
);


--
-- Name: wagtailcore_task_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_task ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_task_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_taskstate; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_taskstate (
    id integer NOT NULL,
    status character varying(50) NOT NULL,
    started_at timestamp with time zone NOT NULL,
    finished_at timestamp with time zone,
    content_type_id integer NOT NULL,
    revision_id integer NOT NULL,
    task_id integer NOT NULL,
    workflow_state_id integer NOT NULL,
    finished_by_id integer,
    comment text NOT NULL
);


--
-- Name: wagtailcore_taskstate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_taskstate ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_taskstate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_workflow; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_workflow (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    active boolean NOT NULL
);


--
-- Name: wagtailcore_workflow_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_workflow ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_workflow_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_workflowcontenttype; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_workflowcontenttype (
    content_type_id integer NOT NULL,
    workflow_id integer NOT NULL
);


--
-- Name: wagtailcore_workflowpage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_workflowpage (
    page_id integer NOT NULL,
    workflow_id integer NOT NULL
);


--
-- Name: wagtailcore_workflowstate; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_workflowstate (
    id integer NOT NULL,
    status character varying(50) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    current_task_state_id integer,
    object_id character varying(255) NOT NULL,
    requested_by_id integer,
    workflow_id integer NOT NULL,
    content_type_id integer NOT NULL,
    base_content_type_id integer NOT NULL
);


--
-- Name: wagtailcore_workflowstate_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_workflowstate ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_workflowstate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailcore_workflowtask; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailcore_workflowtask (
    id integer NOT NULL,
    sort_order integer,
    task_id integer NOT NULL,
    workflow_id integer NOT NULL
);


--
-- Name: wagtailcore_workflowtask_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailcore_workflowtask ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailcore_workflowtask_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtaildocs_document; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtaildocs_document (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    file character varying(100) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    uploaded_by_user_id integer,
    collection_id integer NOT NULL,
    file_size integer,
    file_hash character varying(40) NOT NULL,
    CONSTRAINT wagtaildocs_document_file_size_check CHECK ((file_size >= 0))
);


--
-- Name: wagtaildocs_document_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtaildocs_document ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtaildocs_document_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtaildocs_uploadeddocument; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtaildocs_uploadeddocument (
    id integer NOT NULL,
    file character varying(200) NOT NULL,
    uploaded_by_user_id integer
);


--
-- Name: wagtaildocs_uploadeddocument_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtaildocs_uploadeddocument ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtaildocs_uploadeddocument_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailembeds_embed; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailembeds_embed (
    id integer NOT NULL,
    url text NOT NULL,
    max_width smallint,
    type character varying(10) NOT NULL,
    html text NOT NULL,
    title text NOT NULL,
    author_name text NOT NULL,
    provider_name text NOT NULL,
    thumbnail_url text NOT NULL,
    width integer,
    height integer,
    last_updated timestamp with time zone NOT NULL,
    hash character varying(32) NOT NULL,
    cache_until timestamp with time zone
);


--
-- Name: wagtailembeds_embed_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailembeds_embed ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailembeds_embed_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailforms_formsubmission; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailforms_formsubmission (
    id integer NOT NULL,
    form_data jsonb NOT NULL,
    submit_time timestamp with time zone NOT NULL,
    page_id integer NOT NULL
);


--
-- Name: wagtailforms_formsubmission_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailforms_formsubmission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailforms_formsubmission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailimages_image; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailimages_image (
    id integer NOT NULL,
    title character varying(255) NOT NULL,
    file character varying(100) NOT NULL,
    width integer NOT NULL,
    height integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    focal_point_x integer,
    focal_point_y integer,
    focal_point_width integer,
    focal_point_height integer,
    uploaded_by_user_id integer,
    file_size integer,
    collection_id integer NOT NULL,
    file_hash character varying(40) NOT NULL,
    CONSTRAINT wagtailimages_image_file_size_check CHECK ((file_size >= 0)),
    CONSTRAINT wagtailimages_image_focal_point_height_check CHECK ((focal_point_height >= 0)),
    CONSTRAINT wagtailimages_image_focal_point_width_check CHECK ((focal_point_width >= 0)),
    CONSTRAINT wagtailimages_image_focal_point_x_check CHECK ((focal_point_x >= 0)),
    CONSTRAINT wagtailimages_image_focal_point_y_check CHECK ((focal_point_y >= 0))
);


--
-- Name: wagtailimages_image_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailimages_image ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailimages_image_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailimages_rendition; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailimages_rendition (
    id integer NOT NULL,
    file character varying(100) NOT NULL,
    width integer NOT NULL,
    height integer NOT NULL,
    focal_point_key character varying(16) NOT NULL,
    filter_spec character varying(255) NOT NULL,
    image_id integer NOT NULL
);


--
-- Name: wagtailimages_rendition_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailimages_rendition ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailimages_rendition_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailimages_uploadedimage; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailimages_uploadedimage (
    id integer NOT NULL,
    file character varying(200) NOT NULL,
    uploaded_by_user_id integer
);


--
-- Name: wagtailimages_uploadedimage_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailimages_uploadedimage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailimages_uploadedimage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailredirects_redirect; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailredirects_redirect (
    id integer NOT NULL,
    old_path character varying(255) NOT NULL,
    is_permanent boolean NOT NULL,
    redirect_link character varying(255) NOT NULL,
    redirect_page_id integer,
    site_id integer,
    automatically_created boolean NOT NULL,
    created_at timestamp with time zone,
    redirect_page_route_path character varying(255) NOT NULL
);


--
-- Name: wagtailredirects_redirect_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailredirects_redirect ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailredirects_redirect_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailsearch_indexentry; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailsearch_indexentry (
    id integer NOT NULL,
    object_id character varying(50) NOT NULL,
    title_norm double precision NOT NULL,
    content_type_id integer NOT NULL,
    autocomplete tsvector NOT NULL,
    title tsvector NOT NULL,
    body tsvector NOT NULL
);


--
-- Name: wagtailsearch_indexentry_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailsearch_indexentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailsearch_indexentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailsearch_query; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailsearch_query (
    id integer NOT NULL,
    query_string character varying(255) NOT NULL
);


--
-- Name: wagtailsearch_query_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailsearch_query ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailsearch_query_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailsearch_querydailyhits; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailsearch_querydailyhits (
    id integer NOT NULL,
    date date NOT NULL,
    hits integer NOT NULL,
    query_id integer NOT NULL
);


--
-- Name: wagtailsearch_querydailyhits_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailsearch_querydailyhits ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailsearch_querydailyhits_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: wagtailusers_userprofile; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.wagtailusers_userprofile (
    id integer NOT NULL,
    submitted_notifications boolean NOT NULL,
    approved_notifications boolean NOT NULL,
    rejected_notifications boolean NOT NULL,
    user_id integer NOT NULL,
    preferred_language character varying(10) NOT NULL,
    current_time_zone character varying(40) NOT NULL,
    avatar character varying(100) NOT NULL,
    updated_comments_notifications boolean NOT NULL,
    dismissibles jsonb NOT NULL,
    theme character varying(40) NOT NULL
);


--
-- Name: wagtailusers_userprofile_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.wagtailusers_userprofile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.wagtailusers_userprofile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_group (id, name) FROM stdin;
1	Moderators
2	Editors
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
1	1	97
2	2	97
3	1	98
4	1	99
5	1	100
6	2	98
7	2	99
8	2	100
9	1	101
10	2	101
11	1	104
12	1	102
13	1	103
14	2	104
15	2	102
16	2	103
17	1	105
18	2	105
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add locale	4	add_locale
2	Can change locale	4	change_locale
3	Can delete locale	4	delete_locale
4	Can view locale	4	view_locale
5	Can add site	5	add_site
6	Can change site	5	change_site
7	Can delete site	5	delete_site
8	Can view site	5	view_site
9	Can add model log entry	6	add_modellogentry
10	Can change model log entry	6	change_modellogentry
11	Can delete model log entry	6	delete_modellogentry
12	Can view model log entry	6	view_modellogentry
13	Can add collection view restriction	7	add_collectionviewrestriction
14	Can change collection view restriction	7	change_collectionviewrestriction
15	Can delete collection view restriction	7	delete_collectionviewrestriction
16	Can view collection view restriction	7	view_collectionviewrestriction
17	Can add collection	8	add_collection
18	Can change collection	8	change_collection
19	Can delete collection	8	delete_collection
20	Can view collection	8	view_collection
21	Can add group collection permission	9	add_groupcollectionpermission
22	Can change group collection permission	9	change_groupcollectionpermission
23	Can delete group collection permission	9	delete_groupcollectionpermission
24	Can view group collection permission	9	view_groupcollectionpermission
25	Can add reference index	10	add_referenceindex
26	Can change reference index	10	change_referenceindex
27	Can delete reference index	10	delete_referenceindex
28	Can view reference index	10	view_referenceindex
29	Can add page	1	add_page
30	Can change page	1	change_page
31	Can delete page	1	delete_page
32	Can view page	1	view_page
33	Delete pages with children	1	bulk_delete_page
34	Lock/unlock pages you've locked	1	lock_page
35	Publish any page	1	publish_page
36	Unlock any page	1	unlock_page
37	Can add revision	11	add_revision
38	Can change revision	11	change_revision
39	Can delete revision	11	delete_revision
40	Can view revision	11	view_revision
41	Can add group page permission	12	add_grouppagepermission
42	Can change group page permission	12	change_grouppagepermission
43	Can delete group page permission	12	delete_grouppagepermission
44	Can view group page permission	12	view_grouppagepermission
45	Can add page view restriction	13	add_pageviewrestriction
46	Can change page view restriction	13	change_pageviewrestriction
47	Can delete page view restriction	13	delete_pageviewrestriction
48	Can view page view restriction	13	view_pageviewrestriction
49	Can add workflow page	14	add_workflowpage
50	Can change workflow page	14	change_workflowpage
51	Can delete workflow page	14	delete_workflowpage
52	Can view workflow page	14	view_workflowpage
53	Can add workflow content type	15	add_workflowcontenttype
54	Can change workflow content type	15	change_workflowcontenttype
55	Can delete workflow content type	15	delete_workflowcontenttype
56	Can view workflow content type	15	view_workflowcontenttype
57	Can add workflow task order	16	add_workflowtask
58	Can change workflow task order	16	change_workflowtask
59	Can delete workflow task order	16	delete_workflowtask
60	Can view workflow task order	16	view_workflowtask
61	Can add task	17	add_task
62	Can change task	17	change_task
63	Can delete task	17	delete_task
64	Can view task	17	view_task
65	Can add workflow	18	add_workflow
66	Can change workflow	18	change_workflow
67	Can delete workflow	18	delete_workflow
68	Can view workflow	18	view_workflow
69	Can add Group approval task	2	add_groupapprovaltask
70	Can change Group approval task	2	change_groupapprovaltask
71	Can delete Group approval task	2	delete_groupapprovaltask
72	Can view Group approval task	2	view_groupapprovaltask
73	Can add Workflow state	19	add_workflowstate
74	Can change Workflow state	19	change_workflowstate
75	Can delete Workflow state	19	delete_workflowstate
76	Can view Workflow state	19	view_workflowstate
77	Can add Task state	20	add_taskstate
78	Can change Task state	20	change_taskstate
79	Can delete Task state	20	delete_taskstate
80	Can view Task state	20	view_taskstate
81	Can add page log entry	21	add_pagelogentry
82	Can change page log entry	21	change_pagelogentry
83	Can delete page log entry	21	delete_pagelogentry
84	Can view page log entry	21	view_pagelogentry
85	Can add comment	22	add_comment
86	Can change comment	22	change_comment
87	Can delete comment	22	delete_comment
88	Can view comment	22	view_comment
89	Can add comment reply	23	add_commentreply
90	Can change comment reply	23	change_commentreply
91	Can delete comment reply	23	delete_commentreply
92	Can view comment reply	23	view_commentreply
93	Can add page subscription	24	add_pagesubscription
94	Can change page subscription	24	change_pagesubscription
95	Can delete page subscription	24	delete_pagesubscription
96	Can view page subscription	24	view_pagesubscription
97	Can access Wagtail admin	25	access_admin
98	Can add document	26	add_document
99	Can change document	26	change_document
100	Can delete document	26	delete_document
101	Can choose document	26	choose_document
102	Can add image	27	add_image
103	Can change image	27	change_image
104	Can delete image	27	delete_image
105	Can choose image	27	choose_image
106	Can add home page	3	add_homepage
107	Can change home page	3	change_homepage
108	Can delete home page	3	delete_homepage
109	Can view home page	3	view_homepage
110	Can add article chapter page	28	add_articlechapterpage
111	Can change article chapter page	28	change_articlechapterpage
112	Can delete article chapter page	28	delete_articlechapterpage
113	Can view article chapter page	28	view_articlechapterpage
114	Can add article index page	29	add_articleindexpage
115	Can change article index page	29	change_articleindexpage
116	Can delete article index page	29	delete_articleindexpage
117	Can view article index page	29	view_articleindexpage
118	Can add article page	30	add_articlepage
119	Can change article page	30	change_articlepage
120	Can delete article page	30	delete_articlepage
121	Can view article page	30	view_articlepage
122	Can add package index page	31	add_packageindexpage
123	Can change package index page	31	change_packageindexpage
124	Can delete package index page	31	delete_packageindexpage
125	Can view package index page	31	view_packageindexpage
126	Can add package page	32	add_packagepage
127	Can change package page	32	change_packagepage
128	Can delete package page	32	delete_packagepage
129	Can view package page	32	view_packagepage
130	Can add navigation	33	add_navigation
131	Can change navigation	33	change_navigation
132	Can delete navigation	33	delete_navigation
133	Can view navigation	33	view_navigation
134	Can add form submission	34	add_formsubmission
135	Can change form submission	34	change_formsubmission
136	Can delete form submission	34	delete_formsubmission
137	Can view form submission	34	view_formsubmission
138	Can add redirect	35	add_redirect
139	Can change redirect	35	change_redirect
140	Can delete redirect	35	delete_redirect
141	Can view redirect	35	view_redirect
142	Can add embed	36	add_embed
143	Can change embed	36	change_embed
144	Can delete embed	36	delete_embed
145	Can view embed	36	view_embed
146	Can add user profile	37	add_userprofile
147	Can change user profile	37	change_userprofile
148	Can delete user profile	37	delete_userprofile
149	Can view user profile	37	view_userprofile
150	Can view document	26	view_document
151	Can add uploaded document	38	add_uploadeddocument
152	Can change uploaded document	38	change_uploadeddocument
153	Can delete uploaded document	38	delete_uploadeddocument
154	Can view uploaded document	38	view_uploadeddocument
155	Can view image	27	view_image
156	Can add rendition	39	add_rendition
157	Can change rendition	39	change_rendition
158	Can delete rendition	39	delete_rendition
159	Can view rendition	39	view_rendition
160	Can add uploaded image	40	add_uploadedimage
161	Can change uploaded image	40	change_uploadedimage
162	Can delete uploaded image	40	delete_uploadedimage
163	Can view uploaded image	40	view_uploadedimage
164	Can add query	41	add_query
165	Can change query	41	change_query
166	Can delete query	41	delete_query
167	Can view query	41	view_query
168	Can add Query Daily Hits	42	add_querydailyhits
169	Can change Query Daily Hits	42	change_querydailyhits
170	Can delete Query Daily Hits	42	delete_querydailyhits
171	Can view Query Daily Hits	42	view_querydailyhits
172	Can add index entry	43	add_indexentry
173	Can change index entry	43	change_indexentry
174	Can delete index entry	43	delete_indexentry
175	Can view index entry	43	view_indexentry
176	Can add tag	44	add_tag
177	Can change tag	44	change_tag
178	Can delete tag	44	delete_tag
179	Can view tag	44	view_tag
180	Can add tagged item	45	add_taggeditem
181	Can change tagged item	45	change_taggeditem
182	Can delete tagged item	45	delete_taggeditem
183	Can view tagged item	45	view_taggeditem
184	Can add log entry	46	add_logentry
185	Can change log entry	46	change_logentry
186	Can delete log entry	46	delete_logentry
187	Can view log entry	46	view_logentry
188	Can add permission	47	add_permission
189	Can change permission	47	change_permission
190	Can delete permission	47	delete_permission
191	Can view permission	47	view_permission
192	Can add group	48	add_group
193	Can change group	48	change_group
194	Can delete group	48	delete_group
195	Can view group	48	view_group
196	Can add user	49	add_user
197	Can change user	49	change_user
198	Can delete user	49	delete_user
199	Can view user	49	view_user
200	Can add content type	50	add_contenttype
201	Can change content type	50	change_contenttype
202	Can delete content type	50	delete_contenttype
203	Can view content type	50	view_contenttype
204	Can add session	51	add_session
205	Can change session	51	change_session
206	Can delete session	51	delete_session
207	Can view session	51	view_session
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
1	pbkdf2_sha256$390000$smWZFFJzWeFaQOhY5U0p7k$y5fxXNEp5JHMrz4CD+U69oS/BgCz+Tevp2jVAciJFKc=	2025-03-15 13:32:10.074712+00	t	admin			nickmoreton@me.com	t	t	2023-08-28 15:21:37.673+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: core_navigation; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.core_navigation (id, main_menu, site_id) FROM stdin;
1	[{"id": "ea9b2284-be03-43b8-bf77-034f4168fdf1", "type": "main_menu", "value": {"page": 4, "label": "Articles"}}, {"id": "a9a8aabc-05da-4891-9e16-a2fd2f63f0f7", "type": "main_menu", "value": {"page": 5, "label": "Packages"}}]	2
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	wagtailcore	page
2	wagtailcore	groupapprovaltask
3	home	homepage
4	wagtailcore	locale
5	wagtailcore	site
6	wagtailcore	modellogentry
7	wagtailcore	collectionviewrestriction
8	wagtailcore	collection
9	wagtailcore	groupcollectionpermission
10	wagtailcore	referenceindex
11	wagtailcore	revision
12	wagtailcore	grouppagepermission
13	wagtailcore	pageviewrestriction
14	wagtailcore	workflowpage
15	wagtailcore	workflowcontenttype
16	wagtailcore	workflowtask
17	wagtailcore	task
18	wagtailcore	workflow
19	wagtailcore	workflowstate
20	wagtailcore	taskstate
21	wagtailcore	pagelogentry
22	wagtailcore	comment
23	wagtailcore	commentreply
24	wagtailcore	pagesubscription
25	wagtailadmin	admin
26	wagtaildocs	document
27	wagtailimages	image
28	pages	articlechapterpage
29	pages	articleindexpage
30	pages	articlepage
31	pages	packageindexpage
32	pages	packagepage
33	core	navigation
34	wagtailforms	formsubmission
35	wagtailredirects	redirect
36	wagtailembeds	embed
37	wagtailusers	userprofile
38	wagtaildocs	uploadeddocument
39	wagtailimages	rendition
40	wagtailimages	uploadedimage
41	wagtailsearch	query
42	wagtailsearch	querydailyhits
43	wagtailsearch	indexentry
44	taggit	tag
45	taggit	taggeditem
46	admin	logentry
47	auth	permission
48	auth	group
49	auth	user
50	contenttypes	contenttype
51	sessions	session
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-03-15 11:56:14.725088+00
2	auth	0001_initial	2025-03-15 11:56:14.74325+00
3	admin	0001_initial	2025-03-15 11:56:14.75103+00
4	admin	0002_logentry_remove_auto_add	2025-03-15 11:56:14.755585+00
5	admin	0003_logentry_add_action_flag_choices	2025-03-15 11:56:14.759935+00
6	contenttypes	0002_remove_content_type_name	2025-03-15 11:56:14.767192+00
7	auth	0002_alter_permission_name_max_length	2025-03-15 11:56:14.771455+00
8	auth	0003_alter_user_email_max_length	2025-03-15 11:56:14.775558+00
9	auth	0004_alter_user_username_opts	2025-03-15 11:56:14.779212+00
10	auth	0005_alter_user_last_login_null	2025-03-15 11:56:14.784112+00
11	auth	0006_require_contenttypes_0002	2025-03-15 11:56:14.785845+00
12	auth	0007_alter_validators_add_error_messages	2025-03-15 11:56:14.789066+00
13	auth	0008_alter_user_username_max_length	2025-03-15 11:56:14.793271+00
14	auth	0009_alter_user_last_name_max_length	2025-03-15 11:56:14.796947+00
15	auth	0010_alter_group_name_max_length	2025-03-15 11:56:14.800745+00
16	auth	0011_update_proxy_permissions	2025-03-15 11:56:14.804722+00
17	auth	0012_alter_user_first_name_max_length	2025-03-15 11:56:14.808306+00
18	wagtailcore	0001_initial	2025-03-15 11:56:14.873948+00
19	wagtailcore	0002_initial_data	2025-03-15 11:56:14.875296+00
20	wagtailcore	0003_add_uniqueness_constraint_on_group_page_permission	2025-03-15 11:56:14.876763+00
21	wagtailcore	0004_page_locked	2025-03-15 11:56:14.878126+00
22	wagtailcore	0005_add_page_lock_permission_to_moderators	2025-03-15 11:56:14.879385+00
23	wagtailcore	0006_add_lock_page_permission	2025-03-15 11:56:14.880681+00
24	wagtailcore	0007_page_latest_revision_created_at	2025-03-15 11:56:14.881894+00
25	wagtailcore	0008_populate_latest_revision_created_at	2025-03-15 11:56:14.883246+00
26	wagtailcore	0009_remove_auto_now_add_from_pagerevision_created_at	2025-03-15 11:56:14.884427+00
27	wagtailcore	0010_change_page_owner_to_null_on_delete	2025-03-15 11:56:14.885593+00
28	wagtailcore	0011_page_first_published_at	2025-03-15 11:56:14.886711+00
29	wagtailcore	0012_extend_page_slug_field	2025-03-15 11:56:14.887902+00
30	wagtailcore	0013_update_golive_expire_help_text	2025-03-15 11:56:14.889157+00
31	wagtailcore	0014_add_verbose_name	2025-03-15 11:56:14.890516+00
32	wagtailcore	0015_add_more_verbose_names	2025-03-15 11:56:14.891664+00
33	wagtailcore	0016_change_page_url_path_to_text_field	2025-03-15 11:56:14.892891+00
34	wagtailcore	0017_change_edit_page_permission_description	2025-03-15 11:56:14.897891+00
35	wagtailcore	0018_pagerevision_submitted_for_moderation_index	2025-03-15 11:56:14.902849+00
36	wagtailcore	0019_verbose_names_cleanup	2025-03-15 11:56:14.918334+00
37	wagtailcore	0020_add_index_on_page_first_published_at	2025-03-15 11:56:14.923388+00
38	wagtailcore	0021_capitalizeverbose	2025-03-15 11:56:15.009415+00
39	wagtailcore	0022_add_site_name	2025-03-15 11:56:15.014971+00
40	wagtailcore	0023_alter_page_revision_on_delete_behaviour	2025-03-15 11:56:15.020438+00
41	wagtailcore	0024_collection	2025-03-15 11:56:15.026097+00
42	wagtailcore	0025_collection_initial_data	2025-03-15 11:56:15.032134+00
43	wagtailcore	0026_group_collection_permission	2025-03-15 11:56:15.043441+00
44	wagtailcore	0027_fix_collection_path_collation	2025-03-15 11:56:15.050635+00
45	wagtailcore	0024_alter_page_content_type_on_delete_behaviour	2025-03-15 11:56:15.055973+00
46	wagtailcore	0028_merge	2025-03-15 11:56:15.057495+00
47	wagtailcore	0029_unicode_slugfield_dj19	2025-03-15 11:56:15.061958+00
48	wagtailcore	0030_index_on_pagerevision_created_at	2025-03-15 11:56:15.066896+00
49	wagtailcore	0031_add_page_view_restriction_types	2025-03-15 11:56:15.083325+00
50	wagtailcore	0032_add_bulk_delete_page_permission	2025-03-15 11:56:15.089234+00
51	wagtailcore	0033_remove_golive_expiry_help_text	2025-03-15 11:56:15.128195+00
52	wagtailcore	0034_page_live_revision	2025-03-15 11:56:15.136525+00
53	wagtailcore	0035_page_last_published_at	2025-03-15 11:56:15.141304+00
54	wagtailcore	0036_populate_page_last_published_at	2025-03-15 11:56:15.146938+00
55	wagtailcore	0037_set_page_owner_editable	2025-03-15 11:56:15.154011+00
56	wagtailcore	0038_make_first_published_at_editable	2025-03-15 11:56:15.159749+00
57	wagtailcore	0039_collectionviewrestriction	2025-03-15 11:56:15.17477+00
58	wagtailcore	0040_page_draft_title	2025-03-15 11:56:15.183506+00
59	wagtailcore	0041_group_collection_permissions_verbose_name_plural	2025-03-15 11:56:15.18834+00
60	wagtailcore	0042_index_on_pagerevision_approved_go_live_at	2025-03-15 11:56:15.193929+00
61	wagtailcore	0043_lock_fields	2025-03-15 11:56:15.205135+00
62	wagtailcore	0044_add_unlock_grouppagepermission	2025-03-15 11:56:15.210056+00
63	wagtailcore	0045_assign_unlock_grouppagepermission	2025-03-15 11:56:15.220429+00
64	wagtailcore	0046_site_name_remove_null	2025-03-15 11:56:15.225049+00
65	wagtailcore	0047_add_workflow_models	2025-03-15 11:56:15.282525+00
66	wagtailcore	0048_add_default_workflows	2025-03-15 11:56:15.29735+00
67	wagtailcore	0049_taskstate_finished_by	2025-03-15 11:56:15.307997+00
68	wagtailcore	0050_workflow_rejected_to_needs_changes	2025-03-15 11:56:15.325179+00
69	wagtailcore	0051_taskstate_comment	2025-03-15 11:56:15.331816+00
70	wagtailcore	0052_pagelogentry	2025-03-15 11:56:15.344785+00
71	home	0001_initial	2025-03-15 11:56:15.356368+00
72	home	0002_create_homepage	2025-03-15 11:56:15.404533+00
73	wagtailcore	0053_locale_model	2025-03-15 11:56:15.411919+00
74	wagtailcore	0054_initial_locale	2025-03-15 11:56:15.420425+00
75	wagtailcore	0055_page_locale_fields	2025-03-15 11:56:15.442909+00
76	wagtailcore	0056_page_locale_fields_populate	2025-03-15 11:56:15.453276+00
77	wagtailcore	0057_page_locale_fields_notnull	2025-03-15 11:56:15.471606+00
78	wagtailcore	0058_page_alias_of	2025-03-15 11:56:15.482962+00
79	wagtailcore	0059_apply_collection_ordering	2025-03-15 11:56:15.491541+00
80	wagtailcore	0060_fix_workflow_unique_constraint	2025-03-15 11:56:15.504473+00
81	wagtailcore	0061_change_promote_tab_helpt_text_and_verbose_names	2025-03-15 11:56:15.517782+00
82	wagtailcore	0062_comment_models_and_pagesubscription	2025-03-15 11:56:15.547444+00
83	wagtailcore	0063_modellogentry	2025-03-15 11:56:15.560933+00
84	wagtailcore	0064_log_timestamp_indexes	2025-03-15 11:56:15.574442+00
85	wagtailcore	0065_log_entry_uuid	2025-03-15 11:56:15.588274+00
86	wagtailcore	0066_collection_management_permissions	2025-03-15 11:56:15.600966+00
87	wagtailcore	0067_alter_pagerevision_content_json	2025-03-15 11:56:15.619208+00
88	wagtailcore	0068_log_entry_empty_object	2025-03-15 11:56:15.664282+00
89	wagtailcore	0069_log_entry_jsonfield	2025-03-15 11:56:15.69268+00
90	wagtailcore	0070_rename_pagerevision_revision	2025-03-15 11:56:15.79106+00
91	wagtailcore	0071_populate_revision_content_type	2025-03-15 11:56:15.80151+00
92	wagtailcore	0072_alter_revision_content_type_notnull	2025-03-15 11:56:15.821592+00
93	wagtailcore	0073_page_latest_revision	2025-03-15 11:56:15.834772+00
94	wagtailcore	0074_revision_object_str	2025-03-15 11:56:15.842671+00
95	wagtailcore	0075_populate_latest_revision_and_revision_object_str	2025-03-15 11:56:15.860734+00
96	wagtailcore	0076_modellogentry_revision	2025-03-15 11:56:15.872808+00
97	wagtailcore	0077_alter_revision_user	2025-03-15 11:56:15.883612+00
98	wagtailcore	0078_referenceindex	2025-03-15 11:56:15.932671+00
99	wagtailcore	0079_rename_taskstate_page_revision	2025-03-15 11:56:15.942745+00
100	wagtailcore	0080_generic_workflowstate	2025-03-15 11:56:16.000295+00
101	wagtailcore	0081_populate_workflowstate_content_type	2025-03-15 11:56:16.010903+00
102	wagtailcore	0082_alter_workflowstate_content_type_notnull	2025-03-15 11:56:16.034823+00
103	wagtailcore	0083_workflowcontenttype	2025-03-15 11:56:16.047891+00
104	wagtailcore	0084_add_default_page_permissions	2025-03-15 11:56:16.056817+00
105	wagtailcore	0085_add_grouppagepermission_permission	2025-03-15 11:56:16.076104+00
106	wagtailcore	0086_populate_grouppagepermission_permission	2025-03-15 11:56:16.104936+00
107	wagtailcore	0087_alter_grouppagepermission_unique_together_and_more	2025-03-15 11:56:16.167721+00
108	wagtailcore	0088_fix_log_entry_json_timestamps	2025-03-15 11:56:16.192502+00
109	wagtailcore	0089_log_entry_data_json_null_to_object	2025-03-15 11:56:16.203716+00
110	core	0001_initial	2025-03-15 11:56:16.218779+00
111	home	0003_homepage_body	2025-03-15 11:56:16.226207+00
112	home	0004_alter_homepage_body	2025-03-15 11:56:16.232698+00
113	pages	0001_initial	2025-03-15 11:56:16.285201+00
114	pages	0002_alter_articlechapterpage_body_and_more	2025-03-15 11:56:16.315052+00
115	sessions	0001_initial	2025-03-15 11:56:16.320286+00
116	taggit	0001_initial	2025-03-15 11:56:16.338041+00
117	taggit	0002_auto_20150616_2121	2025-03-15 11:56:16.344538+00
118	taggit	0003_taggeditem_add_unique_index	2025-03-15 11:56:16.352213+00
119	taggit	0004_alter_taggeditem_content_type_alter_taggeditem_tag	2025-03-15 11:56:16.409375+00
120	taggit	0005_auto_20220424_2025	2025-03-15 11:56:16.414028+00
121	wagtailadmin	0001_create_admin_access_permissions	2025-03-15 11:56:16.427917+00
122	wagtailadmin	0002_admin	2025-03-15 11:56:16.430641+00
123	wagtailadmin	0003_admin_managed	2025-03-15 11:56:16.435404+00
124	wagtaildocs	0001_initial	2025-03-15 11:56:16.452749+00
125	wagtaildocs	0002_initial_data	2025-03-15 11:56:16.467624+00
126	wagtaildocs	0003_add_verbose_names	2025-03-15 11:56:16.492443+00
127	wagtaildocs	0004_capitalizeverbose	2025-03-15 11:56:16.536061+00
128	wagtaildocs	0005_document_collection	2025-03-15 11:56:16.55239+00
129	wagtaildocs	0006_copy_document_permissions_to_collections	2025-03-15 11:56:16.567681+00
130	wagtaildocs	0005_alter_uploaded_by_user_on_delete_action	2025-03-15 11:56:16.580714+00
131	wagtaildocs	0007_merge	2025-03-15 11:56:16.582344+00
132	wagtaildocs	0008_document_file_size	2025-03-15 11:56:16.591237+00
133	wagtaildocs	0009_document_verbose_name_plural	2025-03-15 11:56:16.601502+00
134	wagtaildocs	0010_document_file_hash	2025-03-15 11:56:16.609948+00
135	wagtaildocs	0011_add_choose_permissions	2025-03-15 11:56:16.678991+00
136	wagtaildocs	0012_uploadeddocument	2025-03-15 11:56:16.695024+00
137	wagtailembeds	0001_initial	2025-03-15 11:56:16.699457+00
138	wagtailembeds	0002_add_verbose_names	2025-03-15 11:56:16.702926+00
139	wagtailembeds	0003_capitalizeverbose	2025-03-15 11:56:16.706067+00
140	wagtailembeds	0004_embed_verbose_name_plural	2025-03-15 11:56:16.708621+00
141	wagtailembeds	0005_specify_thumbnail_url_max_length	2025-03-15 11:56:16.711666+00
142	wagtailembeds	0006_add_embed_hash	2025-03-15 11:56:16.714363+00
143	wagtailembeds	0007_populate_hash	2025-03-15 11:56:16.728625+00
144	wagtailembeds	0008_allow_long_urls	2025-03-15 11:56:16.737525+00
145	wagtailembeds	0009_embed_cache_until	2025-03-15 11:56:16.741759+00
146	wagtailforms	0001_initial	2025-03-15 11:56:16.758361+00
147	wagtailforms	0002_add_verbose_names	2025-03-15 11:56:16.771815+00
148	wagtailforms	0003_capitalizeverbose	2025-03-15 11:56:16.785196+00
149	wagtailforms	0004_add_verbose_name_plural	2025-03-15 11:56:16.793956+00
150	wagtailforms	0005_alter_formsubmission_form_data	2025-03-15 11:56:16.803301+00
151	wagtailimages	0001_initial	2025-03-15 11:56:16.865031+00
152	wagtailimages	0002_initial_data	2025-03-15 11:56:16.867524+00
153	wagtailimages	0003_fix_focal_point_fields	2025-03-15 11:56:16.869378+00
154	wagtailimages	0004_make_focal_point_key_not_nullable	2025-03-15 11:56:16.871245+00
155	wagtailimages	0005_make_filter_spec_unique	2025-03-15 11:56:16.873111+00
156	wagtailimages	0006_add_verbose_names	2025-03-15 11:56:16.874807+00
157	wagtailimages	0007_image_file_size	2025-03-15 11:56:16.876369+00
158	wagtailimages	0008_image_created_at_index	2025-03-15 11:56:16.877833+00
159	wagtailimages	0009_capitalizeverbose	2025-03-15 11:56:16.879295+00
160	wagtailimages	0010_change_on_delete_behaviour	2025-03-15 11:56:16.880637+00
161	wagtailimages	0011_image_collection	2025-03-15 11:56:16.881957+00
162	wagtailimages	0012_copy_image_permissions_to_collections	2025-03-15 11:56:16.883299+00
163	wagtailimages	0013_make_rendition_upload_callable	2025-03-15 11:56:16.884527+00
164	wagtailimages	0014_add_filter_spec_field	2025-03-15 11:56:16.88578+00
165	wagtailimages	0015_fill_filter_spec_field	2025-03-15 11:56:16.887096+00
166	wagtailimages	0016_deprecate_rendition_filter_relation	2025-03-15 11:56:16.888193+00
167	wagtailimages	0017_reduce_focal_point_key_max_length	2025-03-15 11:56:16.889137+00
168	wagtailimages	0018_remove_rendition_filter	2025-03-15 11:56:16.890084+00
169	wagtailimages	0019_delete_filter	2025-03-15 11:56:16.89099+00
170	wagtailimages	0020_add-verbose-name	2025-03-15 11:56:16.891865+00
171	wagtailimages	0021_image_file_hash	2025-03-15 11:56:16.892693+00
172	wagtailimages	0022_uploadedimage	2025-03-15 11:56:16.908032+00
173	wagtailimages	0023_add_choose_permissions	2025-03-15 11:56:16.976609+00
174	wagtailimages	0024_index_image_file_hash	2025-03-15 11:56:16.987113+00
175	wagtailimages	0025_alter_image_file_alter_rendition_file	2025-03-15 11:56:16.999788+00
176	wagtailredirects	0001_initial	2025-03-15 11:56:17.018386+00
177	wagtailredirects	0002_add_verbose_names	2025-03-15 11:56:17.040842+00
178	wagtailredirects	0003_make_site_field_editable	2025-03-15 11:56:17.057095+00
179	wagtailredirects	0004_set_unique_on_path_and_site	2025-03-15 11:56:17.074264+00
180	wagtailredirects	0005_capitalizeverbose	2025-03-15 11:56:17.124076+00
181	wagtailredirects	0006_redirect_increase_max_length	2025-03-15 11:56:17.133674+00
182	wagtailredirects	0007_add_autocreate_fields	2025-03-15 11:56:17.189953+00
183	wagtailredirects	0008_add_verbose_name_plural	2025-03-15 11:56:17.199114+00
184	wagtailsearch	0001_initial	2025-03-15 11:56:17.23523+00
185	wagtailsearch	0002_add_verbose_names	2025-03-15 11:56:17.264219+00
186	wagtailsearch	0003_remove_editors_pick	2025-03-15 11:56:17.267104+00
187	wagtailsearch	0004_querydailyhits_verbose_name_plural	2025-03-15 11:56:17.270412+00
188	wagtailsearch	0005_create_indexentry	2025-03-15 11:56:17.294091+00
189	wagtailsearch	0006_customise_indexentry	2025-03-15 11:56:17.32447+00
190	wagtailsearch	0007_delete_editorspick	2025-03-15 11:56:17.329311+00
191	wagtailusers	0001_initial	2025-03-15 11:56:17.346777+00
192	wagtailusers	0002_add_verbose_name_on_userprofile	2025-03-15 11:56:17.369226+00
193	wagtailusers	0003_add_verbose_names	2025-03-15 11:56:17.378489+00
194	wagtailusers	0004_capitalizeverbose	2025-03-15 11:56:17.438802+00
195	wagtailusers	0005_make_related_name_wagtail_specific	2025-03-15 11:56:17.45526+00
196	wagtailusers	0006_userprofile_prefered_language	2025-03-15 11:56:17.464514+00
197	wagtailusers	0007_userprofile_current_time_zone	2025-03-15 11:56:17.475385+00
198	wagtailusers	0008_userprofile_avatar	2025-03-15 11:56:17.484372+00
199	wagtailusers	0009_userprofile_verbose_name_plural	2025-03-15 11:56:17.493338+00
200	wagtailusers	0010_userprofile_updated_comments_notifications	2025-03-15 11:56:17.503424+00
201	wagtailusers	0011_userprofile_dismissibles	2025-03-15 11:56:17.512484+00
202	wagtailusers	0012_userprofile_theme	2025-03-15 11:56:17.521637+00
203	wagtailimages	0001_squashed_0021	2025-03-15 11:56:17.525117+00
204	wagtailcore	0001_squashed_0016_change_page_url_path_to_text_field	2025-03-15 11:56:17.527176+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
3sjvx9jegk7jz0b0k1bfowoy0m0khulr	.eJxVjEEOwiAQRe_C2hCgnUFcuvcMZAqDRQ2Y0iYa4921SRe6_e_99xKelnn0S-PJ5ygOQovd7zZQuHJZQbxQOVcZapmnPMhVkRtt8lQj346b-xcYqY3ftwJMrkPDqo8pUAcAuk-cLCrrSKGKgVk7GKxTGjvqwSZjkAwh8J7CGm3cWq7F8-Oep6c4qPcHbYY-rw:1ttRcY:9CnTLt1SgTGkluipfqb7Tbc43eQaaOoupthEBkNFoeE	2025-03-29 13:32:10.081829+00
\.


--
-- Data for Name: home_homepage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.home_homepage (page_ptr_id, body) FROM stdin;
3	[{"id": "7d5b1f49-7c6c-4cc6-8f72-48ec28825611", "type": "code", "value": {"code": "who_am_i:\\r\\n  name: \\"Nick Moreton\\"\\r\\n  works_at: https://torchbox.com\\r\\n  preferred_cms: https://wagtail.org", "language": "yaml"}}]
\.


--
-- Data for Name: pages_articlechapterpage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pages_articlechapterpage (page_ptr_id, body, excerpt) FROM stdin;
7	[{"id": "41fa1bc3-eaf2-499b-94a0-ed392ef94063", "type": "rich_text", "value": "<p data-block-key=\\"jcfbx\\">I&#x27;m using Github for this project.</p><p data-block-key=\\"163ct\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\"v2q5\\">Clone the newly created repo to your local development machine. It will have a remote called origin. Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>"}]	
8	[{"id": "88f602f7-791c-4b2f-8d6a-824fc676938b", "type": "rich_text", "value": "<p data-block-key=\\"hpdos\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\"ej8ua\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\"d3l4i\\">Choose:</p><ul><li data-block-key=\\"fjhas\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\"3jkh2\\">Manual setup</li><li data-block-key=\\"56ss2\\">Python (latest you can choose)</li></ul><p data-block-key=\\"b8cgl\\">This will create the webapp and take you to the settings page for the webapp.</p>"}, {"id": "f15a92ef-399f-4e57-b7ef-36d403534213", "type": "rich_text", "value": "<h2 data-block-key=\\"ibsy0\\">Configure your domain name</h2><p data-block-key=\\"f0gfu\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\"https://help.pythonanywhere.com/pages/CustomDomains\\">PA Help</a></p><p data-block-key=\\"e8gnk\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>"}, {"id": "e578d30e-569b-4f61-ac99-bc30728bdb0c", "type": "callout", "value": "<p data-block-key=\\"aim0l\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\"623pq\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>"}, {"id": "94a5c9c1-b90d-4212-90fa-ba5c44d8d987", "type": "rich_text", "value": "<p data-block-key=\\"eu9el\\"><b>Add directories for your webapp</b></p><p data-block-key=\\"6ja2l\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\"8m5t3\\"><b>Source code</b></p><p data-block-key=\\"c3oq\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\"6m64\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\"er3ru\\"><b>Bare repos storage</b></p><p data-block-key=\\"auqrg\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\"92qj7\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\"45g16\\"><b>Environment variables storage</b></p><p data-block-key=\\"bnd4r\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\"37hk4\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\"1n2pj\\"><b>Virtual Environments</b></p><p data-block-key=\\"c1m56\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\">PA Help</a></p>"}, {"id": "8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0", "type": "rich_text", "value": "<h2 data-block-key=\\"7dadf\\">Create a virtual environment</h2><p data-block-key=\\"1889r\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\"52mtq\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>"}, {"id": "ee4f1fb8-f735-4e84-8fbd-1257f323fa68", "type": "code", "value": {"code": "mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10", "language": "bash"}}, {"id": "2f00648a-899f-4a00-8219-da3417e4424a", "type": "rich_text", "value": "<p data-block-key=\\"1l969\\">To confirm the virtual environment has been created run:</p>"}, {"id": "5c0af363-afa9-4e6a-b6b1-b43d8e8c6664", "type": "code", "value": {"code": "ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\r\\n> bin lib pyvenv.cfg", "language": "bash"}}, {"id": "5cb1712b-c573-433b-999a-d61c76fa2975", "type": "rich_text", "value": "<h2 data-block-key=\\"fkio\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\"90qpf\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\"ebhdi\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\"5l882\\">Create a .env file in the environment variables directory created earlier:</p>"}, {"id": "4eb4f9d5-79c4-4f46-8f4f-6f7f64f5b7ed", "type": "code", "value": {"code": "touch ~/.env-settings/nickmoreton.co.uk/.env", "language": "bash"}}, {"id": "3874a6b0-c2f7-4689-8d82-6f7d0a976bae", "type": "rich_text", "value": "<p data-block-key=\\"9hmnn\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\"42ba5\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>"}, {"id": "0475fc58-71d8-45b6-b834-91b2a3bb7b7d", "type": "code", "value": {"code": "echo \\"set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a\\" >> ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate", "language": "bash"}}, {"id": "630f9bf9-40f8-4204-a6ad-9123ad1414ef", "type": "rich_text", "value": "<p data-block-key=\\"bu4pk\\"><a href=\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\">PA help</a> about environment variables</p>"}, {"id": "d4ef1dbc-48d8-4d33-8471-c1eef4597b51", "type": "rich_text", "value": "<h2 data-block-key=\\"7fs22\\">Set up a git bare repo</h2>"}, {"id": "f3b58428-d467-4ddc-b1c5-8afdf5f3c44f", "type": "callout", "value": "<p data-block-key=\\"9xexe\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\"https://blog.pythonanywhere.com/87/\\">A PA Blog Post</a> about bare repos.</p>"}, {"id": "076b0400-646e-46d1-9684-a4ae2e5a6e97", "type": "rich_text", "value": "<p data-block-key=\\"7dj0r\\">Open the Consoles tab open a new console.</p><p data-block-key=\\"f0jqd\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p>"}, {"id": "64d72776-e9ef-434a-820b-ccfb49ad8cac", "type": "code", "value": {"code": "cd ~/bare-repos/nickmoreton.co.uk.git/", "language": "bash"}}, {"id": "340f3162-b74b-40d7-a5d8-1cee66d11fc0", "type": "rich_text", "value": "<p data-block-key=\\"dovrj\\">and run:</p>"}, {"id": "a18c1778-23e4-4463-85ce-0c20bb03d389", "type": "code", "value": {"code": "git init --bare", "language": "bash"}}, {"id": "46c9fa02-1c81-4936-bf16-4dd3de9dc6ef", "type": "rich_text", "value": "<p data-block-key=\\"3pm7g\\"><a href=\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p>"}, {"id": "b3438edb-7ac6-44ed-a39f-30d7d47b592a", "type": "rich_text", "value": "<h2 data-block-key=\\"34hjl\\">Create a post-receive hook</h2>"}, {"id": "8f67a122-6ee7-4d5c-a803-9fa29e85d04f", "type": "callout", "value": "<p data-block-key=\\"pnl4s\\">While still in the bare-repos directory for your site.</p>"}, {"id": "4a4b9847-9337-4bbc-896a-4ccc0aac013e", "type": "rich_text", "value": "<p data-block-key=\\"5kn03\\">Create a post-receive hook file:</p>"}, {"id": "b6cf03fc-a5d1-47f8-abd4-d9e4bccdabfc", "type": "code", "value": {"code": "touch hooks/post-receive", "language": "bash"}}, {"id": "f8193e57-99f0-4268-836d-b1ebb32c775b", "type": "rich_text", "value": "<p data-block-key=\\"deufh\\">then I opened the file in nano:</p>"}, {"id": "5a6acea1-817b-4054-9a21-2ae3e981cc19", "type": "code", "value": {"code": "nano hooks/post-receive", "language": "bash"}}, {"id": "bc468aaa-2cb1-4e17-8969-0bc06ad33e3b", "type": "rich_text", "value": "<p data-block-key=\\"4s55i\\">and added the following content:</p>"}, {"id": "a57389de-d37a-4811-9d83-a163686cbe3a", "type": "code", "value": {"code": "#!/bin/bash\\r\\n\\r\\nwhile read oldrev newrev ref\\r\\ndo\\r\\nif [[ $ref =~ .*/main ]];\\r\\nthen\\r\\n # only the main branch can be deployed\\r\\n\\r\\n # ensure the site directory exists\\r\\n mkdir -p /var/www/sites/nickmoreton.co.uk\\r\\n\\r\\n # checkout the latest version of the site\\r\\n git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main\\r\\n\\r\\n # there will be more content added here later ...\\r\\n else\\r\\n echo \\"Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.\\"\\r\\nfi\\r\\ndone", "language": "bash"}}, {"id": "8c69d303-2e62-45d8-98e6-0063e35bd6e1", "type": "rich_text", "value": "<h2 data-block-key=\\"4pa9o\\">Make the post-receive hook executable</h2><p data-block-key=\\"ba7ob\\">In the console run:</p>"}, {"id": "6f3d8c39-d79f-47db-abb5-b6134edf81ae", "type": "code", "value": {"code": "chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive", "language": "bash"}}, {"id": "07a01a7f-d06e-4fd5-8d59-884ace3cd8f8", "type": "rich_text", "value": "<h2 data-block-key=\\"eagf5\\">Add the new remote to your local repository</h2><p data-block-key=\\"8kil4\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\"co5lr\\">On your local machine in the root of the project run:</p>"}, {"id": "65e4c42a-46e2-4cb4-a7eb-03c993bf9fc7", "type": "code", "value": {"code": "git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git", "language": "bash"}}, {"id": "805736ed-351f-4e0d-b580-636e23bdd860", "type": "rich_text", "value": "<h2 data-block-key=\\"ojqh\\">Pushing to the remote repo</h2><p data-block-key=\\"6g8a6\\">I&#x27;m going to push my main branch to the production remote repo.</p>"}, {"id": "90941efa-ff37-4809-804c-ec817756f672", "type": "code", "value": {"code": "git push production main", "language": "bash"}}, {"id": "bbc9c23f-99c0-4278-8543-4284d612f11c", "type": "rich_text", "value": "<p data-block-key=\\"a0ol8\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.</p>"}, {"id": "4bcc1695-c6b0-41bc-95bf-5a22a0b3d1f6", "type": "callout", "value": "<p data-block-key=\\"pnl4s\\">The push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\"3m8lf\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p>"}]	
9	[{"id": "157e6619-921f-4bd6-830c-f7ecbb054304", "type": "rich_text", "value": "<p data-block-key=\\"p5a9x\\">Open your project on your local machine.</p>"}, {"id": "c2759190-b384-42ac-bdc7-5b5d7ff53936", "type": "callout", "value": "<p data-block-key=\\"g08yl\\">I&#x27;m using Pipenv to manage the python dependencies, Pipenv isn&#x27;t used on PythonAnywhere. Production dependencies will be in requirements.txt</p>"}, {"id": "5ef4bb07-7434-41ef-a298-9f7d9f90285b", "type": "rich_text", "value": "<p data-block-key=\\"6f82\\">With <a href=\\"https://pipenv.pypa.io/en/latest/\\">Pipenv</a> installed run:</p>"}, {"id": "a7c01979-d186-4184-b24c-d3c084043b85", "type": "code", "value": {"code": "pipenv install \\"wagtail>=5.1,<5.2\\" \\"mysqlclient>=2.2,<2.3\\" \\"python-dotenv>=1.0,<1.1\\"", "language": "bash"}}, {"id": "7bcbe1e4-e2d7-4086-8f57-c4f03c7cd95c", "type": "rich_text", "value": "<p data-block-key=\\"8ihln\\">Then create the requirements file with:</p>"}, {"id": "d90fb60e-62c5-444a-892b-babaf08a8e08", "type": "code", "value": {"code": "pipenv requirements > requirements.txt", "language": "bash"}}]	
10	[{"id": "fc3d65a5-f6c7-4ce7-81e6-5bafedafc6e7", "type": "callout", "value": "<p data-block-key=\\"u71yw\\">Add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\"fb5q7\\">A good example of a python .gitignore file is <a href=\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\"d58l0\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\"7ikoa\\">/media</p>"}, {"id": "1d1bf3de-85f0-40e2-a38f-1488d7857883", "type": "rich_text", "value": "<p data-block-key=\\"yq1na\\">Now create the initial Wagtail site called webapp.</p><p data-block-key=\\"90h5m\\"></p>"}, {"id": "5d0bb2f2-c70a-438d-92c8-b7cecf2f6eae", "type": "code", "value": {"code": "pipenv run wagtail start webapp", "language": "bash"}}, {"id": "fdf4e8a8-bc16-4f44-a45c-f52f7d89359e", "type": "rich_text", "value": "<h2 data-block-key=\\"3l00k\\">Modify the file and folder layout a little</h2><p data-block-key=\\"cmrlk\\">This is my preferred layout for a Wagtail project, it&#x27;s not the same as the official docs.</p><p data-block-key=\\"5964r\\"></p>"}, {"id": "b31b8594-a9bb-47be-a742-65936ab97f9d", "type": "callout", "value": "<p data-block-key=\\"u71yw\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\"191o6\\">.dockerignore</li><li data-block-key=\\"deu1e\\">Dockefile</li><li data-block-key=\\"bc39o\\">requirements.txt</li></ul>"}, {"id": "48ea35ef-041c-4deb-8281-fe6dfe8b4e54", "type": "code", "value": {"code": "rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt", "language": "bash"}}, {"id": "77337179-8de2-4a71-b719-8ecf54f146f8", "type": "rich_text", "value": "<p data-block-key=\\"3h3rb\\">Move the manage.py file to the root of the project: don&#x27;t forget the . at the end</p>"}, {"id": "b908ff20-e1fa-4d14-bd8a-7f1b18717b86", "type": "code", "value": {"code": "mv webapp/manage.py .", "language": "bash"}}, {"id": "d2bd8f36-dd4a-4142-8e6a-fc77f9443477", "type": "rich_text", "value": "<p data-block-key=\\"b5rr7\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>"}, {"id": "34e00e0a-1e91-4ebd-86ae-3f8f5ba1c3e2", "type": "code", "value": {"code": "mv webapp/webapp/* webapp", "language": "bash"}}, {"id": "80b8b4e4-ac1e-4da6-b49d-a181734ff7ee", "type": "rich_text", "value": "<p data-block-key=\\"bcalb\\">Delete the empty webapp/webapp directory:</p>"}, {"id": "3f18fa58-58bc-4655-98d5-7f7b1fca7beb", "type": "code", "value": {"code": "rm -rf webapp/webapp", "language": "bash"}}, {"id": "ef8da042-8e0d-4955-b0c6-237ce85510c9", "type": "rich_text", "value": "<h2 data-block-key=\\"9uqe\\">Alter import paths and settings</h2><p data-block-key=\\"e0hel\\">Open webapp/urls.py and change the import path for:</p>"}, {"id": "2bb9f887-d218-4877-8c14-259c46b26b0b", "type": "code", "value": {"code": "from search import views as search_views\\r\\n# to\\r\\nfrom webapp.search import views as search_views", "language": "python"}}, {"id": "1599ae6d-4748-4006-979d-78a987d90969", "type": "rich_text", "value": "<p data-block-key=\\"6fgkc\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>"}, {"id": "36e2d1ab-8402-40d7-90c2-445671c3795d", "type": "code", "value": {"code": "INSTALLED_APPS = [\\r\\n    \\"webapp.home\\",\\r\\n    \\"webapp.search\\",\\r\\n    ...\\r\\n]", "language": "python"}}, {"id": "f508aac9-0f99-4ab5-ba08-8a132a90cd81", "type": "rich_text", "value": "<p data-block-key=\\"bbsqj\\">The project file structure should look like this:</p>"}, {"id": "87b7a8fe-9a5a-4bd5-8671-72c243617ab4", "type": "code", "value": {"code": ".\\r\\n|── venv\\r\\n|── webapp\\r\\n    |── home\\r\\n    |── search\\r\\n    |── settings\\r\\n    |── static\\r\\n    |── templates\\r\\n    |── __init__.py\\r\\n    |── urls.py\\r\\n    |── wsgi.py\\r\\n|── .gitignore\\r\\n|── manage.py\\r\\n|── Pipfile\\r\\n|── Pipfile.lock\\r\\n|── README.md\\r\\n|── requirements.txt", "language": "bash"}}, {"id": "4b75c822-e2e1-4c09-9362-2fc492a056c0", "type": "rich_text", "value": "<h2 data-block-key=\\"4ljve\\">Run the Wagtail project locally</h2><p data-block-key=\\"esj80\\">Run the Wagtail project locally to check that everything is working as expected:</p>"}, {"id": "111d13c7-ac25-42a5-be71-707e602b2206", "type": "code", "value": {"code": "pipenv run python manage.py migrate\\r\\npipenv run python manage.py createsuperuser\\r\\npipenv run python manage.py runserver", "language": "bash"}}, {"id": "9f739a88-68fc-4c5a-b3a2-a6b3d5ab9313", "type": "rich_text", "value": "<p data-block-key=\\"bb14u\\">Open a browser and go to <a href=\\"http://localhost:8000/\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\"5p7s5\\">Open a browser and go to <a href=\\"http://localhost:8000/admin/\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p><p data-block-key=\\"dg1lf\\">You can run pipenv shell to activate the virtual environment before running any of the manage.py commands.</p><p data-block-key=\\"933ri\\">This will mean pipenv run python manage.py migrate can be run as ./manage.py migrate for example.</p>"}, {"id": "3d5a6bbf-fade-4071-b140-b290f10d3554", "type": "callout", "value": "<p data-block-key=\\"h0rex\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>"}]	
11	[{"id": "9c4d95f1-c013-4dd6-b93c-d4ffd48f6a74", "type": "callout", "value": "<p data-block-key=\\"93elw\\">To handle the configuration of the Wagtail app and make it convenient to run the app locally and in production I&#x27;ll set up some environment variables.</p>"}, {"id": "c15d3fa3-9e77-4eea-b93f-7a56823fa649", "type": "rich_text", "value": "<h2 data-block-key=\\"l6awf\\">Add a .env file which we can safely push to a git repo</h2>"}, {"id": "520f2d1d-24d3-45e3-9af2-399d3186f94b", "type": "code", "value": {"code": "touch .env.example", "language": "bash"}}, {"id": "b5b50269-860d-4116-bdf9-08df87eb93db", "type": "rich_text", "value": "<p data-block-key=\\"fdome\\">and add the following content</p>"}, {"id": "d5a5623e-bd32-4998-ba1e-2a38647125a9", "type": "code", "value": {"code": "MYSQL_ROOT_PASSWORD=webapp\\r\\nMYSQL_DATABASE=webapp\\r\\nMYSQL_USER=webapp\\r\\nMYSQL_PASSWORD=webapp\\r\\nMYSQL_ROOT_HOST='%'\\r\\nMYSQL_HOST='127.0.0.1'\\r\\nMYSQL_PORT=3306", "language": "bash"}}, {"id": "69509f5a-f1e1-425c-b3b8-163981874bb1", "type": "rich_text", "value": "<p data-block-key=\\"b9gbr\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\"920q0\\">Copy the environment file to .env</p>"}, {"id": "055dd867-7f12-4747-96a0-66ab39a6fdf7", "type": "code", "value": {"code": "cp .env.example .env", "language": "bash"}}, {"id": "a55304b8-f0b1-4958-9293-cec3eb25a4d9", "type": "rich_text", "value": "<p data-block-key=\\"c2s2l\\">Before you commit the .env file to git, add it to the .gitignore file so in the future there&#x27;s less risk of committing secrets to git:</p>"}, {"id": "fa2b00b7-f6b2-4014-9430-08fe02131c0e", "type": "code", "value": {"code": "echo \\".env\\" >> .gitignore", "language": "bash"}}]	
12	[{"id": "41d1b85a-a5aa-4c78-a73c-302acb9c5b4b", "type": "callout", "value": "<p data-block-key=\\"f4e85\\">As I mentioned, the database will be switched from using sqlite3 to mysql. Here a new docker-compose setup will be added that can be used to spin up the database locally for development.</p>"}, {"id": "75ee772e-51b9-474f-8d15-4877d7b65465", "type": "rich_text", "value": "<p data-block-key=\\"fsr17\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>"}, {"id": "f1181c63-95e0-4a26-845d-263c0eec5828", "type": "code", "value": {"code": "services:\\r\\n  db:\\r\\n    image: mysql:5.7 # version in use on pythonanywhere\\r\\n    command: --default-authentication-plugin=mysql_native_password\\r\\n    env_file:\\r\\n      - .env\\r\\n    ports:\\r\\n      - \\"3306:3306\\"\\r\\n    volumes:\\r\\n      - dbdata:/var/lib/mysql\\r\\n    container_name: mysql\\r\\n    healthcheck:\\r\\n      test: [ \\"CMD\\", \\"mysqladmin\\", \\"ping\\", \\"-h\\", \\"localhost\\" ]\\r\\n      interval: 10s\\r\\n      timeout: 20s\\r\\n      retries: 5\\r\\n\\r\\n  adminer:\\r\\n    image: adminer\\r\\n    ports:\\r\\n      - 8080:8080\\r\\n    depends_on:\\r\\n      db:\\r\\n        condition: service_healthy\\r\\n\\r\\nvolumes:\\r\\n  dbdata:", "language": "bash"}}, {"id": "a96fda03-faf9-446c-b334-2f767e92de7f", "type": "rich_text", "value": "<p data-block-key=\\"bs8h5\\">You will need docker installed to run the compose file: try <a href=\\"https://orbstack.dev/\\">Orbstack</a></p><p data-block-key=\\"8q25s\\">From the root of your project run:</p>"}, {"id": "d6f09a59-083f-4db3-8795-8aec39a3b791", "type": "code", "value": {"code": "docker-compose up -d", "language": "bash"}}, {"id": "98dd3cff-2268-4302-8379-d2a1f49c4c3f", "type": "rich_text", "value": "<p data-block-key=\\"cb256\\">Becuase the .env file is available the running db container will use the MYSQL_... env vars. </p><p data-block-key=\\"397d5\\">Therefore the username, password and database name are initialized to <i>webapp</i></p>"}, {"id": "aed19e7a-52aa-4f22-913e-7dcf264a1dd2", "type": "callout", "value": "<p data-block-key=\\"57sn0\\">To check the database is running, open a web browser and go to <a href=\\"http://localhost:8080/\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><p data-block-key=\\"1pfnh\\">If you already have a mysql server running locally you can probably skip this step.</p>"}]	
13	[{"id": "0ff7c519-4cb8-4e76-95fb-65660593e00b", "type": "rich_text", "value": "<p data-block-key=\\"ru9sg\\">Open webapp/settings/base.py and find:</p>"}, {"id": "d4077b53-045f-43ba-8fa2-452a9e5f0ed3", "type": "code", "value": {"code": "DATABASES = {\\r\\n    \\"default\\": {\\r\\n        \\"ENGINE\\": \\"django.db.backends.sqlite3\\",\\r\\n        \\"NAME\\": os.path.join(BASE_DIR, \\"db.sqlite3\\"),\\r\\n    }\\r\\n}", "language": "python"}}, {"id": "6f998498-e558-4469-b81a-511a4ee240ad", "type": "rich_text", "value": "<p data-block-key=\\"545d4\\">and replace it with:</p>"}, {"id": "e320af32-ba52-4753-9e01-0b6677b1a3d2", "type": "code", "value": {"code": "DATABASES = {\\r\\n    \\"default\\": {\\r\\n        \\"ENGINE\\": \\"django.db.backends.mysql\\",\\r\\n        \\"NAME\\": env_vars[\\"MYSQL_DATABASE\\"] if \\"MYSQL_DATABASE\\" in env_vars else \\"\\",\\r\\n        \\"USER\\": env_vars[\\"MYSQL_USER\\"] if \\"MYSQL_USER\\" in env_vars else \\"\\",\\r\\n        \\"PASSWORD\\": env_vars[\\"MYSQL_PASSWORD\\"] if \\"MYSQL_PASSWORD\\" in env_vars else \\"\\",\\r\\n        \\"HOST\\": env_vars[\\"MYSQL_HOST\\"] if \\"MYSQL_HOST\\" in env_vars else \\"\\",\\r\\n        \\"PORT\\": env_vars[\\"MYSQL_PORT\\"] if \\"MYSQL_PORT\\" in env_vars else \\"\\",\\r\\n    }\\r\\n}", "language": "python"}}, {"id": "c196d4b4-32f3-4e5f-8d99-e7ca3ddddc3a", "type": "rich_text", "value": "<p data-block-key=\\"erdre\\">Somewhere near the top of base.py add the following:</p>"}, {"id": "33b37b73-7da8-44dd-9e38-499ebf4054f0", "type": "code", "value": {"code": "### existing code\\r\\nimport os\\r\\n\\r\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\r\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\r\\n### end existing code\\r\\n\\r\\nenv_vars = os.environ.copy() ### add this line", "language": "python"}}, {"id": "61bac2d8-7ca3-4656-b696-e291d0db95d0", "type": "callout", "value": "<p data-block-key=\\"ta7ec\\"><i>env_vars</i> will hold all the environment variables and we can use them to connect to the local mysql database.</p><p data-block-key=\\"ck0qh\\">In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>"}, {"id": "4acc1610-4aad-4e9e-8460-e5aec73d57ef", "type": "rich_text", "value": "<h3 data-block-key=\\"1p03i\\">Add Django &lt; 4.2 as a python dependency</h3><p data-block-key=\\"egnv4\\">As python anywhere (on my account) uses Mysql 5.7 and Django v4.2+ requires Mysql v8.0+ the Django version installed needs to be pinned at v4.1</p><p data-block-key=\\"eihv8\\"><b><i>You don&#x27;t need to do this if you account is running Mysql 8.0+</i></b></p><p data-block-key=\\"8sbca\\">Run the following to add the Django constraint:</p>"}, {"id": "32d1d4b5-a6cc-463f-af94-1d4f56937f0c", "type": "code", "value": {"code": "pipenv install \\"django>=4.1,<4.2\\"", "language": "bash"}}, {"id": "fd3987dc-7b53-4fa8-ae4c-6cfc25826953", "type": "rich_text", "value": "<p data-block-key=\\"bkuks\\">then write the dependencies to requirements.txt</p>"}, {"id": "9f905978-1f12-4da6-992b-ea58c40cf15a", "type": "code", "value": {"code": "pipenv requirements > requirements.txt", "language": "bash"}}, {"id": "6ae19ec3-bb22-41fd-96c7-bea8f53efa7b", "type": "rich_text", "value": "<h2 data-block-key=\\"7retl\\">Run the Wagtail project locally</h2><p data-block-key=\\"1fc9q\\">Run the Wagtail project locally to check that everything is working as expected:</p>"}, {"id": "9fb347d5-386e-4a45-8d19-5f9b110f017c", "type": "code", "value": {"code": "pipenv run python manage.py migrate\\r\\npipenv run python manage.py createsuperuser\\r\\npipenv run python manage.py runserver", "language": "bash"}}, {"id": "1daef18d-fbfe-45d9-a785-3c53e44abce6", "type": "rich_text", "value": "<p data-block-key=\\"570be\\">Open a browser and go to <a href=\\"http://localhost:8000/\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\"58m6k\\">Open a browser and go to <a href=\\"http://localhost:8000/admin/\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>"}]	
14	[{"id": "55149dd4-f7f9-4a1c-8d5c-cf1e899cbd59", "type": "rich_text", "value": "<p data-block-key=\\"d1vwu\\">On the Databases tab create a new database. I called mine <i>nickmoreton_co_uk_db</i></p><p data-block-key=\\"bb8gs\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\"3jmh9\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\"c6u9b\\">Earlier on I created a .env file at <i>~/.env-settings/nickmoreton.co.uk</i></p><p data-block-key=\\"a5bvq\\">Open the file, you can do this from the Files tab and add the following content.</p>"}, {"id": "ebf157ca-5b67-4057-92b0-95bf87aed6ce", "type": "code", "value": {"code": "MYSQL_DATABASE='the-datbase-name-you-just-created'\\r\\nMYSQL_USER='get-this-from-the-databases-tab' # Username\\r\\nMYSQL_PASSWORD='the-password-just-created'\\r\\nMYSQL_HOST='get-this-from-the-databases-tab' # Database host address\\r\\nMYSQL_PORT='3306'", "language": "bash"}}, {"id": "2330a053-488b-4b7f-9fc0-f2bc290089fd", "type": "rich_text", "value": "<p data-block-key=\\"2derj\\">While I am editing this file, although not Database related the following can also be added.</p>"}, {"id": "a804acb0-9d99-44b5-b31b-cfbbffa6ce83", "type": "code", "value": {"code": "WAGTAIL_SITE_NAME='add-your-sites-name'\\r\\nBASE_URL='http://your-domain.co.uk'\\r\\nDJANGO_SECRET_KEY='add-a-good-secret-key'\\r\\nDJANGO_ALLOWED_HOSTS='your-domain.co.uk'", "language": "bash"}}, {"id": "86f22a01-2976-4613-86d4-529abd3c4efc", "type": "rich_text", "value": "<p data-block-key=\\"7pbsp\\">Save the file.</p>"}, {"id": "157340aa-91bf-471a-9246-7237a1745310", "type": "callout", "value": "<p data-block-key=\\"beq5o\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>"}]	
15	[{"id": "11053e75-4651-4514-a3aa-1eb2400051ea", "type": "rich_text", "value": "<p data-block-key=\\"tkk0f\\">On the Web tab set the following.</p><ul><li data-block-key=\\"3lvtn\\">Code &gt; Source code:<br/>mine is <i>/var/www/sites/nickmoreton.co.uk</i></li><li data-block-key=\\"2ncsc\\">Virtualenv path:<br/>mine is <i>/home/account-name-here/.virtualenvs/nickmoreton.co.uk_venv</i></li><li data-block-key=\\"9jf8n\\">Static files:<br/>url: <i>/static/</i> directory: <i>/var/www/sites/nickmoreton.co.uk/static<br/></i>url: <i>/media/</i> directory: <i>/var/www/sites/nickmoreton.co.uk/media</i></li></ul>"}]	
16	[{"id": "16d14f70-772f-4eef-805d-43410c06abd6", "type": "rich_text", "value": "<p data-block-key=\\"w8kbr\\">On your local machine, open webapp/settings/base.py and add/update the following:</p>"}, {"id": "020453ba-844c-44e5-b9f5-c6cc8521ba26", "type": "code", "value": {"code": "### existing code\\r\\nenv_vars = os.environ.copy()\\r\\n### end existing code\\r\\n\\r\\n### add this code block\\r\\nif \\"DJANGO_SECRET_KEY\\" in env_vars:\\r\\n    SECRET_KEY = env_vars[\\"DJANGO_SECRET_KEY\\"]\\r\\n\\r\\nif \\"DJANGO_ALLOWED_HOSTS\\" in env_vars:\\r\\n    ALLOWED_HOSTS = env_vars[\\"DJANGO_ALLOWED_HOSTS\\"].split(\\",\\")\\r\\n    \\r\\n### Find WAGTAIL_SITE_NAME = \\"webapp\\" and change is to...\\r\\nWAGTAIL_SITE_NAME = env_vars[\\"WAGTAIL_SITE_NAME\\"] if \\"WAGTAIL_SITE_NAME\\" in env_vars else \\"\\"\\r\\n\\r\\n### WAGTAILADMIN_BASE_URL = \\"http://example.com\\" and change it to ...\\r\\nWAGTAILADMIN_BASE_URL = env_vars[\\"BASE_URL\\"] if \\"BASE_URL\\" in env_vars else \\"\\"", "language": "python"}}, {"id": "3ef6a607-a8d8-487f-9e95-ad883bcef57d", "type": "rich_text", "value": "<p data-block-key=\\"thlh\\">Open your local .env.example file and add these new environment variables, also make sure they are available in the .env file</p>"}, {"id": "b806738f-26f8-4fd9-b0cc-60acf26df002", "type": "code", "value": {"code": "WAGTAIL_SITE_NAME=site-name\\r\\nBASE_URL=http://localhost:8000\\r\\nDJANGO_SECRET_KEY=not-so-secret_key\\r\\nDJANGO_ALLOWED_HOSTS=localhost", "language": "bash"}}, {"id": "19b17b33-b89c-4205-87d4-05c774dfc3f6", "type": "callout", "value": "<p data-block-key=\\"q8plg\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\"29ab5\\">Try out the webapp locally to make sure all is working OK. Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p><p data-block-key=\\"249tt\\">In production, on a live site they will be loaded from that environment.</p>"}]	
17	[{"id": "109d88f9-3861-4d16-a7f7-8d304204eca5", "type": "rich_text", "value": "<p data-block-key=\\"0kcgu\\">Earlier I created a post-receive hook: <i>~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</i> open the file and add the following extra steps.</p>"}, {"id": "f19efff2-7d52-4696-aa92-6faabb78721b", "type": "code", "value": {"code": "Replace:\\r\\n# there will be more content added here later ... with the following, make adjustments for your own paths file names:\\r\\n\\r\\n# switch to site directory\\r\\ncd /var/www/sites/nickmoreton.co.uk\\r\\nsource /usr/local/bin/virtualenvwrapper.sh\\r\\n# and activate the virtual environment\\r\\nworkon nickmoreton.co.uk_venv\\r\\n\\r\\n# install/update requirements\\r\\necho \\"INSTALL REQUIREMENTS\\"\\r\\npip install -r requirements.txt\\r\\n\\r\\n# run migrations\\r\\necho \\"RUN MIGRATIONS\\"\\r\\npython manage.py migrate --no-input\\r\\n\\r\\n# add/update static files\\r\\necho \\"COLLECT STATIC FILES\\"\\r\\npython manage.py collectstatic --no-input\\r\\n\\r\\n# reload the web app by touching the wsgi file\\r\\necho \\"RELOAD THE WEB APP\\"\\r\\ntouch /var/www/www_nickmoreton_co_uk_wsgi.py", "language": "bash"}}, {"id": "84a7d750-6075-4deb-929e-85978530c94a", "type": "callout", "value": "<p data-block-key=\\"020zy\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\"580ea\\">The last command touch will restart the webapp so that any changes are loaded.</p>"}]	
18	[{"id": "99da8fd4-f766-406e-b07f-b8fa20a8c714", "type": "callout", "value": "<p data-block-key=\\"2tk5g\\">When a new webapp is created a WSGI file is automatically created with some example content. You can ignore and delete the content and add the following modified version of the example # +++++++++++ DJANGO +++++++++++ section.</p>"}, {"id": "440cc565-6276-4589-ae78-b98a35e80c72", "type": "rich_text", "value": "<p data-block-key=\\"q1wsl\\">Update the paths and file names as appropriate for your own site.</p>"}, {"id": "984a7e21-e20e-4a22-98c4-76be6e364e37", "type": "code", "value": {"code": "import os\\r\\nimport sys\\r\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\r\\n\\r\\n# use your own site path\\r\\npath = '/var/www/sites/nickmoreton.co.uk'\\r\\nif path not in sys.path:\\r\\n    sys.path.append(path)\\r\\n\\r\\n# use your own path for the env settings\\r\\nenv_folder = os.path.expanduser('~/.env-settings/nickmoreton.co.uk')\\r\\nload_dotenv(os.path.join(env_folder, '.env'))\\r\\n\\r\\n# assumes your webapp is called webapp, substitute as appropriate\\r\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\r\\n\\r\\nfrom django.core.wsgi import get_wsgi_application\\r\\napplication = get_wsgi_application()", "language": "python"}}, {"id": "7a2f01db-7790-4d2e-8aac-ad293a867a13", "type": "rich_text", "value": "<p data-block-key=\\"6idot\\">Save the file.</p>"}]	
19	[{"id": "ee76c81a-1a39-4508-a687-4d9a5c9a1e40", "type": "rich_text", "value": "<p data-block-key=\\"bmjc1\\">First <i>git add</i> the file changes made so far and git commit them.</p>"}, {"id": "464947eb-cefa-4db7-a12f-dea377c45e48", "type": "callout", "value": "<p data-block-key=\\"506s3\\">For the moment I&#x27;m working directly on my main branch. In the future I&#x27;ll be working on other branches and merging them to main for a deployment.</p>"}, {"id": "65fb884c-87ec-40c1-8d94-54f13934e056", "type": "rich_text", "value": "<p data-block-key=\\"35nep\\">You should push to the origin repo first e.g.</p>"}, {"id": "23a6a400-7bb2-4c87-9133-0dd2c6378101", "type": "code", "value": {"code": "git push origin main", "language": "bash"}}, {"id": "dd859209-04c2-47df-9565-342828a2f272", "type": "rich_text", "value": "<p data-block-key=\\"djcde\\">and then push to the production bare-repo to start the deployemnt.</p>"}, {"id": "b38b1bef-c8d5-4ff4-8156-466efd9703d4", "type": "code", "value": {"code": "git push production main", "language": "bash"}}, {"id": "779fbcd0-6969-4439-a2ee-3f35fb4a3b04", "type": "callout", "value": "<p data-block-key=\\"506s3\\">If all is well you should see the deployment steps displayed in your console. On the first deployemnt is can take a few minutes to complete. Subsequent deployments may take less time.</p><p data-block-key=\\"6r04n\\">Although we use the touch command on the WSGI file to reload the webapp it can take a minute or so to actually run on PythonAnywhere.</p>"}, {"id": "013ff546-1a34-45b8-8085-945858c1547e", "type": "rich_text", "value": "<p data-block-key=\\"4rats\\">If you now visit your webapp url it should be live.</p><h2 data-block-key=\\"e12lb\\">Create a superuser on PythonAnywhere</h2><p data-block-key=\\"bnock\\">Open the Web tabs on PythonAnywhere.</p><p data-block-key=\\"c2qg7\\">Under the Virtualenv section click Start a console in this virtualenv to open a new console in the sites virtual env. (Your environment variables are loaded automatically for you because the virtual env will be activated)</p><p data-block-key=\\"33ajp\\">And run:</p>"}, {"id": "1e8b993e-db69-40d9-8992-d6fba71e8aea", "type": "code", "value": {"code": "./manage.py createsuperuser", "language": "bash"}}, {"id": "ca84ccfd-63ae-4d43-9740-fda54c56a1d8", "type": "rich_text", "value": "<p data-block-key=\\"d7m0j\\">If you now visit webapp and login at /admin you should be able to test out the default Wagtail CMS</p>"}]	
21	[{"id": "a3d3f767-6c3f-47ae-aa47-f1e196d45d55", "type": "rich_text", "value": "<p data-block-key=\\"xz8um\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\"c7ibd\\">Clone the newly created repo to your local development machine. It will have a remote called origin.</p>"}, {"id": "d3bafac7-3d27-4293-84f8-800dcde3ece7", "type": "callout", "value": "<p data-block-key=\\"cf5l9\\">Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>"}, {"id": "dabe2227-282f-4551-96d4-9799b9f73440", "type": "rich_text", "value": "<h2 data-block-key=\\"4t1it\\">Python dependencies</h2><p data-block-key=\\"f9vg9\\">There are a few ways to manage python dependencies, I&#x27;m using <a href=\\"https://pipenv.pypa.io/en/latest/\\">Pipenv</a> but you can use your preferred method. The only caveat is that the production dependencies ideally need to be in a requirements.txt file when deploying to PythonAnywhere.</p><p data-block-key=\\"eqmpg\\">With <a href=\\"https://pipenv.pypa.io/en/latest/\\">Pipenv</a> installed run:</p>"}, {"id": "aaaaf3a3-fde2-4ed3-809f-02eb61989519", "type": "code", "value": {"code": "pipenv install \\"wagtail>=5.1,<5.2\\" \\"mysqlclient>=2.2,<2.3\\" \\"python-dotenv>=1.0,<1.1\\" \\"django>=4.2,<5.0\\"", "language": "bash"}}, {"id": "0b2ce765-ae0a-4dda-8921-fdb6219b45a2", "type": "rich_text", "value": "<p data-block-key=\\"68evn\\">Then create an initial requirements file with:</p>"}, {"id": "ebebc2c6-44a9-4514-9e83-d43422879065", "type": "code", "value": {"code": "pipenv requirements > requirements.txt", "language": "bash"}}, {"id": "6e4a9814-54b3-4f2f-844a-1a386b64fc7b", "type": "rich_text", "value": "<h2 data-block-key=\\"cruch\\">Start a Wagtail site</h2><p data-block-key=\\"3p6cn\\">If you don&#x27;t have one already, add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\"8ggpc\\">A good example of a python .gitignore file is <a href=\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\"2cafs\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\"f9pg4\\">/media</p><p data-block-key=\\"eimv5\\">Now create the initial Wagtail site called webapp or use your preferred name.</p>"}, {"id": "bee4b813-919b-46ab-881b-9cfc8fbe8f09", "type": "code", "value": {"code": "pipenv run wagtail start webapp", "language": "bash"}}, {"id": "82d8c374-0f10-4465-aa89-25b799558f94", "type": "rich_text", "value": "<h2 data-block-key=\\"bbgsl\\">Modify the file and folder layout a little</h2>"}, {"id": "a769e132-aedf-45f4-8134-383c654203db", "type": "callout", "value": "<p data-block-key=\\"dz51h\\">I like to alter the layout of the files and folders a little to suit my preferences. It&#x27;s not necessary but I find it easier to work with. You can skip this step if you prefer but make sure you adjust any paths in the following steps.</p>"}, {"id": "446e29ec-2e34-4bde-a3c1-119b47a8cfe3", "type": "rich_text", "value": "<p data-block-key=\\"6loua\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\"er7es\\">.dockerignore</li><li data-block-key=\\"4f9cn\\">Dockefile</li><li data-block-key=\\"59iul\\">requirements.txt</li></ul>"}, {"id": "1e52eb8f-810e-4d59-9fcb-94178e201a9e", "type": "code", "value": {"code": "rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt", "language": "bash"}}, {"id": "e8e66774-9343-4864-a8d5-5da96bbb5e72", "type": "rich_text", "value": "<p data-block-key=\\"aoqr7\\">Move the manage.py file to the root of the project:</p>"}, {"id": "939fafb7-bb46-4171-9118-45109c42bd63", "type": "code", "value": {"code": "mv webapp/manage.py .", "language": "bash"}}, {"id": "83d06159-e072-443d-bc42-091f93051ece", "type": "rich_text", "value": "<p data-block-key=\\"7mb3j\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>"}, {"id": "7da877a9-8758-465f-992b-f5a3e4266181", "type": "code", "value": {"code": "mv webapp/webapp/* webapp", "language": "bash"}}, {"id": "55c1c87f-7ed2-4600-8082-ac0dd47d7f88", "type": "rich_text", "value": "<p data-block-key=\\"e3u3g\\">Delete the empty webapp/webapp directory:</p>"}, {"id": "549d87c8-fe78-46ba-95fd-4026b91dc627", "type": "code", "value": {"code": "rm -rf webapp/webapp", "language": "bash"}}, {"id": "554f25d8-acce-4e09-8bc9-a702353d9a21", "type": "rich_text", "value": "<h2 data-block-key=\\"a1hca\\">Alter import paths and settings</h2><p data-block-key=\\"3t20p\\">Open webapp/urls.py and change the import path for:</p>"}, {"id": "ff16aeb4-1d06-4520-80ce-02331b449285", "type": "code", "value": {"code": "from search import views as search_views\\r\\n# to\\r\\nfrom webapp.search import views as search_views", "language": "python"}}, {"id": "b0389d29-7509-42c1-8985-8a55477da00a", "type": "rich_text", "value": "<p data-block-key=\\"ak7j1\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>"}, {"id": "a91cfbfb-5411-4356-bea2-2293c80ead1f", "type": "code", "value": {"code": "INSTALLED_APPS = [\\r\\n \\"webapp.home\\",\\r\\n \\"webapp.search\\",\\r\\n ...\\r\\n]", "language": "python"}}, {"id": "02954837-c7c6-40d1-aa3c-f4188ffc24b2", "type": "rich_text", "value": "<p data-block-key=\\"e1vsi\\">The project file structure should look like this:</p><p data-block-key=\\"aptt2\\">.<br/>├── venv<br/>├── webapp<br/>│ ├── home<br/>│ ├── search<br/>│ ├── settings<br/>│ ├── static<br/>│ ├── templates<br/>│ ├── __init__.py<br/>│ ├── urls.py<br/>│ └── wsgi.py<br/>├── .gitignore<br/>├── manage.py<br/>├── Pipfile<br/>├── Pipfile.lock<br/>├── README.md<br/>├── requirements.txt<br/></p>"}, {"id": "41087582-e4d4-4488-85e2-ab3a7abc90ed", "type": "rich_text", "value": "<h2 data-block-key=\\"54iip\\">Run the Wagtail project locally</h2><p data-block-key=\\"76o2f\\">Run the Wagtail project locally to check that everything is working as expected, activate the virtual environment e.g. pipenv shell and run the following commands:</p>"}, {"id": "f0b39fd3-9433-4c4d-bc3e-324048c329ba", "type": "code", "value": {"code": "python manage.py migrate\\r\\npython manage.py createsuperuser", "language": "bash"}}, {"id": "c5dd5815-4a17-45ce-a7ee-1174d505ac4e", "type": "rich_text", "value": "<p data-block-key=\\"2ddes\\">Then run the local development server:</p>"}, {"id": "916254e0-c8e1-4b63-97d1-d87c0aa1334d", "type": "code", "value": {"code": "python manage.py runserver", "language": "bash"}}, {"id": "3958791c-b6c4-419c-b511-ee64129c05f3", "type": "rich_text", "value": "<p data-block-key=\\"al79g\\">Open a browser and go to <a href=\\"http://localhost:8000/\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\"ajs9p\\">Open a browser and go to <a href=\\"http://localhost:8000/admin/\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>"}, {"id": "694b227d-a9d5-4f16-aac1-388b990a1513", "type": "callout", "value": "<p data-block-key=\\"dz51h\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>"}]	
22	[{"id": "52b20549-481d-43f8-870e-74d1e2cd68ad", "type": "rich_text", "value": "<h3 data-block-key=\\"hmtol\\">Setup environment variables</h3><p data-block-key=\\"8og6\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\"nve9\\">Add a file to store the environment variables</h3>"}, {"id": "10ddfdd8-5a73-4198-9993-18e0db7f3046", "type": "code", "value": {"code": "touch .env", "language": "bash"}}, {"id": "e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c", "type": "rich_text", "value": "<p data-block-key=\\"2e27i\\">and add the following content</p>"}, {"id": "9a17ef1e-cd46-4387-9847-522c48c20ed6", "type": "code", "value": {"code": "MYSQL_ROOT_PASSWORD=webapp\\r\\nMYSQL_DATABASE=webapp\\r\\nMYSQL_USER=webapp\\r\\nMYSQL_PASSWORD=webapp\\r\\nMYSQL_ROOT_HOST='%'\\r\\nMYSQL_HOST=127.0.0.1\\r\\nMYSQL_PORT=3306", "language": "bash"}}, {"id": "667a6590-07d3-47f8-933d-3d3e2c714bba", "type": "rich_text", "value": "<p data-block-key=\\"28u1u\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\"ansh7\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>"}, {"id": "39c53f44-4cb6-4cbf-a35a-3e071c69a316", "type": "code", "value": {"code": "echo \\".env\\" >> .gitignore", "language": "bash"}}, {"id": "cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46", "type": "rich_text", "value": "<p data-block-key=\\"adq13\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>"}, {"id": "35953bb9-5ef4-46cd-885e-95bbd5964074", "type": "code", "value": {"code": "cp .env .env.example", "language": "bash"}}, {"id": "1fee3dcb-7a5b-4fb1-8478-229244b82cb9", "type": "rich_text", "value": "<h2 data-block-key=\\"78ku\\">Add a mysql docker container for development</h2><p data-block-key=\\"3l274\\">You will need docker installed to run the compose file: try <a href=\\"https://orbstack.dev/\\">Orbstack</a></p><p data-block-key=\\"1uluh\\">This is a docker-compose setup that can be used to run up the Mysql database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\"8d4vj\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>"}, {"id": "6ed2e237-bc63-463c-97cc-bd1df83bcd98", "type": "code", "value": {"code": "services:\\r\\n  db:\\r\\n    image: mysql:8.0.29 # version in use on pythonanywhere\\r\\n    command: --default-authentication-plugin=mysql_native_password\\r\\n    env_file:\\r\\n      - .env\\r\\n    ports:\\r\\n      - \\"3306:3306\\"\\r\\n    volumes:\\r\\n      - dbdata:/var/lib/mysql\\r\\n    container_name: mysql\\r\\n    healthcheck:\\r\\n      test: [ \\"CMD\\", \\"mysqladmin\\", \\"ping\\", \\"-h\\", \\"localhost\\" ]\\r\\n      interval: 10s\\r\\n      timeout: 20s\\r\\n      retries: 5\\r\\n\\r\\n  adminer:\\r\\n    image: adminer\\r\\n    ports:\\r\\n      - 8080:8080\\r\\n    depends_on:\\r\\n      db:\\r\\n        condition: service_healthy\\r\\n\\r\\nvolumes:\\r\\n  dbdata:", "language": "yaml"}}, {"id": "bc27bea0-b544-43c3-80eb-1f9d6c00d720", "type": "rich_text", "value": "<p data-block-key=\\"eeclo\\">Then from the root of your project run:</p>"}, {"id": "b9b4f7c1-4d7e-4813-a990-40069e73ee94", "type": "code", "value": {"code": "docker-compose up -d", "language": "bash"}}, {"id": "81cd005c-33cf-4e41-a52f-6a8b48a22d4a", "type": "rich_text", "value": "<p data-block-key=\\"4r1nn\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\"c9m87\\">The adminer service is a web interface to the database.</p><p data-block-key=\\"erpi9\\">To check the database is running, open a web browser and go to <a href=\\"http://localhost:8080/\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\"6l2i7\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\"706hu\\">Open webapp/settings/base.py and find:</p>"}, {"id": "513c091e-94b2-4562-aa70-d75078e30a57", "type": "code", "value": {"code": "DATABASES = {\\r\\n    \\"default\\": {\\r\\n        \\"ENGINE\\": \\"django.db.backends.sqlite3\\",\\r\\n        \\"NAME\\": os.path.join(BASE_DIR, \\"db.sqlite3\\"),\\r\\n    }\\r\\n}", "language": "python"}}, {"id": "36eea068-6b4f-47be-80fd-0cef073fcdd4", "type": "rich_text", "value": "<p data-block-key=\\"cqh80\\">and replace it with:</p>"}, {"id": "f865e427-7ed7-494b-8b23-b034fe62d631", "type": "code", "value": {"code": "DATABASES = {\\r\\n    \\"default\\": {\\r\\n        \\"ENGINE\\": \\"django.db.backends.mysql\\",\\r\\n        \\"NAME\\": env_vars[\\"MYSQL_DATABASE\\"] if \\"MYSQL_DATABASE\\" in env_vars else \\"\\",\\r\\n        \\"USER\\": env_vars[\\"MYSQL_USER\\"] if \\"MYSQL_USER\\" in env_vars else \\"\\",\\r\\n        \\"PASSWORD\\": env_vars[\\"MYSQL_PASSWORD\\"] if \\"MYSQL_PASSWORD\\" in env_vars else \\"\\",\\r\\n        \\"HOST\\": env_vars[\\"MYSQL_HOST\\"] if \\"MYSQL_HOST\\" in env_vars else \\"\\",\\r\\n        \\"PORT\\": env_vars[\\"MYSQL_PORT\\"] if \\"MYSQL_PORT\\" in env_vars else \\"\\",\\r\\n    }\\r\\n}", "language": "python"}}, {"id": "ec4a144f-c34b-434c-9ea3-506d3c0da578", "type": "rich_text", "value": "<p data-block-key=\\"6g7uo\\">Somewhere near the top of base.py add the following:</p>"}, {"id": "5564d4e1-5a13-4b5d-9809-778a3faa8136", "type": "code", "value": {"code": "### existing code\\r\\nimport os\\r\\n\\r\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\r\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\r\\n### end existing code\\r\\n\\r\\nenv_vars = os.environ.copy() ### add this line", "language": "python"}}, {"id": "8d1b3b99-090d-4642-8cd9-35f56a0dc151", "type": "callout", "value": "<p data-block-key=\\"meu37\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>"}, {"id": "9e5c054e-93ec-4899-abda-afa4b0c65ff5", "type": "rich_text", "value": "<h2 data-block-key=\\"78bcg\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\"fe4ol\\">Still in base.py find and update the following lines:</p>"}, {"id": "867664b2-80bf-46e3-a8e2-23c24be34e80", "type": "code", "value": {"code": "### existing code\\r\\nenv_vars = os.environ.copy()\\r\\n### end existing code\\r\\n\\r\\n### add this code block\\r\\nif \\"DJANGO_SECRET_KEY\\" in env_vars:\\r\\n    SECRET_KEY = env_vars[\\"DJANGO_SECRET_KEY\\"]\\r\\n\\r\\nif \\"DJANGO_ALLOWED_HOSTS\\" in env_vars:\\r\\n    ALLOWED_HOSTS = env_vars[\\"DJANGO_ALLOWED_HOSTS\\"].split(\\",\\")\\r\\n    \\r\\n### Find WAGTAIL_SITE_NAME = \\"webapp\\" and change it to...\\r\\nWAGTAIL_SITE_NAME = env_vars[\\"WAGTAIL_SITE_NAME\\"] if \\"WAGTAIL_SITE_NAME\\" in env_vars else \\"\\"\\r\\n\\r\\n### WAGTAILADMIN_BASE_URL = \\"http://example.com\\" and change it to ...\\r\\nWAGTAILADMIN_BASE_URL = env_vars[\\"BASE_URL\\"] if \\"BASE_URL\\" in env_vars else \\"\\"", "language": "python"}}, {"id": "3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f", "type": "callout", "value": "<p data-block-key=\\"meu37\\">When running in production, the environments variables will be loaded from that environment.</p>"}, {"id": "bda219eb-e65f-471e-ab01-1394148cb33b", "type": "rich_text", "value": "<p data-block-key=\\"f0344\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file</p>"}, {"id": "e3c9e210-6534-4972-a41f-c297fd1006b8", "type": "code", "value": {"code": "WAGTAIL_SITE_NAME=site-name\\r\\nBASE_URL=http://localhost:8000\\r\\nDJANGO_SECRET_KEY=not-so-secret_key\\r\\nDJANGO_ALLOWED_HOSTS=localhost", "language": "bash"}}, {"id": "3c64dfa0-6c52-4b60-aa41-11b59c5e21d7", "type": "callout", "value": "<p data-block-key=\\"meu37\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\"dtr9s\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\"40ccf\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>"}, {"id": "b9eb0fef-bf4a-40b7-8d73-722e26330467", "type": "rich_text", "value": "<h2 data-block-key=\\"11d4b\\">Run the Wagtail project locally</h2><p data-block-key=\\"dchje\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>"}, {"id": "92fbf620-c838-470a-820c-041533668b78", "type": "code", "value": {"code": "python manage.py migrate\\r\\npython manage.py createsuperuser", "language": "bash"}}, {"id": "31c777c9-07ad-451e-82cf-c07798eff738", "type": "rich_text", "value": "<p data-block-key=\\"8in2p\\">and</p>"}, {"id": "71c3e095-5ca0-4ef5-be78-518712380c3a", "type": "code", "value": {"code": "python manage.py runserver", "language": "bash"}}, {"id": "5639f392-7837-4a88-b6ea-8e5498253b3d", "type": "rich_text", "value": "<p data-block-key=\\"cfr1\\">Open a browser and go to <a href=\\"http://localhost:8000/\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\"cuttc\\">Open a browser and go to <a href=\\"http://localhost:8000/admin/\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>"}]	
23	[{"id": "e953c3c7-e53c-4555-a053-e2a7ec28af85", "type": "rich_text", "value": "<p data-block-key=\\"md6qj\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\"cbnqq\\">Open the <b>Web</b> tab and click the <b>Add a new web app button</b>.</p><ol><li data-block-key=\\"d44br\\"><b>Choose:</b> <i>Own domain</i> (or use the default given by PA) I used my own domain name here, I suggest you also specify www in the name or the subdomain you are using.</li><li data-block-key=\\"8u89j\\"><b>Choose:</b> <i>Manual setup</i></li><li data-block-key=\\"8aqoh\\"><b>Choose:</b> <i>Python</i> (latest you can choose)</li></ol><p data-block-key=\\"cu767\\">This will create the webapp and take you to the settings page for the webapp.</p>"}, {"id": "d60a4eb1-7973-4f2e-803f-3da9bde74a03", "type": "callout", "value": "<p data-block-key=\\"ebq4x\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from domain.com to www.domain.com It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>"}, {"id": "5e38f96d-2a52-48c8-93fb-335483612c86", "type": "rich_text", "value": "<h2 data-block-key=\\"112ut\\">Configure your domain name</h2><p data-block-key=\\"8e4jf\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\"https://help.pythonanywhere.com/pages/CustomDomains\\">PA Help</a></p><p data-block-key=\\"er86l\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h2 data-block-key=\\"fqrgr\\">Setup directories</h2>"}, {"id": "0583b337-091b-4fc1-8b19-c077b9702a30", "type": "callout", "value": "<p data-block-key=\\"3zzjy\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p>"}, {"id": "bdf2bddd-24dc-4579-9c72-5b31dd223132", "type": "rich_text", "value": "<h3 data-block-key=\\"a5obg\\">Open the Files tab...</h3><p data-block-key=\\"arkrv\\"><b><i>Source code directory</i></b></p><p data-block-key=\\"1km2n\\">Navigate to <b>/var/www/sites</b> which should already exist.</p><p data-block-key=\\"efbb0\\">Create a directory to hold your source code. Something like <b>www.domain.com</b>, this is going to be my live/production website.</p><p data-block-key=\\"7gbn\\"><b><i>Bare repos directory</i></b></p><p data-block-key=\\"4f6e6\\">Set up a directory structure to hold your bare repos.</p><p data-block-key=\\"788ae\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\"62hvo\\">Create a directory inside to hold your bare-repos. I named mine <i>bare-repos</i> Then I add another directory inside bare-repos something like <b>www.domain.com.git</b></p><p data-block-key=\\"39b0s\\">So the path to the bare repo directory is:</p>"}, {"id": "9a89c632-62c3-4eba-b7db-48c1d1ef5fb9", "type": "code", "value": {"code": "/home/account-name/bare-repos/www.domain.com.git", "language": "bash"}}, {"id": "29646b8f-e751-4860-ba6d-625d12621d0e", "type": "rich_text", "value": "<p data-block-key=\\"egije\\"><b><i>Environment variables storage</i></b></p><p data-block-key=\\"5tq2r\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\"9t1dk\\">Create a directory to hold your environment variables. I called mine <b>.env-settings</b> then I added another directory inside it called <b>www.domain.com</b></p><p data-block-key=\\"7f6j1\\">So the path to the environment variables directory is:</p>"}, {"id": "8f2c63d4-aa64-4e0c-b27e-6ae575bb5878", "type": "code", "value": {"code": "/home/account-name/.env-settings/www.domain.com", "language": "bash"}}, {"id": "07a73cc1-3807-4c21-8b23-567ca013bcd1", "type": "rich_text", "value": "<h2 data-block-key=\\"dsfgf\\">Create a virtual environment</h2><p data-block-key=\\"8eive\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\"8l0p\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\">PA Help</a></p><p data-block-key=\\"a9p8d\\">Use mkvirtualenv to create a new virtual environment for this site. I named mine <b>www.domain.com.venv</b> and I&#x27;m using Python 3.10</p>"}, {"id": "01b718f0-cc8e-4e1f-a66a-8276f8c4c4c1", "type": "code", "value": {"code": "mkvirtualenv www.domain.com.venv --python=/usr/bin/python3.10\\r\\n\\r\\n# to confirm the virtual environment has been created run:\\r\\nls ~/.virtualenvs/www.domain.com.venv/\\r\\n> bin lib pyvenv.cfg", "language": "bash"}}, {"id": "6aa0ac4c-540f-429b-a328-1c7d1ab4f407", "type": "rich_text", "value": "<h3 data-block-key=\\"23idg\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\"c5u9v\\">You can manually activate the virtual environment by running:</p>"}, {"id": "514f7b25-b591-4727-a5f5-c7dcfa747b67", "type": "code", "value": {"code": "workon www.domain.com.venv", "language": "bash"}}, {"id": "f5f7099d-9d03-4109-898d-0d4bab083a20", "type": "rich_text", "value": "<p data-block-key=\\"8lu5\\">Create a .env file in the environment variables directory created earlier:</p>"}, {"id": "83faf76c-c28b-4a08-8fa6-b74bb5f7793a", "type": "code", "value": {"code": "touch ~/.env-settings/www.domain.com/.env", "language": "bash"}}, {"id": "2baf760e-2e53-4623-9f6c-a29e030179e1", "type": "rich_text", "value": "<p data-block-key=\\"aap4r\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\"1jkt7\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>"}, {"id": "bc316137-fca3-44b3-94f3-dd00fd48081d", "type": "code", "value": {"code": "echo \\"set -a; source ~/.env-settings/www.domain.com/.env; set +a\\" >> ~/.virtualenvs/www.domain.com.venv/bin/postactivate", "language": "bash"}}, {"id": "f5fcb4e0-bba3-4b64-b3be-0cffcf04758e", "type": "rich_text", "value": "<p data-block-key=\\"9jqt4\\"><a href=\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\">PA help</a> about environment variables</p><h2 data-block-key=\\"4sfek\\">Set up a git bare repo</h2><p data-block-key=\\"4vcak\\">A bare repo is the remote I&#x27;ll push my main branch to to start a deployment. <a href=\\"https://blog.pythonanywhere.com/87/\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\"5otnh\\">Open the Consoles tab open a new console or use the console from the previous step.</p><p data-block-key=\\"7ueo6\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p>"}, {"id": "54c1c0cc-ef69-431b-a447-18b2f612b360", "type": "code", "value": {"code": "cd ~/bare-repos/www.domain.com.git/", "language": "bash"}}, {"id": "bd885f3b-a68c-4f16-b2ae-51479f22cc66", "type": "rich_text", "value": "<p data-block-key=\\"5vnkt\\">and run:</p>"}, {"id": "c8c309f1-b52d-492f-9b7b-6a708b3fa789", "type": "code", "value": {"code": "git init --bare", "language": "bash"}}, {"id": "992826e1-f0fb-421f-8efa-133852fa5b23", "type": "rich_text", "value": "<p data-block-key=\\"7192o\\"><a href=\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\"3lros\\">Create a post-receive hook</h3><p data-block-key=\\"8v5ek\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\"49qve\\">Create a post-receive hook file:</p>"}, {"id": "4f7a9d81-395f-4ac7-b68d-5bc364a984ab", "type": "code", "value": {"code": "touch hooks/post-receive", "language": "bash"}}, {"id": "71fd5532-5808-4f0d-853b-9e1d938e1950", "type": "rich_text", "value": "<p data-block-key=\\"j1v3\\">then I opened the file in nano (you could open if from the Files tab):</p>"}, {"id": "7ea127a8-7fa6-476e-8008-b81b0f6ea64c", "type": "code", "value": {"code": "nano hooks/post-receive", "language": "bash"}}, {"id": "c906fe46-606e-4e8b-b924-e0e10fd9d61e", "type": "rich_text", "value": "<p data-block-key=\\"7ij46\\">and added the following content (substitute account-name with your own account name and www.domain.com with your own domain name):</p>"}, {"id": "aba4c099-1c51-44bb-8456-f773f9347910", "type": "code", "value": {"code": "#!/bin/bash\\r\\n\\r\\nwhile read oldrev newrev ref\\r\\ndo\\r\\nif [[ $ref =~ .*/main ]];\\r\\nthen\\r\\n # only the main branch can be deployed\\r\\n\\r\\n # ensure the site directory exists\\r\\n mkdir -p /var/www/sites/www.domain.com\\r\\n\\r\\n # checkout the latest version of the site\\r\\n git --work-tree=/var/www/sites/www.domain.com --git-dir=/home/account-name/bare-repos/www.domain.com.git checkout -f main\\r\\n\\r\\n # there will be more content added here later ...\\r\\n else\\r\\n echo \\"Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.\\"\\r\\nfi\\r\\ndone", "language": "bash"}}, {"id": "2aa089b4-8dd5-46a1-9d1f-fb0d511e901a", "type": "rich_text", "value": "<h3 data-block-key=\\"45mjf\\">Make the post-receive hook executable</h3><p data-block-key=\\"e5j24\\">In the console run:</p>"}, {"id": "8d9dd147-7c55-495d-bac9-88b5162be26b", "type": "code", "value": {"code": "chmod +x ~/bare-repos/www.domain.com.git/hooks/post-receive", "language": "bash"}}, {"id": "f8002a64-720e-4301-a5cc-1d40606aac10", "type": "rich_text", "value": "<h2 data-block-key=\\"74hca\\">Create a Mysql database on PythonAnywhere</h2><p data-block-key=\\"ehvrd\\">On the Databases tab create a new database. I called mine <b>www_domain_com_db</b>. PythonAnywhere prepends your account name to the database name followed by a $. So my database name is <i>account-name$www_domain_com_db</i></p><p data-block-key=\\"1edii\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\"a2tju\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\"mlkj\\">Earlier on I created a .env file at <b>~/.env-settings/www.domain.com/.env</b></p><p data-block-key=\\"ft2rs\\">Open the file, you can do this from the Files tab and add the following content, substituting the values for your own:</p>"}, {"id": "aa714da2-c91b-4441-af99-7613ff75c649", "type": "code", "value": {"code": "MYSQL_DATABASE='account-name$www_domain_com_db'\\r\\nMYSQL_USER='account-name' # Username\\r\\nMYSQL_PASSWORD='the-password-just-created'\\r\\nMYSQL_HOST='get-this-from-the-databases-tab' # Database host address\\r\\nMYSQL_PORT='3306'\\r\\n\\r\\n# While I am editing this file, although not Database related the following can be added.\\r\\nWAGTAIL_SITE_NAME='add-your-sites-name'\\r\\nBASE_URL='http://www.domain.com'\\r\\nDJANGO_SECRET_KEY='add-a-good-secret-key'\\r\\nDJANGO_ALLOWED_HOSTS='www.domain.com'", "language": "bash"}}, {"id": "649b0309-d1e7-4054-95b2-8e663306d26f", "type": "rich_text", "value": "<p data-block-key=\\"11mfs\\">Save the file.</p>"}, {"id": "f86810f0-31c9-4447-969e-c0a9eef0d007", "type": "callout", "value": "<p data-block-key=\\"7pxoc\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>"}]	
24	[{"id": "e1793f67-bc91-486d-9b55-b21fb6beae8a", "type": "rich_text", "value": "<h2 data-block-key=\\"b94g3\\">Deploy hooks (post-receive)</h2><p data-block-key=\\"2pa8r\\">Earlier I created a post-receive hook: <b>~/bare-repos/www.domain.com.git/hooks/post-receive</b> open the file (use the files tab to locate it and open it in the editor) and add the following extra steps.</p>"}, {"id": "a863ceb2-0bff-4b90-a62d-2d1865b14a54", "type": "rich_text", "value": "<p data-block-key=\\"83i16\\">Replace: <i># there will be more content added here later ...</i> with the following, make adjustments for your own paths and/or file names:</p>"}, {"id": "c558a2ff-1479-4202-a0dc-6d43fec92a54", "type": "code", "value": {"code": "# there will be more content added here later ...\\r\\n\\r\\n# Replace the above with ...\\r\\n\\r\\n# switch to site directory\\r\\ncd /var/www/sites/www.domain.com\\r\\nsource /usr/local/bin/virtualenvwrapper.sh\\r\\n# and activate the virtual environment\\r\\nworkon www.domain.com.venv\\r\\n\\r\\n# install/update requirements\\r\\necho \\"INSTALL REQUIREMENTS\\"\\r\\npip install -r requirements.txt\\r\\n\\r\\n# run migrations\\r\\necho \\"RUN MIGRATIONS\\"\\r\\npython manage.py migrate --no-input\\r\\n\\r\\n# add/update static files\\r\\necho \\"COLLECT STATIC FILES\\"\\r\\npython manage.py collectstatic --no-input\\r\\n\\r\\n# reload the web app by touching the wsgi file\\r\\necho \\"RELOAD THE WEB APP\\"\\r\\ntouch /var/www/www_domain_com_wsgi.py", "language": "bash"}}, {"id": "6d199342-14dc-4e0d-b1c8-dab4587a17c3", "type": "rich_text", "value": "<p data-block-key=\\"504s\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\"b4kme\\">The last command <i>touch</i> will restart the webapp so that any changes are loaded.</p><p data-block-key=\\"dgabj\\">Save the file.</p><h2 data-block-key=\\"8lg96\\">Update the WSG file on PythonAnywhere</h2><p data-block-key=\\"4q0re\\">From the Web tab open the WSGI configuration file for your site.</p><p data-block-key=\\"oq55\\"></p>"}, {"id": "e2737377-2c28-4827-a457-4e0f333aec8d", "type": "callout", "value": "<p data-block-key=\\"20fe7\\">When a new webapp is created a WSGI file is automatically created with some example content. You can delete all the content and add the following modified version of the example</p><p data-block-key=\\"114t2\\"># +++++++++++ DJANGO +++++++++++  section.</p>"}, {"id": "884f3f4d-1d67-4a3d-bec1-2aeff050968d", "type": "rich_text", "value": "<p data-block-key=\\"1vai4\\">Add this python code to your sites WSGI file, update the paths and file names as appropriate for your own site.</p>"}, {"id": "95ba0b0c-2d92-4707-987a-6a06b190a797", "type": "code", "value": {"code": "import os\\r\\nimport sys\\r\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\r\\n\\r\\n# use your own site path\\r\\npath = '/var/www/sites/www.domain.com'\\r\\nif path not in sys.path:\\r\\n    sys.path.append(path)\\r\\n\\r\\n# use your own path for the env settings\\r\\nenv_folder = os.path.expanduser('~/.env-settings/www.domain.com')\\r\\nload_dotenv(os.path.join(env_folder, '.env'))\\r\\n\\r\\n# assumes your webapp is called webapp, substitute as appropriate\\r\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\r\\n\\r\\nfrom django.core.wsgi import get_wsgi_application\\r\\napplication = get_wsgi_application()", "language": "python"}}, {"id": "ff527db4-6142-4e3a-bb18-3b93a376df6a", "type": "rich_text", "value": "<p data-block-key=\\"32aqi\\">Save the file.</p>"}]	
25	[{"id": "6553df6a-8a71-456f-9650-90f5deb7f52a", "type": "rich_text", "value": "<p data-block-key=\\"96tav\\">First <i>git add</i> the file changes made so far and <i>git commit</i> them.</p><p data-block-key=\\"4ntv\\">For the moment I&#x27;m working directly on my main branch. In the future I&#x27;ll be working on other branches and merging them to main for running a deployment.</p><p data-block-key=\\"7s2cm\\">You should push to the origin repo first e.g:</p>"}, {"id": "33190219-a03f-46af-accd-abb1f0a28a9e", "type": "code", "value": {"code": "git push origin main", "language": "bash"}}, {"id": "142bd43a-9c6b-4fa6-bff2-b826eae0b9fd", "type": "rich_text", "value": "<h2 data-block-key=\\"chm1a\\">Add the new remote to your local repository</h2><p data-block-key=\\"7d8p9\\">Substitute account-name with your own account name. My account is in the EU so I need to use <b>ssh.eu.pythonanywhere.com</b></p><p data-block-key=\\"cj2s5\\">On your local machine in the root of the project run:</p>"}, {"id": "5c8ae378-7267-43a8-b478-72a869f0fa6c", "type": "code", "value": {"code": "git remote add production account-name@ssh.eu.pythonanywhere.com:/home/account-name/bare-repos/www.domain.com.git", "language": "bash"}}, {"id": "09b56c1d-1fba-4bb2-8a74-964f1edece1c", "type": "callout", "value": "<p data-block-key=\\"awoeg\\">I&#x27;m using production as the name of the remote repo. You can use any name you like.</p>"}, {"id": "e3885879-2e85-40ff-9562-ebdcf5e6065a", "type": "rich_text", "value": "<h2 data-block-key=\\"cthel\\">Pushing to the remote repo (will start a deployment)</h2><p data-block-key=\\"aopj7\\">I&#x27;m going to push my main branch to the remote repo.</p>"}, {"id": "dd480392-0fa7-4277-82c2-6ac2c3e72923", "type": "code", "value": {"code": "git push production main", "language": "bash"}}, {"id": "119f432b-c1c6-401a-9a89-adc704a3a604", "type": "rich_text", "value": "<p data-block-key=\\"5d2ng\\">Earlier on, in the post-receive hook I added a check to ensure only the main branch can be deployed. If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.</p><ul><li data-block-key=\\"26qlg\\">I can see the push has worked because in <i>/var/www/sites/www.domain.com</i> I can see the new files.</li><li data-block-key=\\"ap08c\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to <i>/var/www/sites/wwww.domain.com</i></li><li data-block-key=\\"4b2fq\\">If all is well you should see the deployment steps displayed in your console.</li><li data-block-key=\\"10d5i\\">On the first deployment it can take a few minutes to complete. Subsequent deployments usually take less time.</li><li data-block-key=\\"5ui39\\">In the post-receive hook, the touch command on the WSGI file will reload the webapp, it can take a minute or so to actually run on PythonAnywhere.</li></ul><p data-block-key=\\"7ve45\\">If you now visit your webapp url it should be live.</p><h2 data-block-key=\\"9g6qe\\">Create a superuser on PythonAnywhere (optional and only required one time)</h2><p data-block-key=\\"87laq\\">Open the Web tab on PythonAnywhere.</p><p data-block-key=\\"16tsi\\">Under the Virtualenv section click Start a console in this virtualenv to open a new console in the sites virtual env. (Your environment variables are loaded automatically for you because the virtual env will be activated)</p><p data-block-key=\\"67f9n\\">And run:</p>"}, {"id": "b388a1b7-f8e0-40a2-bb80-fc30bbbd0288", "type": "code", "value": {"code": "./manage.py createsuperuser", "language": "bash"}}, {"id": "ffa9ea45-2909-4bff-9b76-0acde24a5775", "type": "rich_text", "value": "<p data-block-key=\\"1lfn3\\">If you now visit webapp and login at /admin you should be able to test out the default Wagtail CMS</p>"}]	
27	[{"id": "003de25f-c641-44b9-81a8-f80bcb809a81", "type": "rich_text", "value": "<p data-block-key=\\"t9ypn\\">This is a minimal setup for compiling client side code with Webpack.</p><p data-block-key=\\"61u09\\">It will compile all files in client/styles css, client/scripts javascript and output them to webapp/static as bundle.css and bundle.js.</p><h3 data-block-key=\\"de590\\">Setup node and NPM</h3><p data-block-key=\\"5rn05\\">First lets make sure the node version used will always be the intended version 18.</p><p data-block-key=\\"e2ucd\\">In the root of your project run:</p>"}, {"id": "782daa03-8a42-4b7f-bdfa-b511f5b543aa", "type": "code", "value": {"code": "echo 18 > .nvmrc", "language": "bash"}}, {"id": "d5358e8f-6883-4406-ac0c-fd86a13365de", "type": "rich_text", "value": "<h3 data-block-key=\\"fu62r\\">Install NVM (node version manager)</h3><p data-block-key=\\"b2ecu\\">Instructions can be viewed at <a href=\\"https://github.com/nvm-sh/nvm\\">https://github.com/nvm-sh/nvm</a> where you can choose your preferred installation method. I used brew on MacOS.</p>"}, {"id": "3b916dbf-eb10-4682-9a7f-cb526b126301", "type": "code", "value": {"code": "brew install nvm", "language": "bash"}}, {"id": "05fec8d6-735b-4820-ad96-dd653df623d3", "type": "rich_text", "value": "<h3 data-block-key=\\"17sgd\\">Use node version 18</h3>"}, {"id": "fb6e3072-3750-4d09-bdb2-138ffaa8b59f", "type": "code", "value": {"code": "nvm use", "language": "bash"}}, {"id": "686ba7f7-a270-49e3-9308-4ffc3f178a0c", "type": "rich_text", "value": "<p data-block-key=\\"1fpeb\\">If you don&#x27;t have the correct version of node installed a message will tell you that and you can install it with:</p>"}, {"id": "48827bdb-d1c5-4ba0-86d0-74e114736727", "type": "code", "value": {"code": "nvm install 18", "language": "bash"}}, {"id": "6c3820db-4af6-445f-871d-4471e8f6a633", "type": "rich_text", "value": "<h3 data-block-key=\\"adhk4\\">Initialize NPM</h3>"}, {"id": "c38f8160-33b4-4818-9ceb-208bd12b1bf3", "type": "code", "value": {"code": "npm init", "language": "bash"}}, {"id": "8679cc93-80de-4b7a-ae54-e1cc674d65c0", "type": "rich_text", "value": "<p data-block-key=\\"6c4so\\">This will create a package.json file in the root of your project.</p><p data-block-key=\\"ftj06\\">Then install the required packages by running:</p>"}, {"id": "4e3bcc3a-0bfb-4456-9794-965b0750ae93", "type": "code", "value": {"code": "npm install --save-dev \\\\\\r\\n    @babel/preset-env \\\\\\r\\n    babel-loader \\\\\\r\\n    browser-sync-webpack-plugin \\\\\\r\\n    css-loader \\\\\\r\\n    mini-css-extract-plugin \\\\\\r\\n    sass \\\\\\r\\n    sass-loader \\\\\\r\\n    webpack \\\\\\r\\n    webpack-cli \\\\\\r\\n    webpack-dev-server", "language": "bash"}}, {"id": "588e7034-759a-45ec-8364-200ef86d7337", "type": "rich_text", "value": "<p data-block-key=\\"eek32\\">This will have created a node_modules directory in the root of your project. It&#x27;s not a folder we need to commit to the repository so add it to the .gitignore file.</p>"}, {"id": "6e471733-f010-4cb5-a229-5adc1cf18c22", "type": "code", "value": {"code": "echo \\"node_modules\\" >> .gitignore", "language": "bash"}}, {"id": "56c121c4-dae3-4987-8cbb-50dd838d8036", "type": "rich_text", "value": "<h3 data-block-key=\\"7d22s\\">Add Webpack configuration</h3><p data-block-key=\\"1i20\\">You can read more about Webpack at <a href=\\"https://webpack.js.org/\\">https://webpack.js.org/</a>.</p><p data-block-key=\\"8fu4v\\">Create a file <b>webpack.config.js</b> in the root of your project with the following content:</p><p data-block-key=\\"ct7nq\\"></p>"}, {"id": "673253dd-689e-43b0-b5a9-83f3d5347004", "type": "code", "value": {"code": "const path = require(\\"path\\");\\r\\nconst MiniCssExtractPlugin = require(\\"mini-css-extract-plugin\\");\\r\\nconst BrowserSyncPlugin = require(\\"browser-sync-webpack-plugin\\");\\r\\n\\r\\nmodule.exports = {\\r\\n  mode: \\"production\\", // or \\"development\\"\\r\\n  entry: path.resolve(__dirname, \\"./client/scripts/index.js\\"),\\r\\n  output: {\\r\\n    path: path.resolve(__dirname, \\"./webapp/static/webapp\\"),\\r\\n    filename: \\"bundle.js\\",\\r\\n  },\\r\\n  module: {\\r\\n    rules: [\\r\\n      {\\r\\n        test: /\\\\.js$/,\\r\\n        exclude: /node_modules/,\\r\\n        use: {\\r\\n          loader: \\"babel-loader\\",\\r\\n          options: {\\r\\n            presets: [\\"@babel/preset-env\\"],\\r\\n          },\\r\\n        },\\r\\n      },\\r\\n      {\\r\\n        test: /\\\\.scss$/,\\r\\n        use: [MiniCssExtractPlugin.loader, \\"css-loader\\", \\"sass-loader\\"],\\r\\n      },\\r\\n    ],\\r\\n  },\\r\\n  plugins: [\\r\\n    new MiniCssExtractPlugin({\\r\\n      filename: \\"bundle.css\\",\\r\\n    }),\\r\\n    new BrowserSyncPlugin({\\r\\n      host: \\"localhost\\",\\r\\n      port: 3000,\\r\\n      proxy: \\"http://127.0.0.1:8000/\\", // the port your django app will be running on in development\\r\\n      files: [\\"./**/*.html\\"],\\r\\n    }),\\r\\n  ],\\r\\n};", "language": "javascript"}}, {"id": "86b008de-4bd0-4d08-89a6-b64f777e5b00", "type": "rich_text", "value": "<h3 data-block-key=\\"6g6su\\">Add client side code</h3><p data-block-key=\\"9d8ph\\">Create a directory called client in the root of your project with the following folders:</p>"}, {"id": "2abf49b5-e2db-457c-973e-a55a468083ff", "type": "code", "value": {"code": "mkdir -p client/{scripts,styles}", "language": "bash"}}, {"id": "7492330e-1535-4388-bd54-9c7bf67598ec", "type": "rich_text", "value": "<h3 data-block-key=\\"cu6n0\\">Add styles</h3><p data-block-key=\\"cjtt8\\">Create a file client/styles/index.scss with the following content:</p><p data-block-key=\\"3v417\\"></p>"}, {"id": "2f319dd2-1d59-4e70-873c-1d5d39426968", "type": "code", "value": {"code": "body {\\r\\n  background-color: grey;\\r\\n}", "language": "css"}}, {"id": "edfa24ef-dcd2-424c-9f2c-955b3110ca0a", "type": "rich_text", "value": "<p data-block-key=\\"ab6ak\\"><b>Add javascript</b></p><p data-block-key=\\"3fv6r\\">Create a file client/scripts/index.js with the following content:</p>"}, {"id": "49a7187b-d74d-4156-9547-1a3a61e7d7fb", "type": "code", "value": {"code": "console.log(\\"Awesome Wagtail !\\");", "language": "javascript"}}, {"id": "7a2fbbec-c893-4e17-a7bf-657668b74bdf", "type": "rich_text", "value": "<p data-block-key=\\"b6er7\\">Update the scripts section in the package.json file to:</p>"}, {"id": "8ddae73b-9420-4c20-a445-a333407bad37", "type": "code", "value": {"code": "\\"scripts\\": {\\r\\n  \\"build\\": \\"webpack --mode production\\",\\r\\n  \\"start\\": \\"webpack --mode development --watch\\"\\r\\n},", "language": "json"}}, {"id": "099e899a-5c8c-485f-8a97-9e6a22d454d9", "type": "rich_text", "value": "<h3 data-block-key=\\"fqig2\\">Run Webpack</h3><p data-block-key=\\"1tj01\\">To compile the client side code during development run:</p>"}, {"id": "c7abec35-6fbc-4cb7-bd3b-672ced66b0b9", "type": "code", "value": {"code": "npm start # which will compile and watch for changes", "language": "bash"}}, {"id": "6e9676a6-c160-4808-a2fc-c474cc9aba74", "type": "rich_text", "value": "<p data-block-key=\\"2dqoj\\">To compile the client side code for production run:</p>"}, {"id": "1c1adac8-8f44-46ee-bd73-f2d74889bfbc", "type": "code", "value": {"code": "npm run build # which will compile and minify the code", "language": "bash"}}, {"id": "1e26b465-7350-45b3-a9c9-ad93decfea76", "type": "rich_text", "value": "<p data-block-key=\\"c9sbu\\">Running either of these commands will create a webapp/static/webapp directory containing bundle.css and bundle.js.</p><h2 data-block-key=\\"h0ft\\">Update the base template to use the compiled files</h2><p data-block-key=\\"81rq1\\">Open the webapp/templates/base.html file and update the head section to include the compiled css and javascript files:</p>"}, {"id": "7c35342c-b3c2-40ab-8f3c-9ca1572f3652", "type": "code", "value": {"code": "<!-- change -->\\r\\n<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"{% static 'css/webapp.css' %}\\">\\r\\n<!-- to -->\\r\\n<link rel=\\"stylesheet\\" type=\\"text/css\\" href=\\"{% static 'webapp/bundle.css' %}\\">\\r\\n<!-- change -->\\r\\n<script src=\\"{% static 'js/webapp.js' %}\\"></script>\\r\\n<!-- to -->\\r\\n<script src=\\"{% static 'webapp/bundle.js' %}\\"></script>", "language": "html"}}, {"id": "33d2e1fb-e69c-453f-81d8-97fd0481dcd8", "type": "rich_text", "value": "<p data-block-key=\\"11pot\\">You can delete the webapp/static/css and webapp/static/js directories and files as they are no longer needed.</p><h2 data-block-key=\\"3vbt0\\">Run the development server</h2><p data-block-key=\\"2bde9\\">In a new console run the development server (after activating the virtualenv):</p>"}, {"id": "682cab45-26a4-464b-8621-7e8d3f07b32b", "type": "code", "value": {"code": "python manage.py runserver", "language": "bash"}}, {"id": "15a8d67b-7b24-4c15-8043-ccc15717ce89", "type": "rich_text", "value": "<p data-block-key=\\"da1c6\\">As long as you are running the <b>npm start</b> command in the other console...</p><p data-block-key=\\"85rb8\\">Open your browser at <a href=\\"http://localhost:3000/\\">http://localhost:3000</a> and you should see the home page with a grey background and a message in the console.</p><p data-block-key=\\"2afmb\\">Try changing the background color in client/styles/index.scss and you should see the changes in the browser without having to refresh the page.</p><h2 data-block-key=\\"3pv64\\">Just for fun :-)</h2><p data-block-key=\\"5g6tj\\">Create a file client/scripts/logo.js with the following content:</p>"}, {"id": "31251878-15de-46ec-8e89-2f61ca840af4", "type": "code", "value": {"code": "class Logo {\\r\\n  constructor() {\\r\\n        this.logo = document.getElementsByClassName('logo')[0];\\r\\n        this.header = document.getElementsByClassName('header')[0];\\r\\n    }\\r\\n\\r\\n    init() {\\r\\n      setTimeout(() => {\\r\\n        this.logo.classList.add('logo--fade-in');\\r\\n            this.header.classList.add('header--slope');\\r\\n        }, 1000);\\r\\n    }\\r\\n}\\r\\n\\r\\nmodule.exports = Logo;", "language": "javascript"}}, {"id": "2fb946ee-fc33-4626-ad72-fd0e92ace6c9", "type": "rich_text", "value": "<p data-block-key=\\"6i44k\\">Update client/scripts/index.js to the following:</p>"}, {"id": "533b0532-4437-4842-8146-23f3204c1528", "type": "code", "value": {"code": "import \\"../styles/index.scss\\";\\r\\nimport Logo from \\"./logo.js\\";\\r\\n\\r\\nconst logo = new Logo();\\r\\nlogo.init();", "language": "javascript"}}, {"id": "3fb72dab-e272-4990-8756-ddce38ad6bd4", "type": "rich_text", "value": "<p data-block-key=\\"bli3g\\">Create a file client/styles/_vars.scss with the following content:</p>"}, {"id": "daac85a5-de53-48cb-91b7-1d1cb417de05", "type": "code", "value": {"code": "$background-color: #43b1b0;\\r\\n$foreground-color: #fff;", "language": "css"}}, {"id": "ae0bdae5-b932-49bb-a706-1a2fd648ff97", "type": "rich_text", "value": "<p data-block-key=\\"d5cs4\\">Alter the client/styles/index.scss file to the following:</p>"}, {"id": "0485e308-3d73-4b43-b450-c4ffd494a112", "type": "code", "value": {"code": "@import \\"./vars\\";\\r\\n\\r\\nbody {\\r\\n  background-color: $background-color;\\r\\n}\\r\\n\\r\\nh2, a {\\r\\n  color: $foreground-color !important;\\r\\n}\\r\\n\\r\\nsvg .egg {\\r\\n  fill: $foreground-color;\\r\\n}\\r\\n\\r\\n.logo--fade-in {\\r\\n  animation: fade-in 1s ease-out;\\r\\n  animation-fill-mode: forwards;\\r\\n  svg g {\\r\\n    fill: white;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes fade-in {\\r\\n  0% {\\r\\n    opacity: 0.2;\\r\\n    transform: scale(1);\\r\\n  }\\r\\n  75% {\\r\\n    opacity: 0.8;\\r\\n    transform: scale(1.8) translateX(10%);\\r\\n  }\\r\\n  100% {\\r\\n    opacity: 1;\\r\\n    transform: scale(1.4) translateX(0) translateY(20px) rotate(0deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.header--slope {\\r\\n  animation: slope 1s ease-in-out;\\r\\n  animation-fill-mode: forwards;  \\r\\n}\\r\\n\\r\\n@keyframes slope {\\r\\n  0% {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  90% {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    transform: rotate(-2deg);\\r\\n  }\\r\\n}", "language": "css"}}, {"id": "94be5fb4-4f60-45f1-af41-22e5f6bddc68", "type": "rich_text", "value": "<p data-block-key=\\"eon8u\\">With npm start still running: If you view the Wagtail start page (home) it&#x27;s going to look a little different.</p>"}]	
28	[{"id": "0cb2e3ae-5a2a-4b4f-bfb7-061d14c170c4", "type": "rich_text", "value": "<p data-block-key=\\"18ase\\"><i>This step is entirely optional but is recommended.</i></p><h2 data-block-key=\\"2pljs\\">Pre-commit</h2><p data-block-key=\\"9o3ih\\"><a href=\\"https://pre-commit.com/\\">Pre-commit</a> is a tool that runs git hooks on your code before you commit it. It&#x27;s a great way to ensure your code is formatted correctly and passes some basic checks before you commit it.</p><p data-block-key=\\"8ujrj\\">It will run black, isort and flake8 on my code and check for missing migrations and also that requirements.txt is up to date before I commit it.</p><h3 data-block-key=\\"de64j\\">Install pre-commit</h3><p data-block-key=\\"37hn1\\">Add pre-commit to the development dependencies in Pipfile:</p>"}, {"id": "69cd30d2-4020-4570-ad35-26aee8288a7d", "type": "code", "value": {"code": "pipenv install --dev pre-commit", "language": "bash"}}, {"id": "8f29ce66-6acd-4d77-bf55-4e8f42b86f4b", "type": "rich_text", "value": "<p data-block-key=\\"au7e3\\">If you already have pre-commit installed globally, you can skip this step.</p><h3 data-block-key=\\"dvfe2\\">Configure pre-commit</h3><p data-block-key=\\"d90hp\\">Create a .pre-commit-config.yaml file in the root of the project and add the following content:</p><p data-block-key=\\"1kv4c\\"></p>"}, {"id": "173161d8-d3fe-4e64-b386-fd31a50b5df9", "type": "code", "value": {"code": "repos:\\r\\n  # These hooks make sure that the code is formatted correctly\\r\\n  - repo: https://github.com/pycqa/isort\\r\\n    rev: 5.12.0\\r\\n    hooks:\\r\\n      - id: isort\\r\\n  - repo: https://github.com/psf/black\\r\\n    rev: 23.7.0\\r\\n    hooks:\\r\\n      - id: black\\r\\n  - repo: https://github.com/pycqa/flake8\\r\\n    rev: 6.1.0\\r\\n    hooks:\\r\\n      - id: flake8\\r\\n\\r\\n  # These hooks make sure that the requirements.txt file is up to date\\r\\n  # with the latest changes to pipenv as well as making sure migrations\\r\\n  # are up to date.\\r\\n  - repo: local\\r\\n    hooks:\\r\\n      - id: check-dependencies\\r\\n        name: Check dependencies\\r\\n        entry: ./checks/dependencies.sh\\r\\n        language: system\\r\\n        types: [python]\\r\\n        pass_filenames: false\\r\\n        always_run: true\\r\\n        stages: [pre-commit]\\r\\n      - id: check-migrations\\r\\n        name: Check migrations\\r\\n        entry: ./checks/migrations.sh\\r\\n        language: system\\r\\n        types: [python]\\r\\n        pass_filenames: false\\r\\n        always_run: true\\r\\n        stages: [commit]\\r\\n      - id: check-static\\r\\n        name: Check static files\\r\\n        entry: ./checks/static.sh\\r\\n        language: system\\r\\n        types: [css, javascript]\\r\\n        pass_filenames: false\\r\\n        always_run: true\\r\\n        stages: [pre-commit]", "language": "yaml"}}, {"id": "86b7fb39-afa4-4b1c-94e2-3e701c940ae0", "type": "rich_text", "value": "<h2 data-block-key=\\"22tgb\\">Add the git hook entry points</h2><p data-block-key=\\"2bhju\\">Create a checks directory in the root of the project and add the following files:</p>"}, {"id": "739ab79d-4bf7-4513-9aa2-40d3cc28124e", "type": "code", "value": {"code": "mkdir checks\\r\\ntouch checks/dependencies.sh\\r\\ntouch checks/migrations.sh\\r\\ntouch checks/static.sh\\r\\nchmod +x checks/*.sh", "language": "bash"}}, {"id": "1cd25c0f-4b55-4101-b70b-99a640d9136d", "type": "rich_text", "value": "<p data-block-key=\\"1jis9\\">Update the content of each file as follows:</p><p data-block-key=\\"e9kr7\\">File checks/dependencies.sh:</p>"}, {"id": "0427f78c-5ec6-400a-9969-084cea577d06", "type": "code", "value": {"code": "#!/bin/bash\\r\\n\\r\\n# Get the contents of requirements.txt\\r\\nrequirements=$(cat requirements.txt)\\r\\n\\r\\n# Get the output from pipenv requirements\\r\\npipenv_requirements=$(pipenv requirements)\\r\\n\\r\\n# Compare the two outputs\\r\\nif [ \\"$requirements\\" == \\"$pipenv_requirements\\" ]; then\\r\\n  echo \\"Requirements are correct\\"\\r\\nelse\\r\\n  echo \\"Requirements are different, please run pipenv requirements > requirements.txt and stage the changes\\"\\r\\n  exit 1\\r\\nfi", "language": "bash"}}, {"id": "4e995efa-c60c-4b6a-8c32-d69adaeba15e", "type": "rich_text", "value": "<p data-block-key=\\"f0o8\\">File checks/migrations.sh:</p>"}, {"id": "2753115d-6a9d-4c6b-84dd-de37d4a6598a", "type": "code", "value": {"code": "#!/bin/bash\\r\\n\\r\\n# Check if MySQL is already running\\r\\n# so we can stop it after the checks if it was started here.\\r\\nif docker-compose top | grep mysqld 2> /dev/null; then\\r\\n    echo \\"MySQL is running.\\"\\r\\n    MYSQL_RUNNING=true\\r\\nelse\\r\\n    echo \\"MySQL is not running.\\"\\r\\n    MYSQL_RUNNING=false\\r\\nfi\\r\\n\\r\\nif [ \\"$MYSQL_RUNNING\\" = false ]; then\\r\\n    docker-compose up -d db\\r\\n    echo \\"MySQL has been started.\\"\\r\\nfi\\r\\n\\r\\nif pipenv run python manage.py makemigrations --check --dry-run; then\\r\\n    # There are no changes to migrations\\r\\n    if [ \\"$MYSQL_RUNNING\\" = false ]; then\\r\\n        docker-compose stop db\\r\\n        echo \\"MySQL has been stopped.\\"\\r\\n    fi\\r\\n    exit 0\\r\\nelse\\r\\n    # There are changes to migrations\\r\\n    echo \\"Migrations are out of date. Please run 'pipenv run python manage.py makemigrations' and commit the changes.\\"\\r\\n    # If MySQL was not originally running, stop it before exiting\\r\\n    if [ \\"$MYSQL_RUNNING\\" = false ]; then\\r\\n        docker-compose stop db\\r\\n        echo \\"MySQL has been stopped.\\"\\r\\n    fi\\r\\n    exit 1\\r\\nfi", "language": "bash"}}, {"id": "c64784cd-b323-42ba-ae8c-0d91c5ee2296", "type": "rich_text", "value": "<p data-block-key=\\"3dhcf\\">File checks/static.sh:</p>"}, {"id": "89e52f7d-9c00-4c36-bd26-2f5d4aeb951a", "type": "code", "value": {"code": "#!/bin/bash\\r\\n\\r\\n# This script generates production-ready files for the scripts and styles\\r\\n# It runs npm run build\\r\\n# If files are changed then fails\\r\\n\\r\\n# Exit on error\\r\\nset -e\\r\\n\\r\\n# Run npm run build\\r\\nnpm run build", "language": "bash"}}, {"id": "4fb0575e-5806-4df7-a454-0cd00e95a043", "type": "rich_text", "value": "<h3 data-block-key=\\"5jrs6\\">Use Pipenv to install some development dependencies</h3>"}, {"id": "e21f14a8-e771-4320-a6be-d5ea854fb97d", "type": "code", "value": {"code": "pipenv install --dev black==23.7.0 pre-commit==3.3.3 flake8==6.1.0 isort==5.12.0 tomli==2.0.1", "language": "bash"}}, {"id": "d727f548-6a40-44ec-ac5d-30d495ab8ef0", "type": "rich_text", "value": "<p data-block-key=\\"a4r0g\\">I&#x27;ve pinned the versions of the development dependencies to the same versions as the pre-commit hooks.</p><h3 data-block-key=\\"f9jk\\">Install the pre-commit hooks</h3>"}, {"id": "5096b294-ba11-4a0f-9bfe-409601088665", "type": "code", "value": {"code": "pipenv run pre-commit install", "language": "bash"}}, {"id": "9eeb4d83-b66b-4da1-9a17-d56c694bd61f", "type": "rich_text", "value": "<p data-block-key=\\"e8k4i\\">You can use the <b>pre-commit install</b> command to initialize pre-commit. You can also run <b>pre-commit uninstall</b> to remove the hooks.</p><h3 data-block-key=\\"culb8\\">Run the pre-commit hooks</h3>"}, {"id": "3ef30389-f53d-4e18-b44d-f44ae8b6fe0d", "type": "code", "value": {"code": "pipenv run pre-commit run --all-files", "language": "bash"}}, {"id": "9ca34f1c-0229-4c28-b1fb-ffdfa92a3188", "type": "rich_text", "value": "<p data-block-key=\\"bcibm\\">If this is the first time running pre-commit you&#x27;ll probably see some file changes have been made. You can commit these changes and then run the pre-commit hooks again to make sure everything is ok.</p><h3 data-block-key=\\"dap87\\">Commit the changes</h3>"}, {"id": "28df97f7-c998-448a-b430-8933542beb74", "type": "code", "value": {"code": "git add .\\r\\ngit commit -m \\"add your commit message here\\"", "language": "bash"}}, {"id": "8086561b-96ef-4aa9-af7b-1e183724b7aa", "type": "rich_text", "value": "<p data-block-key=\\"8rtcl\\">Having pre-commit installed means that every time you commit code, the pre-commit hooks will run and check your code. </p><p data-block-key=\\"ab701\\">If there are any errors, the commit will fail and you&#x27;ll need to fix the errors before you can commit again.</p>"}, {"id": "deb94668-1a23-41cc-9dac-8dba53864d74", "type": "callout", "value": "<p data-block-key=\\"eheut\\">Make sure you have stopped the npm server before you commit, the one you started with npm start.</p>"}]	
\.


--
-- Data for Name: pages_articleindexpage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pages_articleindexpage (page_ptr_id, body) FROM stdin;
4	[]
\.


--
-- Data for Name: pages_articlepage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pages_articlepage (page_ptr_id, body, excerpt, date) FROM stdin;
6	[{"id": "d716dbed-7f85-4593-9232-2fa4388092dd", "type": "rich_text", "value": "<h2 data-block-key=\\"j4opv\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\"https://www.pythonanywhere.com/\\">PythonAnywhere</a>.</h2><p data-block-key=\\"5kmsd\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\"3lj8u\\">I recommend you read:</p><p data-block-key=\\"17t6h\\">The official <a href=\\"https://wagtail.org/\\">Wagtail documentation</a> and <a href=\\"https://docs.wagtail.org/en/stable/\\">Developer Documentation</a>, specifically <a href=\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\">Your first wagtail site</a></p><p data-block-key=\\"42jc7\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\"https://torchbox.com/\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\"6ftgk\\">✅ Python:3.10</li><li data-block-key=\\"5qi52\\">✅ Mysql Database</li><li data-block-key=\\"9pjvi\\">✅ Node / webpack to build the frontend</li><li data-block-key=\\"9kbos\\">✅ CI actions for code checks</li><li data-block-key=\\"fq2sv\\">✅ Pre-commit to run git hooks</li><li data-block-key=\\"7iett\\">✅ Wagtail CMS v5.1.1</li><li data-block-key=\\"3rl1v\\">✅ Django 4.2</li></ul><p data-block-key=\\"9oh7i\\">The code <a href=\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\"4k8jo\\"><a id=\\"26\\" linktype=\\"page\\">Part 2</a> - Has optional steps to add front end code, code quality checks and CI checks.</p>"}, {"id": "0d206651-7ee3-49fa-be07-c432c966b7cb", "type": "callout", "value": "<p data-block-key=\\"407ux\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at €5/month.</p>"}]	A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere	2023-09-02
26	[{"id": "dafc466a-f9ef-4897-8682-0658c1f3c763", "type": "heading", "value": {"level": "h2", "heading": "Part 2 of Deploy Wagtail CMS to PythonAnywhere"}}, {"id": "13ba48fb-8a72-4539-ad54-0339d1bafe75", "type": "rich_text", "value": "<p data-block-key=\\"b4w8n\\">Following on from <a id=\\"6\\" linktype=\\"page\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\"7mhb9\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>"}, {"id": "3a3994ae-acca-4c56-afe7-7389ae79a34a", "type": "image_aligned_block", "value": {"image": 2, "content": "", "alignment": "center"}}]	Setting up Webpack to compile styles and scripts ready for production.	2023-09-02
33	[{"id": "3a729ba6-61a8-46a6-9ef7-f7ba5ec36419", "type": "rich_text", "value": "<h2 data-block-key=\\"rh3yc\\">Installation</h2><p data-block-key=\\"d293b\\">Clone this repository: <a href=\\"https://github.com/wagtail-examples/dependency-checker\\">https://github.com/wagtail-examples/dependency-checker</a> to a suitable location on your computer.</p><h2 data-block-key=\\"3h5sl\\">Limitations</h2><ul><li data-block-key=\\"asmf9\\">Only works if the app is using a Dockerfile that uses poetry to manage dependencies.</li></ul><h2 data-block-key=\\"6ptoc\\">Requirements</h2><ul><li data-block-key=\\"boq2l\\">Docker installed and running. Try: <a href=\\"https://orbstack.dev\\">https://orbstack.dev</a></li><li data-block-key=\\"8o8ht\\">Python 3.9+</li></ul><h2 data-block-key=\\"9jbe8\\">Usage</h2>"}, {"id": "30c2b8b0-a82a-43f0-8f03-f793d1c21a19", "type": "code", "value": {"code": "poetry install\\r\\npoetry run start", "language": "bash"}}, {"id": "0768b9fe-a3d8-44ad-9d90-c50fa5f72e13", "type": "rich_text", "value": "<p data-block-key=\\"5sduo\\">Enter the url for your repository and set any options where the default isn&#x27;t right for your app.</p><h3 data-block-key=\\"rpi6\\">Options</h3><p data-block-key=\\"dr14q\\">Options can be passed in as command line arguments or enter them when prompted.</p>"}, {"id": "9f03d885-a91e-4e2c-b181-2ee5f76d3ff2", "type": "code", "value": {"code": "poetry run start --help\\r\\n\\r\\n--repo-url - The URL of the repository to clone/check\\r\\n--branch-name - The branch to checkout [master]\\r\\n--docker-file-name - The name of the Dockerfile to inspect/use [Dockerfile]\\r\\n--docker-file-location - The location of the Dockerfile to inspect/use relative to the repository root [./]", "language": "bash"}}, {"id": "9e2a50e0-a3f5-4eec-bdd1-e0ce8893416f", "type": "rich_text", "value": "<h2 data-block-key=\\"7fa6n\\">How it works</h2><ul><li data-block-key=\\"96ecr\\">It will clone the repository and checkout the specified branch</li><li data-block-key=\\"eqmr2\\">It will then inspect the Dockerfile to find the python image version and poetry version used</li><li data-block-key=\\"aqlre\\">It will then build a new image based on the Dockerfile image and export the dependency list using poetry export -&gt; requirements-frozen.txt</li><li data-block-key=\\"8g5os\\">It will then compare each dependency version in requirements-frozen.txt with the latest version on PyPi</li><li data-block-key=\\"fdhei\\">It will then output the results in the console and indicate if there are any outdated dependencies and/or manual checks required</li></ul>"}, {"id": "1cbc99d9-dd32-4469-81fc-901cd028744e", "type": "image_aligned_block", "value": {"image": 4, "content": "<h3 data-block-key=\\"3lip4\\">Example console output</h3>", "alignment": "center"}}]	Output a report of outdated dependencies for your python app	2023-09-02
34	[{"id": "63f26538-d5ea-4b24-9d19-8430f8386d4c", "type": "rich_text", "value": "<h2 data-block-key=\\"7d51r\\">Why?</h2><p data-block-key=\\"c6ujj\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\"cdra3\\">However, confirming all is well can be a challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\"djpli\\">I created this management command that can be run in development.</p><p data-block-key=\\"ben5k\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p><p data-block-key=\\"4hq02\\">When running the command you&#x27;ll need to specify 2 params (a username and a password), create this with python manage.py createsuperuser</p><p data-block-key=\\"1i72s\\">The report will assume http://localhost:8000 is to be used in the report. If you see an error the url for the error should be available to copy and paste into a browser for further investigation. You can override the url value to use in the console by passing in --report-url option.</p>"}, {"id": "baf91b69-5a98-4466-8e2c-8433ce540ef3", "type": "code", "value": {"code": "# app-name/management/commands/report_responses.py\\r\\n\\r\\nimport requests\\r\\nfrom django.apps import apps\\r\\nfrom django.conf import settings\\r\\nfrom django.core.management.base import BaseCommand\\r\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\r\\nfrom wagtail.admin.utils import get_admin_base_url\\r\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\r\\nfrom wagtail.documents import get_document_model\\r\\nfrom wagtail.images import get_image_model\\r\\nfrom wagtail.models import get_page_models\\r\\nfrom wagtail.snippets.models import get_snippet_models\\r\\n\\r\\n\\r\\nclass Command(BaseCommand):\\r\\n    \\"\\"\\"\\r\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\r\\n\\r\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\r\\n\\r\\n    Basic usage:\\r\\n        python manage.py report_responses <username> <password>\\r\\n\\r\\n    Options:\\r\\n\\r\\n        --host\\r\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\r\\n\\r\\n        --report-url\\r\\n            The URL to use for the report. e.g. http://staging.example.com\\r\\n\\r\\n    Example:\\r\\n        python manage.py report_responses <username> <password> \\\\\\r\\n            --report-url http://staging.example.com\\r\\n\\r\\n        This will alter the displayed URLs in the report but the tested URL will still\\r\\n        use the --host option.\\r\\n    \\"\\"\\"\\r\\n\\r\\n    help = \\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\"\\r\\n\\r\\n    checked_url = None\\r\\n    report_url = None\\r\\n    report_lines = []\\r\\n\\r\\n    registered_modeladmin = [\\r\\n        # add model admin models as they cannot be auto detected. For example ...\\r\\n        \\"events.EventType\\",\\r\\n    ]\\r\\n\\r\\n    def add_arguments(self, parser):\\r\\n        parser.add_argument(\\r\\n            \\"username\\",\\r\\n            help=\\"The username to use for login\\",\\r\\n        )\\r\\n        parser.add_argument(\\r\\n            \\"password\\",\\r\\n            help=\\"The password to use for login\\",\\r\\n        )\\r\\n        parser.add_argument(\\r\\n            \\"--host\\",\\r\\n            default=get_admin_base_url(),\\r\\n            help=\\"The URL to check\\",\\r\\n        )\\r\\n        parser.add_argument(\\r\\n            \\"--report-url\\",\\r\\n            help=\\"The URL to use for the report. e.g. http://staging.example.com\\",\\r\\n        )\\r\\n\\r\\n    def handle(self, *args, **options):\\r\\n        # Check if the command is enabled in settings\\r\\n        if not settings.DEBUG:\\r\\n            self.out_message_error(\\r\\n                \\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\"\\r\\n            )\\r\\n            return\\r\\n\\r\\n        self.checked_url = options[\\"host\\"]\\r\\n        self.report_url = (\\r\\n            options[\\"report_url\\"].strip(\\"/\\") if options[\\"report_url\\"] else None\\r\\n        )\\r\\n\\r\\n        with requests.Session() as session:\\r\\n            url = f\\"{options['host']}/admin/login/\\"\\r\\n\\r\\n            try:\\r\\n                session.get(url)\\r\\n            except requests.exceptions.ConnectionError:\\r\\n                self.out_message_error(\\r\\n                    f\\"Could not connect to {options['host']}. Is the server running?\\"\\r\\n                )\\r\\n                return\\r\\n            except requests.exceptions.InvalidSchema:\\r\\n                self.out_message_error(\\r\\n                    f\\"Could not connect to {options['host']}. Invalid schema\\"\\r\\n                )\\r\\n                return\\r\\n            except requests.exceptions.MissingSchema:\\r\\n                self.out_message_error(\\r\\n                    f\\"Could not connect to {options['host']}. Missing schema\\"\\r\\n                )\\r\\n                return\\r\\n\\r\\n            # Attempt to log in\\r\\n            logged_in = session.post(\\r\\n                url,\\r\\n                data=dict(\\r\\n                    username=options[\\"username\\"],\\r\\n                    password=options[\\"password\\"],\\r\\n                    csrfmiddlewaretoken=session.cookies[\\"csrftoken\\"],\\r\\n                    next=\\"/admin/\\",\\r\\n                ),\\r\\n            ).content\\r\\n\\r\\n            if \\"Forgotten password?\\" in logged_in.decode(\\"utf-8\\"):\\r\\n                # Login failed because the response isn't the Dashboard page\\r\\n                self.out_message_error(\\r\\n                    f\\"Could not log in to {options['host']}. Is the username and password correct?\\"\\r\\n                )\\r\\n                return\\r\\n\\r\\n            # Reports\\r\\n            self.report_admin_home(session, options)\\r\\n            self.report_page(session, options)\\r\\n            self.report_snippets(session, options)\\r\\n            self.report_modeladmin(session, options)\\r\\n            self.report_settings_models(session, options)\\r\\n            self.report_documents(session, options)\\r\\n            self.report_images(session, options)\\r\\n\\r\\n    def report_admin_home(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking the admin home page (Dashboard) ...\\")\\r\\n\\r\\n        admin_home_resp = session.get(f\\"{options['host']}/admin/\\")\\r\\n\\r\\n        if admin_home_resp.status_code == 200:\\r\\n            message = \\"\\\\nAdmin home page ↓\\"\\r\\n            self.out_message(message)\\r\\n            self.out_message_success(f\\"{options['host']}/admin/ ← 200\\")\\r\\n        else:\\r\\n            message = \\"\\\\nAdmin home page ↓\\"\\r\\n            self.out_message(message)\\r\\n            self.out_message_error(\\r\\n                f\\"{options['host']}/admin/ ← {admin_home_resp.status_code}\\"\\r\\n            )\\r\\n\\r\\n    def report_page(self, session, options):\\r\\n        page_models = self.filter_page_models(get_page_models())\\r\\n\\r\\n        model_index = []\\r\\n        results = []\\r\\n\\r\\n        for page_model in page_models:\\r\\n            if item := page_model.objects.first():\\r\\n                model_index.append(item.__class__.__name__)\\r\\n                results.append(\\r\\n                    {\\r\\n                        \\"title\\": item.title,\\r\\n                        \\"url\\": f\\"{options['host']}{item.url}\\",\\r\\n                        \\"id\\": item.id,\\r\\n                        \\"editor_url\\": f\\"{self.get_admin_edit_url(options, item)}\\",\\r\\n                        \\"class_name\\": item.__class__.__name__,\\r\\n                    }\\r\\n                )\\r\\n\\r\\n        # Print the index\\r\\n        message = f\\"\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\"\\r\\n        self.out_message_info(message)\\r\\n\\r\\n        for count, content_type in enumerate(sorted(model_index)):\\r\\n            message = (\\r\\n                f\\" {count + 1}. {content_type}\\"\\r\\n                if count <= 8  # Fixup the index number alignment\\r\\n                else f\\"{count + 1}. {content_type}\\"\\r\\n            )\\r\\n            self.out_message(message)\\r\\n\\r\\n        # Print the results\\r\\n        for page in results:\\r\\n            message = f\\"\\\\n{page['title']} ( {page['class_name']} ) ↓\\"\\r\\n            self.out_message(message)\\r\\n\\r\\n            # Check the admin response\\r\\n            response = session.get(page[\\"editor_url\\"])\\r\\n            if response.status_code != 200:\\r\\n                self.out_message_error(f\\"{page['editor_url']} ← {response.status_code}\\")\\r\\n            else:\\r\\n                self.out_message_success(f\\"{page['editor_url']} ← 200\\")\\r\\n\\r\\n            # Check the frontend response\\r\\n            response = session.get(page[\\"url\\"])\\r\\n            if response.status_code == 200:\\r\\n                self.out_message_success(f\\"{page['url']} ← 200\\")\\r\\n            else:\\r\\n                if response.status_code == 404:\\r\\n                    message = (\\r\\n                        f\\"{page['url']} ← {response.status_code} probably a draft page\\"\\r\\n                    )\\r\\n                    self.out_message_warning(message)\\r\\n                else:\\r\\n                    self.out_message_error(f\\"{page['url']} ← {response.status_code}\\")\\r\\n\\r\\n    def report_snippets(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking all SNIPPETS models edit pages ...\\")\\r\\n\\r\\n        snippet_models = get_snippet_models()\\r\\n        self.out_models(session, options, snippet_models)\\r\\n\\r\\n    def report_modeladmin(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking all MODELADMIN edit pages ...\\")\\r\\n\\r\\n        modeladmin_models = []\\r\\n        for model in apps.get_models():\\r\\n            app = model._meta.app_label\\r\\n            name = model.__name__\\r\\n            if f\\"{app}.{name}\\" in self.registered_modeladmin:\\r\\n                modeladmin_models.append(apps.get_model(app, name))\\r\\n\\r\\n        self.out_models(session, options, modeladmin_models)\\r\\n\\r\\n    def report_settings_models(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking all SETTINGS edit pages ...\\")\\r\\n        self.out_models(session, options, settings_registry)\\r\\n\\r\\n    def report_documents(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking the DOCUMENTS edit page ...\\")\\r\\n\\r\\n        document_model = get_document_model()\\r\\n        self.out_models(session, options, [document_model])\\r\\n\\r\\n    def report_images(self, session, options):\\r\\n        self.out_message_info(\\"\\\\nChecking the IMAGES edit page ...\\")\\r\\n\\r\\n        image_model = get_image_model()\\r\\n        self.out_models(session, options, [image_model])\\r\\n\\r\\n    def out_models(self, session, options, models):\\r\\n        for model in models:\\r\\n            obj = model.objects.first()\\r\\n            if not obj:\\r\\n                # settings model has no objects\\r\\n                continue\\r\\n\\r\\n            url = self.get_admin_edit_url(options, obj)\\r\\n\\r\\n            message = f\\"\\\\n{model._meta.verbose_name.capitalize()} ↓\\"\\r\\n            self.out_message(message)\\r\\n\\r\\n            response = session.get(url)\\r\\n\\r\\n            if response.status_code == 200:\\r\\n                self.out_message_success(f\\"{url} ← 200\\")\\r\\n            else:\\r\\n                self.out_message_error(f\\"{url} ← {response.status_code}\\")\\r\\n\\r\\n    def out_message(self, message):\\r\\n        if self.report_url:\\r\\n            message = message.replace(self.checked_url, self.report_url)\\r\\n        if message not in self.report_lines:\\r\\n            self.report_lines.append(message)\\r\\n        self.stdout.write(message)\\r\\n\\r\\n    def out_message_info(self, message):\\r\\n        if self.report_url:\\r\\n            message = message.replace(self.checked_url, self.report_url)\\r\\n        if message not in self.report_lines:\\r\\n            self.report_lines.append(message)\\r\\n        self.stdout.write(self.style.HTTP_INFO(message))\\r\\n        self.stdout.write(\\"=\\" * len(message))\\r\\n\\r\\n    def out_message_error(self, message):\\r\\n        if self.report_url:\\r\\n            message = message.replace(self.checked_url, self.report_url)\\r\\n        if message not in self.report_lines:\\r\\n            self.report_lines.append(message)\\r\\n        self.stderr.write(self.style.ERROR(message))\\r\\n\\r\\n    def out_message_success(self, message):\\r\\n        if self.report_url:\\r\\n            message = message.replace(self.checked_url, self.report_url)\\r\\n        if message not in self.report_lines:\\r\\n            self.report_lines.append(message)\\r\\n        self.stdout.write(self.style.SUCCESS(message))\\r\\n\\r\\n    def out_message_warning(self, message):\\r\\n        if self.report_url:\\r\\n            message = message.replace(self.checked_url, self.report_url)\\r\\n        if message not in self.report_lines:\\r\\n            self.report_lines.append(message)\\r\\n        self.stdout.write(self.style.WARNING(message))\\r\\n\\r\\n    @staticmethod\\r\\n    def filter_page_models(page_models):\\r\\n        \\"\\"\\"Filter out page models that are not creatable or are in the core apps.\\"\\"\\"\\r\\n\\r\\n        filtered_page_models = []\\r\\n\\r\\n        for page_model in page_models:\\r\\n            if page_model._meta.app_label == \\"wagtailcore\\":\\r\\n                # Skip the core apps\\r\\n                continue\\r\\n            if not page_model.is_creatable:\\r\\n                # Skip pages that can't be created\\r\\n                continue\\r\\n            filtered_page_models.append(page_model)\\r\\n\\r\\n        return filtered_page_models\\r\\n\\r\\n    @staticmethod\\r\\n    def get_admin_edit_url(options, obj):\\r\\n        admin_url_finder = AdminURLFinder()\\r\\n        return f\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\"", "language": "python"}}, {"id": "ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51", "type": "rich_text", "value": "<h3 data-block-key=\\"50jrp\\">Example usage scenario</h3><p data-block-key=\\"2s9fs\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\">Documentation</a></p><p data-block-key=\\"dgoit\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\"76nhi\\">For example:</p>"}, {"id": "8bf2e368-8f65-43d3-8bdb-09ce40e3c952", "type": "code", "value": {"code": "class CustomHelpPanel(EditHandler):\\r\\n  template = 'toolkits/custom_help_panel.html'\\r\\n\\r\\n  def render(self):\\r\\n    return mark_safe(render_to_string(self.template, {\\r\\n        'self': self,\\r\\n        'title': self.form.parent_page.title\\r\\n      }))", "language": "python"}}, {"id": "4db9f387-d4f5-46a5-afb7-fff178aed232", "type": "rich_text", "value": "<p data-block-key=\\"c9t6o\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>"}, {"id": "2daa955c-a034-40a4-ac52-1a5952226e7e", "type": "code", "value": {"code": "content_panels = [\\r\\n  CustomHelpPanel()\\r\\n] + Page.content_panels", "language": "python"}}, {"id": "6c605956-d9c0-4da9-9aec-d31d35f866fc", "type": "rich_text", "value": "<p data-block-key=\\"bskjj\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\"9dh14\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\"epk7l\\">report_responses Command</h3><p data-block-key=\\"461n7\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>"}, {"id": "5e229ad6-ccf7-4326-a520-d8ee10743f6c", "type": "code", "value": {"code": "./manage.py report_responses", "language": "bash"}}, {"id": "76dc5779-bf9e-4e84-92e5-04e36a197a01", "type": "rich_text", "value": "<p data-block-key=\\"6ge1o\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>"}]	This command will find content types and check the response code each of them.	2023-09-02
35	[{"id": "4b71a3c5-383c-4f67-9e49-67c7d14494c2", "type": "rich_text", "value": "<p data-block-key=\\"7dats\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\"5dksi\\">Usage</h2><p data-block-key=\\"1rfac\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>"}, {"id": "de2daa46-6eb0-4023-93ad-6eac732869f6", "type": "code", "value": {"code": "python manage.py report_types", "language": "bash"}}, {"id": "b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5", "type": "rich_text", "value": "<h3 data-block-key=\\"3t62c\\">How it might be useful:</h3><p data-block-key=\\"8gqq4\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\"fv78q\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\"3kl0i\\"><i>Scenario:</i> A client has reported a particular page type is not working as expected in the admin interface. Let&#x27;s assume they mention it&#x27;s a custom page type called FeaturedPage that potentially could only ever be added as a child of a specific page type. It could be time consuming to browse through pages and find a page to test.</p><p data-block-key=\\"5hd98\\"><i>Usage: </i>Just run the command to see all content types and then enter the contenttype ID from the list to show admin edit urls for all objects of that type.</p>"}, {"id": "4414623a-cca3-4896-834d-8f5903b7f84c", "type": "code", "value": {"code": "# app-name/management/commands/report_types.py\\r\\n\\r\\nfrom django.apps import apps\\r\\nfrom django.conf import settings\\r\\nfrom django.contrib.contenttypes.models import ContentType\\r\\nfrom django.core.management.base import BaseCommand\\r\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\r\\nfrom wagtail.admin.utils import get_admin_base_url\\r\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\r\\nfrom wagtail.models import Page\\r\\nfrom wagtail.snippets.models import get_snippet_models\\r\\n\\r\\n\\r\\nclass Command(BaseCommand):\\r\\n    \\"\\"\\"\\r\\n    Report on content types in the project.\\r\\n\\r\\n    This command will generate a list of all the content types in the project\\r\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\r\\n    the admin edit pages of that type.\\r\\n\\r\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\r\\n\\r\\n    Usage:\\r\\n        python manage.py report_types\\r\\n    \\"\\"\\"\\r\\n\\r\\n    excluded_apps = []\\r\\n\\r\\n    apps_prefix = \\"\\" # optional [your-project-directory]\\r\\n\\r\\n    registered_modeladmin = [\\r\\n        # add model admin models as they cannot be auto detected. For example ...\\r\\n        \\"events.EventType\\",\\r\\n    ]\\r\\n\\r\\n    def add_arguments(self, parser):\\r\\n        parser.add_argument(\\r\\n            \\"--host\\",\\r\\n            default=get_admin_base_url(),\\r\\n            help=\\"The URL to check\\",\\r\\n        )\\r\\n\\r\\n    def handle(self, *args, **options):\\r\\n        \\"\\"\\"Report on content types in the project.\\"\\"\\"\\r\\n\\r\\n        if not settings.DEBUG:\\r\\n            self.out_message_warning(\\r\\n                \\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\"\\r\\n            )\\r\\n            return\\r\\n\\r\\n        self.out_message_warning(\\"\\\\nUsing this command:\\")\\r\\n        self.out_message(\\"Enter a C-Type ID from the list below\\")\\r\\n        self.out_message(\\"to view a report of all the admin edit pages of that type.\\")\\r\\n\\r\\n        content_types = ContentType.objects.filter(\\r\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\r\\n        ).order_by(\\"model\\", \\"app_label\\")\\r\\n\\r\\n        if not content_types:\\r\\n            self.out_message_warning(\\"No content types found.\\")\\r\\n            return\\r\\n\\r\\n        # Generate the index\\r\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\r\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\r\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\r\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\r\\n\\r\\n        all_content_types = {\\r\\n            **content_type_pages,\\r\\n            **content_type_snippets,\\r\\n            **content_type_modeladmin,\\r\\n            **content_type_settings,\\r\\n        }\\r\\n\\r\\n        if not all(all_content_types):\\r\\n            self.out_message_error(\\"No content types found.\\")\\r\\n            return\\r\\n\\r\\n        self.out_table(content_type_pages, \\"Page\\")\\r\\n        self.out_table(content_type_snippets, \\"Snippet\\")\\r\\n        self.out_table(content_type_modeladmin, \\"ModelAdmin\\")\\r\\n        self.out_table(content_type_settings, \\"Settings\\")\\r\\n\\r\\n        # Get the index and generate the report\\r\\n        try:\\r\\n            index = int(input(\\"\\\\nC-Type ID: \\"))\\r\\n        except ValueError:\\r\\n            self.out_message_error(\\"Value must be an integer.\\")\\r\\n            return\\r\\n\\r\\n        if index not in all_content_types:\\r\\n            self.out_message_error(f\\"Invalid C-Type ID: {index}\\")\\r\\n            return\\r\\n\\r\\n        self.out_edit_links(options, all_content_types[index])\\r\\n\\r\\n    def get_contenttypes_for_settings(self, content_types):\\r\\n        content_type_settings = dict()\\r\\n        settings_models = []\\r\\n        for model in settings_registry:\\r\\n            settings_models.append(\\r\\n                f\\"{model._meta.app_label}.{model._meta.model_name}\\".lower()\\r\\n            )\\r\\n\\r\\n        for content_type in content_types:\\r\\n            model_str = f\\"{content_type.app_label}.{content_type.model}\\"\\r\\n            if model_str in settings_models:\\r\\n                content_type_settings[content_type.id] = [\\r\\n                    content_type.model_class().__name__,\\r\\n                    content_type.app_label,\\r\\n                ]\\r\\n\\r\\n        return content_type_settings\\r\\n\\r\\n    def get_contenttypes_for_modeladmin(self, content_types):\\r\\n        content_type_modeladmin = dict()\\r\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\r\\n\\r\\n        for content_type in content_types:\\r\\n            model_str = f\\"{content_type.app_label}.{content_type.model}\\"\\r\\n            if model_str in modeladmin_models:\\r\\n                content_type_modeladmin[content_type.id] = [\\r\\n                    content_type.model_class().__name__,\\r\\n                    content_type.app_label,\\r\\n                ]\\r\\n\\r\\n        return content_type_modeladmin\\r\\n\\r\\n    def get_contenttype_for_snippets(self, content_types):\\r\\n        content_type_snippets = dict()\\r\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\r\\n\\r\\n        for content_type in content_types:\\r\\n            if content_type.model in snippet_models:\\r\\n                content_type_snippets[content_type.id] = [\\r\\n                    content_type.model_class().__name__,\\r\\n                    content_type.app_label,\\r\\n                ]\\r\\n\\r\\n        return content_type_snippets\\r\\n\\r\\n    def get_contenttype_for_pages(self, content_types):\\r\\n        content_type_pages = dict()\\r\\n\\r\\n        for content_type in content_types:\\r\\n            if issubclass(content_type.model_class(), Page):\\r\\n                content_type_pages[content_type.id] = [\\r\\n                    content_type.model_class().__name__,\\r\\n                    content_type.app_label,\\r\\n                ]\\r\\n\\r\\n        return content_type_pages\\r\\n\\r\\n    def out_table(self, data, model_type=None):\\r\\n        self.out_message_info(f\\"\\\\nIndex of {model_type} Types\\")\\r\\n\\r\\n        headers = [\\"Model\\", \\"App\\", \\"C-Type ID\\"]\\r\\n        max_col_width = self.calc_col_width(data)\\r\\n\\r\\n        self.out_message(\\"-\\" * max_col_width * len(headers))\\r\\n        self.out_message(\\r\\n            \\" \\".join([f\\"{header: <{max_col_width}}\\" for header in headers])\\r\\n        )\\r\\n        self.out_message(\\"-\\" * max_col_width * len(headers))\\r\\n\\r\\n        for key, row in data.items():\\r\\n            self.out_message(\\r\\n                \\" \\".join([f\\"{col: <{max_col_width}}\\" for col in row]) + f\\" {key}\\"\\r\\n            )\\r\\n\\r\\n        self.out_message(\\"-\\" * max_col_width * len(headers))\\r\\n\\r\\n    def calc_col_width(self, data):\\r\\n        max_col_width = 0\\r\\n        for row in data.values():\\r\\n            for col in row:\\r\\n                if len(col) > max_col_width:\\r\\n                    max_col_width = len(col)\\r\\n\\r\\n        max_col_width += 2  # add some right padding\\r\\n        return max_col_width\\r\\n\\r\\n    def out_edit_links(self, options, data):\\r\\n        model = apps.get_model(data[1], data[0])\\r\\n        objects = model.objects.all()\\r\\n\\r\\n        self.out_message_success(f\\"\\\\nEdit Links for {data[0]}\\")\\r\\n        self.out_message(\\"-\\" * 70)\\r\\n\\r\\n        title_field = None\\r\\n\\r\\n        if hasattr(model, \\"title\\"):\\r\\n            title_field = \\"title\\"\\r\\n        elif hasattr(model, \\"name\\"):\\r\\n            title_field = \\"name\\"\\r\\n\\r\\n        for obj in objects:\\r\\n            if title_field:\\r\\n                t = getattr(obj, title_field)\\r\\n                title = t[:30] + \\"...\\" if len(t) > 30 else t\\r\\n                self.out_message(f\\"{title}\\")\\r\\n            self.out_message(f\\"{self.get_admin_edit_url(options, obj)}\\\\n\\\\n\\")\\r\\n\\r\\n    def out_message_warning(self, message):\\r\\n        self.stdout.write(self.style.WARNING(message))\\r\\n\\r\\n    def out_message(self, message):\\r\\n        self.stdout.write(message)\\r\\n\\r\\n    def out_message_error(self, message):\\r\\n        self.stdout.write(self.style.ERROR(message))\\r\\n\\r\\n    def out_message_info(self, message):\\r\\n        self.stdout.write(self.style.HTTP_INFO(message))\\r\\n\\r\\n    def out_message_success(self, message):\\r\\n        self.stdout.write(self.style.SUCCESS(message))\\r\\n\\r\\n    @staticmethod\\r\\n    def get_admin_edit_url(options, obj):\\r\\n        admin_url_finder = AdminURLFinder()\\r\\n        return f\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\"\\r\\n\\r\\n    @staticmethod\\r\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\r\\n        \\"\\"\\"Return a list of apps we care about for the page types report.\\"\\"\\"\\r\\n\\r\\n        if not apps_prefix:\\r\\n            apps = [\\r\\n                app\\r\\n                for app in settings.INSTALLED_APPS\\r\\n                if not app.split(\\".\\")[0] in excluded_apps\\r\\n            ]\\r\\n            return apps\\r\\n\\r\\n        return [\\r\\n            app.split(\\".\\")[1]\\r\\n            for app in settings.INSTALLED_APPS\\r\\n            if app.startswith(apps_prefix)\\r\\n        ]", "language": "python"}}]	The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.	2023-09-02
36	[{"id": "7ecc75e5-bcfa-45f0-9079-a729783903ac", "type": "rich_text", "value": "<h2 data-block-key=\\"uuf5i\\">Use this CLI to start a new Wagtail CMS site.</h2><p data-block-key=\\"dvjlh\\">Options:</p><ul><li data-block-key=\\"1kg61\\">Remove the default welcome page</li><li data-block-key=\\"59sm6\\">Add node and npm to the project</li><li data-block-key=\\"6bdg8\\">Add webpack to the project</li></ul><p data-block-key=\\"8k2uv\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\"a63f4\\">The site will include only a base home page and is ready for development.</p><p data-block-key=\\"64b6u\\">Download: <a href=\\" https://github.com/nickmoreton/wagtail-start \\"> https://github.com/nickmoreton/wagtail-start </a></p><h2 data-block-key=\\"fua4q\\">Installation</h2>"}, {"id": "0d27990e-acc5-4455-a02d-2f69930d422e", "type": "code", "value": {"code": "poetry install", "language": "bash"}}, {"id": "733f07a1-9416-4a54-aa94-755cb8c0f50c", "type": "rich_text", "value": "<h3 data-block-key=\\"7vn2k\\">Usage</h3>"}, {"id": "a9cef8b8-506b-45f8-b435-8afeabbdc49e", "type": "code", "value": {"code": "poetry run new [project_name]", "language": "bash"}}, {"id": "9c6733a9-7ea3-4919-8c84-069d367927d2", "type": "rich_text", "value": "<p data-block-key=\\"1kv20\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\"2lngf\\">New site development</h2><p data-block-key=\\"5bd36\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\"587tj\\">Backend</h3><p data-block-key=\\"2bhp\\">Install the dependencies, use your preferred method of setting up a virtual environment.</p><p data-block-key=\\"1tfq5\\">Run</p>"}, {"id": "47bbfb2b-7ff1-40be-8724-5d9f67b4de13", "type": "code", "value": {"code": "python manage.py migrate\\r\\npython manage.py createsuperuser\\r\\npython manage.py runserver", "language": "bash"}}, {"id": "9716eba7-6964-442c-86b9-1312399aea2b", "type": "rich_text", "value": "<h3 data-block-key=\\"55fr7\\">Frontend</h3><ol><li data-block-key=\\"105vj\\">Install the dependencies: (<i>nvm</i> use if you have nvm installed) and <i>npm install</i>.</li><li data-block-key=\\"99adb\\">Run the dev server: npm start.</li><li data-block-key=\\"db1im\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\"f8a9t\\">For production build: npm run build.</li></ol>"}]	Generate a starter Wagtail site that includes a basic frontend web pack setup	2023-09-22
37	[]		2023-09-30
39	[{"id": "c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd", "type": "heading", "value": {"level": "h2", "heading": "A Wagtail quick-start template"}}, {"id": "4e6761ed-deda-445f-b988-dcd6cf88d9e4", "type": "rich_text", "value": "<p data-block-key=\\"ybzc4\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\"droqe\\">Docker / docker-compose development environment</li><li data-block-key=\\"7jj7\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\"9deoa\\">SASS for css styling</li><li data-block-key=\\"fv2ss\\">Pico CSS for almost classless styling</li><li data-block-key=\\"6r8v0\\">esbuild javascript bundler and build system</li><li data-block-key=\\"2819l\\">Testing mail server for development</li><li data-block-key=\\"ds8h3\\">Database management GUI&#x27;s</li><li data-block-key=\\"c65m4\\">Wagtail CMS v6.3</li></ul>"}, {"id": "853027bb-a330-4ae4-9bfe-bdd8e027e060", "type": "image_aligned_block", "value": {"image": 6, "content": "", "alignment": "center"}}, {"id": "4bc10d41-77ea-468c-a2ec-4d0e422fabda", "type": "callout", "value": "<p data-block-key=\\"xed5n\\">Includes code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com using a FREE account.</p>"}, {"id": "19ccebf8-ff28-4294-b0c1-85c7ad97d356", "type": "rich_text", "value": "<p data-block-key=\\"psob8\\">Head on over to: <a href=\\"https://github.com/wagtail-examples/wagtail-starter-kit\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\"716vf\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>"}, {"id": "bcd4503c-c8cf-4966-85a8-56e8490e83e0", "type": "code", "value": {"code": "make quickstart", "language": "bash"}}, {"id": "32c77f3c-ab8a-40a5-9f3e-5252f674d408", "type": "heading", "value": {"level": "h3", "heading": "Choose a database"}}, {"id": "69faab26-8b1d-4f1c-ac5d-dd3c56691b8f", "type": "rich_text", "value": "<p data-block-key=\\"7z5jz\\">Read about the <a href=\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\">backend setup</a> and available database types</p><ul><li data-block-key=\\"4cg3k\\">Postgresql</li><li data-block-key=\\"63ef2\\">Mysql</li><li data-block-key=\\"eku2n\\">Sqlite3</li></ul>"}, {"id": "e92c63fa-1d33-4be8-9c80-161f224bc98e", "type": "heading", "value": {"level": "h3", "heading": "Frontend features"}}, {"id": "58a7b5d4-7a4d-4c90-929c-f9cb11f205f6", "type": "rich_text", "value": "<p data-block-key=\\"7z5jz\\">Read about the <a href=\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\">frontend setup</a></p><ul><li data-block-key=\\"disva\\">Compile Sass</li><li data-block-key=\\"evtpn\\">Compile Javascript</li><li data-block-key=\\"4ne7g\\">and more...</li></ul>"}, {"id": "6ce374a8-6f74-4f92-90dd-55de7d189217", "type": "heading", "value": {"level": "h3", "heading": "Production Deployment"}}, {"id": "c1872549-f2c8-440e-88bf-2ef50233c10c", "type": "rich_text", "value": "<p data-block-key=\\"xjq8k\\">Deploy the starter kit: <a href=\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere/blob/main/docs/deployment.md\\">full setup instructions</a></p>"}]	Clone/fork this repo for an expanded Wagtail quick-start template	2024-12-18
\.


--
-- Data for Name: pages_packageindexpage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pages_packageindexpage (page_ptr_id, body) FROM stdin;
5	[]
\.


--
-- Data for Name: pages_packagepage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.pages_packagepage (page_ptr_id, body, date, excerpt, pypi_package_name) FROM stdin;
20	[{"id": "1acd834a-51ad-4914-9519-7e925d493f51", "type": "heading", "value": {"level": "h2", "heading": "Create a page in Wagtail CMS that has a corresponding QR Code."}}, {"id": "fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85", "type": "rich_text", "value": "<h3 data-block-key=\\"4t6t8\\">Features</h3><ul><li data-block-key=\\"2jrqb\\">The generated QR Code is saved as an EPS document that can be printed.</li><li data-block-key=\\"f8jq6\\">When scanned it will link to the page via a redirect using the page ID</li><li data-block-key=\\"7bu10\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\"7dpo\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><p data-block-key=\\"fc64u\\">Source code: <a href=\\"https://github.com/wagtail-packages/wagtail-qrcode\\">https://github.com/wagtail-packages/wagtail-qrcode</a></p>"}, {"id": "85b81f54-c6a2-4cd3-b14a-e53c2196ca0f", "type": "image_aligned_block", "value": {"image": 1, "content": "", "alignment": "center"}}, {"id": "0838dd8f-4d04-4424-a092-4865e3ac866b", "type": "rich_text", "value": "<h2 data-block-key=\\"dijlj\\">Installation</h2><p data-block-key=\\"7u34j\\">To add the package to your own Wagtail CMS, install the package into your environment.</p>"}, {"id": "0575ffba-407d-4467-bbce-ab04de4249a4", "type": "code", "value": {"code": "pip install wagtail-qrcode", "language": "bash"}}, {"id": "25c415dd-bc44-42fa-8484-8788fc9339f1", "type": "rich_text", "value": "<p data-block-key=\\"b7qjn\\">Add the package to your site settings.</p><p data-block-key=\\"6sdfi\\"></p>"}, {"id": "ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a", "type": "code", "value": {"code": "INSTALLED_APPS = [\\r\\n    # ...\\r\\n    \\"wagtail_qrcode\\",\\r\\n    # ...\\r\\n]", "language": "python"}}, {"id": "92963930-c29c-4dfb-9e5f-11130950484e", "type": "rich_text", "value": "<p data-block-key=\\"5rig1\\">Add this setting to your Wagtail settings. It is used to generate the base url for the QR code</p>"}, {"id": "ebdbf23e-1ed4-4cb6-b5c7-3141237d324c", "type": "code", "value": {"code": "WAGTAIL_QR_CODE_BASE_URL = \\"your-site-url\\"", "language": "python"}}, {"id": "b59d09ba-5c3b-40cf-a8e5-7283a16803cd", "type": "callout", "value": "<p data-block-key=\\"3huyc\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\"6rr4a\\">Try using a service like <a href=\\"https://ngrok.com/\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\"c36lb\\">This is the command I use to start ngrok.</p><p data-block-key=\\"9k5fk\\">./ngrok http 8000 --scheme=http</p>"}, {"id": "0524fecb-d08a-4459-ad59-0644c0887a23", "type": "rich_text", "value": "<h3 data-block-key=\\"77a9u\\">Using the QRCode page model mixin</h3><p data-block-key=\\"1hl5j\\">Use the model mixin in a new or an existing page model.</p>"}, {"id": "87ad9df2-7f84-4044-8207-3c224b8f7b54", "type": "code", "value": {"code": "# models.py\\r\\n\\r\\nfrom wagtail.admin.panels import (\\r\\n    FieldPanel,\\r\\n    MultiFieldPanel,\\r\\n    ObjectList,\\r\\n    TabbedInterface,\\r\\n)\\r\\nfrom wagtail.models import Page\\r\\n\\r\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\r\\nfrom wagtail_qrcode.models import QRCodeMixin\\r\\n\\r\\n\\r\\nclass QRCodePage(QRCodeMixin, Page):\\r\\n    qrcode_panels = QRCodeMixin.panels + [\\r\\n        MultiFieldPanel(\\r\\n            [\\r\\n                FieldPanel(\\"email_address\\"),\\r\\n                FieldPanel(\\"email_subject\\"),\\r\\n                FieldPanel(\\"email_body\\"),\\r\\n            ],\\r\\n            heading=\\"Send QR code via email\\",\\r\\n        )\\r\\n    ]\\r\\n\\r\\n    edit_handler = TabbedInterface(\\r\\n        [\\r\\n            ObjectList(Page.content_panels, heading=\\"Content\\"),\\r\\n            ObjectList(Page.promote_panels, heading=\\"Promote\\"),\\r\\n            ObjectList(Page.settings_panels, heading=\\"Settings\\", classname=\\"settings\\"),\\r\\n            ObjectList(qrcode_panels, heading=\\"QR Code\\", classname=\\"qr-code\\"),\\r\\n        ]\\r\\n    )\\r\\n\\r\\n    base_form_class = QrCodeEmailForm", "language": "python"}}, {"id": "efc26582-c6a7-49b1-b466-547090468a8a", "type": "rich_text", "value": "<p data-block-key=\\"csma4\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\"2p8mn\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>"}, {"id": "800416ee-4feb-4003-a88d-c043f8b3c1e0", "type": "code", "value": {"code": "# models.py\\r\\n\\r\\nfrom wagtail.admin.panels import (\\r\\n    FieldPanel,\\r\\n    MultiFieldPanel,\\r\\n    ObjectList,\\r\\n    TabbedInterface,\\r\\n)\\r\\nfrom wagtail.models import Page\\r\\n\\r\\nfrom wagtail_qrcode.models import QRCodeMixin\\r\\n\\r\\n\\r\\nclass QRCodePage(QRCodeMixin, Page):\\r\\n    qrcode_panels = QRCodeMixin.panels\\r\\n\\r\\n    edit_handler = TabbedInterface(\\r\\n        [\\r\\n            ObjectList(Page.content_panels, heading=\\"Content\\"),\\r\\n            ObjectList(Page.promote_panels, heading=\\"Promote\\"),\\r\\n            ObjectList(Page.settings_panels, heading=\\"Settings\\", classname=\\"settings\\"),\\r\\n            ObjectList(qrcode_panels, heading=\\"QR Code\\", classname=\\"qr-code\\"),\\r\\n        ]\\r\\n    )", "language": "python"}}, {"id": "f4859a40-34fe-4677-8c64-aa073affa6e3", "type": "rich_text", "value": "<h3 data-block-key=\\"bemqp\\">URLS</h3><p data-block-key=\\"7jbb4\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>"}, {"id": "ea569665-2e5e-4418-894c-156d79694ff0", "type": "callout", "value": "<p data-block-key=\\"3huyc\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>"}, {"id": "585deb63-f3a4-44a3-b51e-e2f63b50546c", "type": "code", "value": {"code": "urlpatterns = [\\r\\n    # ...\\r\\n    path(\\"qr-code/\\", include(\\"wagtail_qrcode.urls\\")),\\r\\n    # ...\\r\\n]\\r\\n\\r\\n# or import the view and pass the view in the path function\\r\\n\\r\\nfrom wagtail_qrcode.views import qr_code_page_view\\r\\n\\r\\nurlpatterns = [\\r\\n    # ...\\r\\n    path(\\"qr-code/\\", qr_code_page_view, name=\\"qr-code-view\\"),\\r\\n    # ...\\r\\n]", "language": "python"}}, {"id": "f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef", "type": "rich_text", "value": "<h2 data-block-key=\\"9gkkh\\">Configuration</h2><p data-block-key=\\"18c5k\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\"8p35o\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\"9cqgq\\">scale: the size of the dots in the QR code</li><li data-block-key=\\"29rgi\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\"4q1ts\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\"62mh8\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>"}, {"id": "4d904202-2c05-467a-92cd-fad0619a3435", "type": "code", "value": {"code": "WAGTAIL_QR_CODE = {\\r\\n    \\"collection_name\\": \\"QR Codes\\",\\r\\n    \\"scale\\": 3,\\r\\n    \\"quiet_zone\\": 6,\\r\\n    \\"svg_has_xml_declaration\\": False,\\r\\n    \\"svg_has_doc_type_declaration\\": False,\\r\\n}", "language": "python"}}]	2023-08-29	Create a page in Wagtail CMS that has a corresponding QR Code.	wagtail-qrcode
29	[{"id": "5d91ff48-40e1-4fc0-9ac9-e7981a4abae7", "type": "heading", "value": {"level": "h2", "heading": "Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty."}}, {"id": "a530905c-e74f-4dc8-9e2a-404b2a774e21", "type": "image_aligned_block", "value": {"image": 3, "content": "", "alignment": "center"}}, {"id": "13954ef4-099d-481a-af95-f9e512580539", "type": "rich_text", "value": "<p data-block-key=\\"jtc07\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><p data-block-key=\\"4lpfj\\">Source code: <a href=\\"https://github.com/wagtail-packages/wagtail-honeypot\\">https://github.com/wagtail-packages/wagtail-honeypot</a></p><h2 data-block-key=\\"3hoo7\\">How it works</h2><p data-block-key=\\"cs1bi\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\"f1oqi\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\"dsumk\\">No email is sent</li><li data-block-key=\\"88avq\\">No submission is stored</li><li data-block-key=\\"3t5ui\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\"43lmu\\">Installation and setup</h2><p data-block-key=\\"1ug8g\\">Add the package to your python environment.</p>"}, {"id": "c69e143f-cfa6-4f4d-8104-309e7d3c498d", "type": "code", "value": {"code": "pip install wagtail-honeypot", "language": "bash"}}, {"id": "d6460773-b718-4a40-ad42-f88d30a801a5", "type": "rich_text", "value": "<p data-block-key=\\"7drfi\\">Add the package to your settings</p>"}, {"id": "694c8e33-827b-49ae-a6d3-c6445ba0ffca", "type": "code", "value": {"code": "INSTALLED_APPS = [\\r\\n    ...\\r\\n    \\"wagtail_honeypot\\",\\r\\n    ...\\r\\n]", "language": "python"}}, {"id": "f9631a20-249e-4848-8124-aca8afe7b327", "type": "rich_text", "value": "<h3 data-block-key=\\"3o35n\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\"88b3t\\">They will add a honeypot <a href=\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\"1164n\\">If you follow the official Wagtail docs for the <a href=\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\">Form Builder</a> your form should look something like this...</p>"}, {"id": "21772e85-31ad-4999-882e-0deab81d2895", "type": "code", "value": {"code": "from wagtail_honeypot.models import (\\r\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\r\\n)\\r\\n\\r\\nclass FormField(AbstractFormField):\\r\\n    page = ParentalKey(\\"FormPage\\", related_name=\\"form_fields\\")\\r\\n\\r\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\r\\n    intro = RichTextField(blank=True)\\r\\n    thank_you_text = RichTextField(blank=True)\\r\\n\\r\\n    content_panels = AbstractEmailForm.content_panels + [\\r\\n        FieldPanel(\\"intro\\", classname=\\"full\\"),\\r\\n        InlinePanel(\\"form_fields\\", label=\\"Form fields\\"),\\r\\n        FieldPanel(\\"thank_you_text\\", classname=\\"full\\"),\\r\\n        MultiFieldPanel(\\r\\n            [\\r\\n                FieldRowPanel(\\r\\n                    [\\r\\n                        FieldPanel(\\"from_address\\", classname=\\"col6\\"),\\r\\n                        FieldPanel(\\"to_address\\", classname=\\"col6\\"),\\r\\n                    ]\\r\\n                ),\\r\\n                FieldPanel(\\"subject\\"),\\r\\n            ],\\r\\n            \\"Email\\",\\r\\n        ),\\r\\n    ]\\r\\n\\r\\n    honeypot_panels = [\\r\\n        MultiFieldPanel(\\r\\n            [FieldPanel(\\"honeypot\\")],\\r\\n            heading=\\"Reduce Form Spam\\",\\r\\n        )\\r\\n    ]\\r\\n\\r\\n    edit_handler = TabbedInterface(\\r\\n        [\\r\\n            ObjectList(content_panels, heading=\\"Content\\"),\\r\\n            ObjectList(honeypot_panels, heading=\\"Honeypot\\"),\\r\\n            ObjectList(Page.promote_panels, heading=\\"Promote\\"),\\r\\n            ObjectList(Page.settings_panels, heading=\\"Settings\\", classname=\\"settings\\"),\\r\\n        ]\\r\\n    )", "language": "python"}}, {"id": "d5f27ff2-b05b-4635-8a1b-dcc532e3800f", "type": "rich_text", "value": "<p data-block-key=\\"c43eh\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>"}, {"id": "45d77a8b-a52c-4e6f-be15-c372d92f1da3", "type": "code", "value": {"code": "# replace\\r\\nedit_handler = TabbedInterface(\\r\\n        [\\r\\n            ObjectList(content_panels, heading=\\"Content\\"),\\r\\n            ObjectList(honeypot_panels, heading=\\"Honeypot\\"),\\r\\n            ObjectList(Page.promote_panels, heading=\\"Promote\\"),\\r\\n            ObjectList(Page.settings_panels, heading=\\"Settings\\", classname=\\"settings\\"),\\r\\n        ]\\r\\n    )\\r\\n\\r\\n# with\\r\\ncontent_panels = content_panels + honeypot_panels", "language": "python"}}, {"id": "d476e66b-de89-4677-bf2c-cf508811a046", "type": "rich_text", "value": "<p data-block-key=\\"4paen\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\"dutho\\">Honeypot Template Tag</h2><p data-block-key=\\"2fdvg\\">Add the following template tag loader to your form page.</p>"}, {"id": "d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0", "type": "code", "value": {"code": "{% load honeypot_tags %}\\r\\n\\r\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\r\\n<form>\\r\\n...\\r\\n{% honeypot_fields page.honeypot %}\\r\\n...\\r\\n</form>", "language": "html"}}, {"id": "0b9d8803-afcf-422d-a3c8-3677fe180d90", "type": "rich_text", "value": "<p data-block-key=\\"8nah2\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\"2o1oa\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\"c34si\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\"5bqe8\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\"504k0\\">Hide the Honeypot field</h2><p data-block-key=\\"4a9pm\\">The honeypot field should be invisible when viewed in a browser.</p><p data-block-key=\\"9ke2a\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\"2kddo\\">The package has some <a href=\\"https://github.com/wagtail-packages/wagtail-honeypot/tree/release/wagtail_honeypot/static\\">basic css and javascript</a> you can use to hide the field.</p><p data-block-key=\\"76bqd\\">Example: add the following to your form template.</p>"}, {"id": "f9169682-ecfd-44f5-ab6a-57fd2e971bbc", "type": "code", "value": {"code": "<!-- recommended: to add both but you can use one or the other -->\\r\\n\\r\\n{% block extra_css %}\\r\\n<link rel=\\"stylesheet\\" href=\\"{% static 'css/honeypot.css' %}\\">\\r\\n{% endblock extra_css %}\\r\\n\\r\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\r\\n\\r\\n{% block extra_js %}\\r\\n<script src=\\"{% static 'js/honeypot.js' %}\\"></script>\\r\\n{% endblock extra_js %}", "language": "html"}}, {"id": "2209fb70-5a1c-44a3-bcfe-7144afc899ba", "type": "callout", "value": "<p data-block-key=\\"kyjx1\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\"fqqdi\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>"}]	2023-09-01	Add optional honeypot protection to your Wagtail forms	wagtail-honeypot
30	[{"id": "367a7ef0-7148-4343-a455-0c27c9c3ae98", "type": "heading", "value": {"level": "h2", "heading": "An alternative Wagtail richtext filter that can be configured in your apps settings."}}, {"id": "a6f1f355-2a6f-4130-b51e-dc210edb16ac", "type": "rich_text", "value": "<p data-block-key=\\"ks518\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\"bcu68\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\"egaag\\">It&#x27;s especially useful if you are including a CSS framework such <a href=\\"https://bulma.io/\\">Bulma</a>, <a href=\\"https://codyhouse.co/\\">CodyHouse</a>, <a href=\\"https://tachyons.io/\\">Tachyons</a>, <a href=\\"https://tailwindcss.com/\\">Tailwind</a> other frameworks are available :)</p><p data-block-key=\\"3lo1p\\">Source code: <a href=\\"https://github.com/wagtail-packages/wagtail-f-richtext\\">https://github.com/wagtail-packages/wagtail-f-richtext</a></p><h2 data-block-key=\\"d0n2d\\">Installation</h2><p data-block-key=\\"39oaa\\">Install the package into your python environment.</p>"}, {"id": "554ef76d-adb3-40c8-be28-f61507e709b3", "type": "code", "value": {"code": "pip install wagtail-f-richext", "language": "bash"}}, {"id": "e61a59e0-3e26-4341-944e-65b6498abfe5", "type": "rich_text", "value": "<p data-block-key=\\"1gvir\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\"ff2m2\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\"1l769\\">Using the f_richtext filter</h2><p data-block-key=\\"cjkpb\\"><b>with a RichText field</b></p>"}, {"id": "f9e4a6af-67b3-41ff-993d-6444f135435b", "type": "code", "value": {"code": "<!-- will add classes to the HTML tags -->\\r\\n{{ page.body|f_richtext:\\"framework\\" }}\\r\\n\\r\\n<!-- will add inline styles to the HTML tags -->\\r\\n{{ page.body|f_richtext:\\"inline_styles\\" }}", "language": "html"}}, {"id": "9ea6842b-bb65-4c4b-9b44-42d9d96e9706", "type": "rich_text", "value": "<p data-block-key=\\"25bo7\\"><b>with a RichText block</b></p>"}, {"id": "9123d45e-8d11-455c-891b-ad7e72088c8e", "type": "code", "value": {"code": "<!-- will add classes to the HTML tags -->\\r\\n{{ value|f_richtext:\\"framework\\" }}\\r\\n\\r\\n<!-- will add inline styles to the HTML tags -->\\r\\n{{ value|f_richtext:\\"inline_styles\\" }}", "language": "html"}}, {"id": "27fe4916-521a-4b1c-a267-34027fd55033", "type": "rich_text", "value": "<p data-block-key=\\"6f5gl\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\"4v2l1\\">Sample framework rendered:</p>"}, {"id": "5e59332b-563e-41ce-ba8b-847a7fad6485", "type": "code", "value": {"code": "<div class=\\"text-component\\">\\r\\n <p data-block-key=\\"92eli\\">A paragraph <b class=\\"font-bold\\">Vulputate Vestibulum</b> <i class=\\"font-italic\\">Commodo</i></p>\\r\\n <h2 class=\\"heading-2\\" data-block-key=\\"fkden\\">Heading 2</h2>\\r\\n <ul class=\\"list list--ul\\">\\r\\n <li data-block-key=\\"fe5cv\\">UL List Item 1</li>\\r\\n <li data-block-key=\\"6ort3\\">UL List Item 2</li>\\r\\n </ul>\\r\\n <ol class=\\"list list--ol\\">\\r\\n <li data-block-key=\\"d5s3r\\">OL List Item 1</li>\\r\\n <li data-block-key=\\"5l47j\\">OL List Item 2</li>\\r\\n </ol>\\r\\n <img alt=\\"IMG_4511\\" class=\\"f-richtext-image f-richtext-image--right\\" height=\\"375\\" src=\\"/media/images/IMG_4511.width-500.jpg\\" width=\\"500\\">\\r\\n <div style=\\"clear: both;\\"></div>\\r\\n</div>", "language": "html"}}, {"id": "d8781440-cf57-4bd7-91fe-52107d1740da", "type": "rich_text", "value": "<p data-block-key=\\"938os\\">Sample inline styles rendered</p>"}, {"id": "b904ea93-47cc-49a4-a9d6-3a439cd1e90a", "type": "code", "value": {"code": "<div style=\\"overflow:hidden;\\">\\r\\n <p data-block-key=\\"92eli\\" style=\\"margin-bottom: 1em;\\">A paragraph <b style=\\"font-weight: bold;\\">Vulputate Vestibulum</b> <i style=\\"font-style: italic;\\">Commodo</i></p>\\r\\n <h2 data-block-key=\\"fkden\\" style=\\"margin-bottom: 1em;\\">Heading 2</h2>\\r\\n <ul style=\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\">\\r\\n <li data-block-key=\\"fe5cv\\">UL List Item 1</li>\\r\\n <li data-block-key=\\"6ort3\\">UL List Item 2</li>\\r\\n </ul>\\r\\n <ol style=\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\">\\r\\n <li data-block-key=\\"d5s3r\\">OL List Item 1</li>\\r\\n <li data-block-key=\\"5l47j\\">OL List Item 2</li>\\r\\n </ol>\\r\\n <img alt=\\"IMG_4511\\" class=\\"richtext-image right\\" height=\\"375\\" src=\\"/media/images/IMG_4511.width-500.jpg\\" style=\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\" width=\\"500\\">\\r\\n <div style=\\"clear: both;\\"></div>\\r\\n</div>", "language": "html"}}, {"id": "648be6f5-e862-4a5d-9eb3-50a5bccaed6c", "type": "rich_text", "value": "<h2 data-block-key=\\"b9vdu\\">Configuration</h2><p data-block-key=\\"dn5vr\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\"3iv53\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\"2755j\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\"9ovvc\\">Example for adding classes to HTML tags</h3>"}, {"id": "c228fdb7-a942-4b10-a137-d7fc3a6a71d7", "type": "code", "value": {"code": "F_RICHTEXT_FRAMEWORK_CONFIG = {\\r\\n # target html tags\\r\\n \\"classes\\": {\\r\\n   \\"h1\\": \\"heading-1\\",\\r\\n   \\"h2\\": \\"heading-2\\",\\r\\n    \\"ul\\": \\"list list--ul\\",\\r\\n   \\"ol\\": \\"list list--ol\\",\\r\\n   \\"a\\": \\"color-contrast-higher\\",\\r\\n   \\"b\\": \\"font-bold\\",\\r\\n   \\"i\\": \\"font-italic\\",\\r\\n },\\r\\n # wrap the richtext content with a class\\r\\n \\"wrapper_classes\\": [\\r\\n   \\"text-component\\",\\r\\n ],\\r\\n # swap the richtext image alignment classes\\r\\n \\"alignment_classes\\": {\\r\\n   \\"richtext-image left\\": \\"f-richtext-image f-richtext-image--left\\",\\r\\n   \\"richtext-image right\\": \\"f-richtext-image f-richtext-image--right\\",\\r\\n   \\"richtext-image full-width\\": \\"margin: 1em 0; width: 100%; height: auto;\\",\\r\\n },\\r\\n # remove any empty HTML tags (blank lines in the richtext editor)\\r\\n \\"remove_empty_tags\\": [\\r\\n  \\"p\\",\\r\\n ],\\r\\n # add a clearfix to the end of the content\\r\\n \\"append_clearfix\\": True,\\r\\n}", "language": "python"}}, {"id": "0823824f-5900-4d66-aa72-97e27ac7ea2e", "type": "rich_text", "value": "<h3 data-block-key=\\"588ok\\">Example for adding inline styles</h3>"}, {"id": "f180ed1a-8d1b-4ebf-ac5f-972f8a961591", "type": "code", "value": {"code": "F_RICHTEXT_INLINE_CONFIG = {\\r\\n # target html tags\\r\\n \\"styles\\": {\\r\\n   \\"h1\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"h2\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"h3\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"h4\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"h5\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"h6\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"p\\": \\"margin-bottom: 1em;\\",\\r\\n   \\"ul\\": \\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\",\\r\\n   \\"ol\\": \\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\",\\r\\n   \\"code\\": \\"font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;\\",\\r\\n   \\"sub\\": \\"vertical-align: sub; font-size: smaller;\\",\\r\\n   \\"sup\\": \\"vertical-align: super; font-size: smaller;\\",\\r\\n   \\"div\\": \\"float: none; clear: both;\\",\\r\\n   \\"iframe\\": \\"max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;\\",\\r\\n   \\"b\\": \\"font-weight: bold;\\",\\r\\n   \\"i\\": \\"font-style: italic;\\",\\r\\n },\\r\\n # wrap the richtext content with a style\\r\\n \\"wrapper_styles\\": [\\r\\n   \\"overflow:hidden;\\",\\r\\n ],\\r\\n # swap the richtext image alignment classes for an inline style\\r\\n \\"alignment_styles\\": {\\r\\n   \\"richtext-image left\\": \\"float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;\\",\\r\\n   \\"richtext-image right\\": \\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\",\\r\\n   \\"richtext-image full-width\\": \\"margin: 1em 0; width: 100%; height: auto;\\",\\r\\n },\\r\\n # remove any empty HTML tags (blank lines in the richtext editor)\\r\\n \\"remove_empty_tags\\": [\\r\\n   \\"p\\",\\r\\n ],\\r\\n # add a clearfix to the end of the content\\r\\n \\"append_clearfix\\": True,\\r\\n}", "language": "python"}}, {"id": "db18cca7-c24e-44b1-b743-f577cf44208e", "type": "rich_text", "value": "<h2 data-block-key=\\"9r5bk\\">Optional</h2><h3 data-block-key=\\"1a1b1\\">Use your own parser class</h3><p data-block-key=\\"umdb\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\"bf3q1\\">Create your own class that inherits from <a href=\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\">fRichTextParser</a> and add the following to your apps settings.</p>"}, {"id": "25ff7112-2e8a-43de-8649-ca77d320c5de", "type": "code", "value": {"code": "F_RICHTEXT_PARSER_CLASS=\\"the.dotted.path.to.your.own.Class\\"", "language": "python"}}, {"id": "bef7429f-d079-4dbe-866a-6ed0b2496b2c", "type": "rich_text", "value": "<h3 data-block-key=\\"h1i7\\">Use your own runner function</h3><p data-block-key=\\"btaqf\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\"1ouii\\">Create your own <a href=\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\">runner function</a> in a suitable place and add the following settings to your app.</p>"}, {"id": "daebb110-677b-432b-be80-d7e1056b4896", "type": "code", "value": {"code": "F_RICHTEXT_PARSER_RUNNER=\\"the.dotted.path.to.your.own.function\\"", "language": "python"}}]	2023-09-01	Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.	wagtail-f-richtext
32	[{"id": "a1707bb3-8296-427d-b96d-89f481a11947", "type": "rich_text", "value": "<p data-block-key=\\"pltev\\"><b><i>Under development</i></b></p><p data-block-key=\\"ev492\\">An admin interface to choose google street view imagery and display an embedded virtual tour.</p><p data-block-key=\\"213od\\">Powered by <a href=\\"https://developers.google.com/maps/documentation/javascript\\">google maps Javascript API</a> and <a href=\\"https://wagtail.org/\\">Wagtail CMS</a></p>"}, {"id": "1f4b1b74-f34e-49e7-ae0e-45a46a063f9f", "type": "rich_text", "value": "<h2 data-block-key=\\"pltev\\">Installation</h2><p data-block-key=\\"9bm0b\\">Install the package:</p>"}, {"id": "57b1b85c-4822-49d4-bdf0-fc955d92f3f9", "type": "code", "value": {"code": "pip install git+https://github.com/wagtail-packages/wagtail-360@main", "language": "bash"}}, {"id": "cdb7a7d6-e0ea-4af8-81d7-429a5eaac8be", "type": "rich_text", "value": "<p data-block-key=\\"636lp\\">Then add wagtail_360 to your installed apps:</p>"}, {"id": "46b922b5-b607-45d7-806c-babd27cf1480", "type": "code", "value": {"code": "INSTALLED_APPS = [\\r\\n    # ...\\r\\n    \\"wagtail_360\\",\\r\\n    # ...\\r\\n]", "language": "python"}}, {"id": "aa17ec4d-d7dd-4b4b-90c9-61e64c61869f", "type": "rich_text", "value": "<h2 data-block-key=\\"6r6sm\\">Usage</h2><p data-block-key=\\"91v4c\\">Add 2 page models.</p><h3 data-block-key=\\"6l22k\\">The Tour Index Page</h3><p data-block-key=\\"b61t1\\">This represents a virtual tour and is the parent page for each Panorama in this tour.</p>"}, {"id": "47777891-2de4-4df2-b28a-2d129ba19b2b", "type": "code", "value": {"code": "from wagtail_360.abstract_models import AbstractTour\\r\\n\\r\\nclass TourPage(AbstractTour, Page):\\r\\n    subpage_types = [\\"PanoramaPage\\"]\\r\\n    content_panels = Page.content_panels + [AbstractTour.panels]", "language": "python"}}, {"id": "d3cd0b74-383b-4641-9029-aa2df7090c6e", "type": "rich_text", "value": "<h3 data-block-key=\\"89pct\\">The Panorama Page Model</h3><p data-block-key=\\"1ukmu\\">This represents a single panorama and is used as a child page of a TourPage.</p>"}, {"id": "282cb24f-4bfc-41dd-bdc4-8fb456f1a82b", "type": "code", "value": {"code": "from wagtail_360.abstract_models import AbstractPanorama\\r\\n\\r\\nclass PanoramaPage(AbstractPanorama):\\r\\n    parent_page_types = [\\"TourPage\\"]\\r\\n    content_panels = Page.content_panels + AbstractPanorama.panels", "language": "python"}}, {"id": "b59cbf0f-a2d1-4283-ad7a-10d493b13897", "type": "rich_text", "value": "<p data-block-key=\\"a40qq\\">Then run:</p>"}, {"id": "35ca38e5-500a-431c-b4ba-07bd3aadb8f6", "type": "code", "value": {"code": "python manage.py makemigrations\\r\\npython manage.py migrate", "language": "bash"}}, {"id": "f540159a-11a4-4ea8-b8e0-bbad6cce120a", "type": "rich_text", "value": "<h2 data-block-key=\\"ftgtp\\">Configuration</h2><p data-block-key=\\"2ue3t\\">Set the configuration in your settings.py file</p><p data-block-key=\\"19i8j\\">A google maps API key is required. You can generate one at <a href=\\"https://developers.google.com/maps/documentation/javascript\\">https://developers.google.com/maps/documentation/javascript</a></p><p data-block-key=\\"9na3m\\">The service isn&#x27;t free but there&#x27;s a generous free tier available.</p>"}, {"id": "d7a2b052-a318-4e10-9944-8797238c4fdf", "type": "code", "value": {"code": "GOOGLE_MAPS_API_KEY = \\"your-google-maps-api-key\\"", "language": "python"}}, {"id": "66f354d3-b300-4933-a583-3b854da20713", "type": "rich_text", "value": "<p data-block-key=\\"8jqns\\"><i>If you don&#x27;t set the key the panorama images will still display but will be in developer mode.</i></p>"}]	2023-09-02	An admin interface to choose google street view imagery and display an embedded virtual tour.	
38	[{"id": "8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c", "type": "rich_text", "value": "<h2 data-block-key=\\"umtjb\\">Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.</h2><p data-block-key=\\"fdlpi\\">Installation and usage details can be read here: <a href=\\"https://github.com/wagtail-packages/wagtail-exposapi\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><p data-block-key=\\"fvc24\\">This is a re-work of the <a id=\\"34\\" linktype=\\"page\\">Response Checker</a> I created earlier and that command is still available in this package.</p><p data-block-key=\\"7aor\\">I have also created a stand alone click cli package that can be used in place of the command. <a href=\\"https://github.com/nickmoreton/wagtail-devtools-cli\\">CLI on github</a></p><h2 data-block-key=\\"edsds\\">Usage Suggestion</h2><p data-block-key=\\"38aku\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\"832hp\\">admin listing page urls.</li><li data-block-key=\\"6addd\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\"agc5k\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\"7dumf\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\"e8gsa\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\"em6sa\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\"3sja\\">use a tool like Postman to check the responses.</li><li data-block-key=\\"1sool\\">create a script to check the responses.</li><li data-block-key=\\"8vajh\\">use a monitoring service to check the responses.</li><li data-block-key=\\"f6o30\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\"dnb01\\">and so on.</li></ul>"}, {"id": "8aae95be-2a54-44ee-a73e-2ae079501c0d", "type": "rich_text", "value": "<h2 data-block-key=\\"umtjb\\">Included Base Command</h2><p data-block-key=\\"et15f\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\"8nn9n\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\"2cf89\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\"9mafs\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\"fbo9g\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\"8grbr\\">Create a new command in your site that extends BaseResponsesCommand.</p>"}, {"id": "7264100a-7512-4449-bf88-373fea2202da", "type": "code", "value": {"code": "from exposapi.responses_command import BaseResponsesCommand\\r\\n\\r\\nclass Command(BaseResponsesCommand):\\r\\n    pass", "language": "python"}}, {"id": "4885b2c5-17ef-47a8-b0ab-100beafe39c8", "type": "rich_text", "value": "<p data-block-key=\\"umtjb\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>"}, {"id": "4b4364e8-d143-4df8-8b8d-fd35c6c4a446", "type": "code", "value": {"code": "class Command(BaseResponsesCommand):\\r\\n    # you might want to fetch these from environment variables\\r\\n    username = \\"your-login-username\\"\\r\\n    password = \\"your-login-password\\"\\r\\n    url = \\"http://localhost:8000\\"  # the base url of your site\\r\\n    login_path = \\"/admin/login/\\"  # the login url for your site", "language": "python"}}, {"id": "189efce4-98e3-4378-9f7e-d51788cf4631", "type": "rich_text", "value": "<h2 data-block-key=\\"umtjb\\">Configuration</h2><p data-block-key=\\"7pm09\\">If you want to customise the introspection you can provide the configuration shown below.</p>"}, {"id": "387ffb35-bf15-4143-b2d7-c36b6238e08d", "type": "code", "value": {"code": "EXPOSAPI_CONFIG = {\\r\\n    \\"base_url\\": \\"http://localhost:8000\\",\\r\\n    \\"listing_exclude\\": [\\r\\n        \\"wagtailimages\\",\\r\\n        ...,  # these apps won't be included in the listing pages\\r\\n    ],\\r\\n    \\"listing_pages_config\\": [\\r\\n        {\\r\\n            \\"title\\": \\"Search promotions\\",\\r\\n            \\"app_name\\": \\"wagtailsearchpromotions\\",\\r\\n            \\"listing_name\\": \\"wagtailsearchpromotions:index\\",\\r\\n        },\\r\\n        {\\r\\n            \\"title\\": \\"Forms\\",\\r\\n            \\"app_name\\": \\"wagtailforms\\",\\r\\n            \\"listing_name\\": \\"wagtailforms:index\\",\\r\\n        },\\r\\n        ...,  # these will override the introspection for the listing pages\\r\\n    ],\\r\\n    \\"apps_exclude\\": [\\r\\n        \\"wagtailimages\\",\\r\\n        ...,  # these apps won't be included in the edit pages\\r\\n    ],\\r\\n}", "language": "python"}}]	2024-02-17	A JSON API to expose your Wagtail sites internals	wagtail-exposapi
\.


--
-- Data for Name: taggit_tag; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.taggit_tag (id, name, slug) FROM stdin;
\.


--
-- Data for Name: taggit_taggeditem; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.taggit_taggeditem (id, object_id, content_type_id, tag_id) FROM stdin;
\.


--
-- Data for Name: wagtailadmin_admin; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailadmin_admin (id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_collection; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_collection (id, path, depth, numchild, name) FROM stdin;
1	0001	1	0	Root
\.


--
-- Data for Name: wagtailcore_collectionviewrestriction; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_collectionviewrestriction (id, restriction_type, password, collection_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_collectionviewrestriction_groups; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_collectionviewrestriction_groups (id, collectionviewrestriction_id, group_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_comment; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_comment (id, text, contentpath, "position", created_at, updated_at, resolved_at, page_id, resolved_by_id, revision_created_id, user_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_commentreply; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_commentreply (id, text, created_at, updated_at, comment_id, user_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_groupapprovaltask; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_groupapprovaltask (task_ptr_id) FROM stdin;
1
\.


--
-- Data for Name: wagtailcore_groupapprovaltask_groups; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_groupapprovaltask_groups (id, groupapprovaltask_id, group_id) FROM stdin;
1	1	1
\.


--
-- Data for Name: wagtailcore_groupcollectionpermission; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_groupcollectionpermission (id, collection_id, group_id, permission_id) FROM stdin;
1	1	1	98
2	1	2	98
3	1	1	99
4	1	2	99
5	1	1	101
6	1	2	101
7	1	1	102
8	1	2	102
9	1	1	103
10	1	2	103
11	1	1	105
12	1	2	105
\.


--
-- Data for Name: wagtailcore_grouppagepermission; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_grouppagepermission (id, permission_type, group_id, page_id, permission_id) FROM stdin;
1	add	1	1	29
2	change	1	1	30
3	publish	1	1	35
4	add	2	1	29
5	change	2	1	30
6	lock	1	1	34
7	unlock	1	1	36
\.


--
-- Data for Name: wagtailcore_locale; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_locale (id, language_code) FROM stdin;
1	en
\.


--
-- Data for Name: wagtailcore_modellogentry; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_modellogentry (id, label, action, data, "timestamp", content_changed, deleted, object_id, content_type_id, user_id, uuid, revision_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_page; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_page (id, path, depth, numchild, title, slug, live, has_unpublished_changes, url_path, seo_title, show_in_menus, search_description, go_live_at, expire_at, expired, content_type_id, owner_id, locked, latest_revision_created_at, first_published_at, live_revision_id, last_published_at, draft_title, locked_at, locked_by_id, translation_key, locale_id, alias_of_id, latest_revision_id) FROM stdin;
23	00010001000100020003	5	0	Set up a webapp and bare-repo on PythonAnywhere	set-up-a-webapp-and-bare-repo-on-pythonanywhere	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-and-bare-repo-on-pythonanywhere/		f		\N	\N	f	28	1	f	2023-08-30 15:42:31.878+00	2023-08-30 15:42:32.035+00	55	2023-08-30 16:05:08.057+00	Set up a webapp and bare-repo on PythonAnywhere	\N	\N	479451c6-31ad-4b5c-b23a-c46ca26c56ef	1	\N	55
24	00010001000100020004	5	0	Add further deployment settings	add-further-deployment-settings	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-deployment-settings/		f		\N	\N	f	28	1	f	2023-08-30 15:56:55.365+00	2023-08-30 15:55:08.696+00	58	2023-08-30 16:05:08.29+00	Add further deployment settings	\N	\N	942996b8-e776-42fb-bde9-c8b78adeb6c7	1	\N	58
25	00010001000100020005	5	0	Starting a deployment	starting-a-deployment	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/starting-a-deployment/		f		\N	\N	f	28	1	f	2023-08-30 16:01:42.873+00	2023-08-30 16:01:43.057+00	59	2023-08-30 16:05:08.481+00	Starting a deployment	\N	\N	36bd0931-4989-43d1-8f51-fce985030f23	1	\N	59
26	0001000100010003	4	2	Deploy Wagtail CMS to PythonAnywhere (part 2)	deploy-wagtail-cms-to-pythonanywhere-part-2	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere-part-2/		f		\N	\N	f	30	1	f	2023-09-02 12:00:27.94+00	2023-08-30 16:16:25.552+00	119	2023-09-02 12:00:28.084+00	Deploy Wagtail CMS to PythonAnywhere (part 2)	\N	\N	e86d3215-6054-4473-a232-ecb59f5c2b82	1	\N	119
1	0001	1	1	Root	root	t	f	/		f		\N	\N	f	1	\N	f	\N	\N	\N	\N	Root	\N	\N	a25a68bb-9ae4-432c-a7b6-cc51bf84619a	1	\N	\N
3	00010001	2	2	Home	home	t	f	/home/		f		\N	\N	f	3	\N	f	2023-09-01 15:07:28.656+00	2023-09-01 14:49:04.759+00	78	2023-09-01 15:07:28.799+00	Home	\N	\N	6148f0ec-3761-4f52-b627-7895c99b3bea	1	\N	78
4	000100010001	3	8	Articles	articles	t	f	/home/articles/		f		\N	\N	f	29	1	f	2023-09-02 09:46:22.839+00	2023-08-28 15:23:14.678+00	97	2023-09-02 09:46:22.991+00	Articles	\N	\N	d7209bd3-4d98-424b-9925-54b52d457cb2	1	\N	97
5	000100010002	3	5	Packages	packages	t	f	/home/packages/		f		\N	\N	f	31	1	f	2023-08-28 15:23:42.131+00	2023-08-28 15:23:42.327+00	3	2023-08-28 15:23:42.327+00	Packages	\N	\N	79393666-7574-43d0-8c99-cc32f3c78c74	1	\N	3
6	0001000100010002	4	18	Deploy Wagtail CMS to PythonAnywhere	deploy-wagtail-cms-to-pythonanywhere	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/		f		\N	\N	f	30	1	f	2023-09-26 12:29:28.761+00	2023-08-28 15:25:09.097+00	145	2023-09-26 12:29:28.935+00	Deploy Wagtail CMS to PythonAnywhere	\N	\N	2dcfe825-8716-4d1e-868d-6a97fbc7e8e2	1	\N	145
7	00010001000100020006	5	0	Create a git repo to store the source code	create-a-git-repo-to-store-the-source-code	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-git-repo-to-store-the-source-code/		f		\N	\N	f	28	1	f	2023-08-28 16:42:48.155+00	2023-08-28 15:29:28.836+00	\N	2023-08-28 16:42:48.263+00	Create a git repo to store the source code	\N	\N	25afd220-b19c-410e-8d4a-f8219e39a172	1	\N	39
8	00010001000100020007	5	0	Set up a webapp on PythonAnywhere	set-up-a-webapp-on-pythonanywhere	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/		f		\N	\N	f	28	1	f	2023-08-28 15:50:50.412+00	2023-08-28 15:33:57.922+00	\N	2023-08-28 15:50:50.555+00	Set up a webapp on PythonAnywhere	\N	\N	539d06a5-bdc6-40f6-bdbd-c5a13d156320	1	\N	17
9	00010001000100020008	5	0	Python dependencies	python-dependencies	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/python-dependencies/		f		\N	\N	f	28	1	f	2023-08-28 15:54:04.935+00	2023-08-28 15:54:05.064+00	\N	2023-08-28 15:54:05.064+00	Python dependencies	\N	\N	7a66b01c-2c27-435c-b167-56678f398c4f	1	\N	19
10	0001000100010002000A	5	0	Start a Wagtail site	start-a-wagtail-site	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-wagtail-site/		f		\N	\N	f	28	1	f	2023-08-28 16:06:37.043+00	2023-08-28 16:06:37.191+00	\N	2023-08-28 16:06:37.191+00	Start a Wagtail site	\N	\N	ac74b3dd-9a3f-486f-ad1a-4a2011a51fee	1	\N	22
11	0001000100010002000B	5	0	Setup environment variables	setup-environment-variables	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-environment-variables/		f		\N	\N	f	28	1	f	2023-08-28 16:11:00.639+00	2023-08-28 16:11:00.732+00	\N	2023-08-28 16:11:00.732+00	Setup environment variables	\N	\N	f9c2bf9c-17ac-4a01-950b-28523d17adf4	1	\N	23
12	0001000100010002000C	5	0	Add a local mysql docker container for development	add-a-local-mysql-docker-container-for-development	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-a-local-mysql-docker-container-for-development/		f		\N	\N	f	28	1	f	2023-08-28 16:17:23.699+00	2023-08-28 16:12:38.707+00	\N	2023-08-28 16:17:23.843+00	Add a local mysql docker container for development	\N	\N	03dc9b6e-26d7-45be-bb04-f18395af1969	1	\N	27
13	0001000100010002000D	5	0	Configure Wagtail to use the Mysql database	configure-wagtail-to-use-the-mysql-database	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/configure-wagtail-to-use-the-mysql-database/		f		\N	\N	f	28	1	f	2023-08-28 16:23:46.141+00	2023-08-28 16:21:33.051+00	\N	2023-08-28 16:23:46.315+00	Configure Wagtail to use the Mysql database	\N	\N	2f0eb026-67ea-4e67-ad44-9be27fbd40c7	1	\N	30
14	0001000100010002000E	5	0	Create a Mysql database on PythonAnywhere	create-a-mysql-database-on-pythonanywhere	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-mysql-database-on-pythonanywhere/		f		\N	\N	f	28	1	f	2023-08-28 16:26:57.638+00	2023-08-28 16:26:12.727+00	\N	2023-08-28 16:26:57.715+00	Create a Mysql database on PythonAnywhere	\N	\N	de563c28-0774-4966-a16b-cb46a0b9ee9e	1	\N	32
15	0001000100010002000F	5	0	Update some web app settings	update-some-web-app-settings	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/update-some-web-app-settings/		f		\N	\N	f	28	1	f	2023-08-28 16:29:36.571+00	2023-08-28 16:29:36.7+00	\N	2023-08-28 16:29:36.7+00	Update some web app settings	\N	\N	8d1e6b50-705f-4623-9a71-e8ba9764b89f	1	\N	33
16	0001000100010002000G	5	0	Alter Wagtail settings to use more environment variables	alter-wagtail-settings-to-use-more-environment-variables	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/alter-wagtail-settings-to-use-more-environment-variables/		f		\N	\N	f	28	1	f	2023-08-28 16:32:21.675+00	2023-08-28 16:32:21.803+00	\N	2023-08-28 16:32:21.803+00	Alter Wagtail settings to use more environment variables	\N	\N	2bdfdce9-4c0b-43d8-b3c1-edaf2a430d2c	1	\N	34
17	0001000100010002000H	5	0	Add further steps to the post-recieve hook	add-further-steps-to-the-post-recieve-hook	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-steps-to-the-post-recieve-hook/		f		\N	\N	f	28	1	f	2023-08-28 16:34:54.627+00	2023-08-28 16:34:54.771+00	\N	2023-08-28 16:34:54.771+00	Add further steps to the post-recieve hook	\N	\N	66a67fa5-2dc7-4dd1-83a9-8370b10e70d9	1	\N	35
18	0001000100010002000I	5	0	Update the WSG file on PythonAnywhere	update-the-wsg-file-on-pythonanywhere	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/update-the-wsg-file-on-pythonanywhere/		f		\N	\N	f	28	1	f	2023-08-28 16:36:31.833+00	2023-08-28 16:36:31.939+00	\N	2023-08-28 16:36:31.939+00	Update the WSG file on PythonAnywhere	\N	\N	0cdba657-2c5e-4ccc-9886-dd14b23d7361	1	\N	36
19	0001000100010002000J	5	0	Start a deployment	start-a-deployment	f	t	/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-deployment/		f		\N	\N	f	28	1	f	2023-08-28 16:40:20.141+00	2023-08-28 16:40:20.275+00	\N	2023-08-28 16:40:20.275+00	Start a deployment	\N	\N	02c749b5-1546-4244-95fe-559b3101783c	1	\N	37
20	0001000100020001	4	0	Wagtail QR code	wagtail-qr-code	t	f	/home/packages/wagtail-qr-code/		f		\N	\N	f	32	1	f	2023-09-03 10:24:35.927+00	2023-08-29 12:27:18.553+00	122	2023-09-03 10:24:36.128+00	Wagtail QR code	\N	\N	040dc038-f341-426e-b654-559598abdc1d	1	\N	122
21	00010001000100020001	5	0	Initial repo and starting a new Wagtail project	initial-repo-and-starting-a-new-wagtail-project	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/initial-repo-and-starting-a-new-wagtail-project/		f		\N	\N	f	28	1	f	2023-09-26 12:30:34.848+00	2023-08-30 15:10:48.532+00	146	2023-09-26 12:30:34.983+00	Initial repo and starting a new Wagtail project	\N	\N	da0a702c-52e0-4199-a7b9-dc9fa0312509	1	\N	146
22	00010001000100020002	5	0	Setup to use Mysql	setup-to-use-mysql	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/		f		\N	\N	f	28	1	f	2023-09-26 12:32:06.572+00	2023-08-30 15:22:59.493+00	147	2023-09-26 12:32:06.724+00	Setup to use Mysql	\N	\N	d7e1a292-936e-44f2-ab26-3c492352ea83	1	\N	147
27	00010001000100030001	5	0	Set up Webpack and client side code compilation	set-up-webpack-and-client-side-code-compilation	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere-part-2/set-up-webpack-and-client-side-code-compilation/		f		\N	\N	f	28	1	f	2024-09-28 12:05:09.991+00	2023-08-30 16:36:11.615+00	171	2024-09-28 12:05:10.087+00	Set up Webpack and client side code compilation	\N	\N	d8cf4c84-68bb-4faa-961c-6a6e9c760071	1	\N	171
28	00010001000100030002	5	0	Set up pre-commit	set-up-pre-commit	t	f	/home/articles/deploy-wagtail-cms-to-pythonanywhere-part-2/set-up-pre-commit/		f		\N	\N	f	28	1	f	2023-08-30 16:46:14.139+00	2023-08-30 16:46:14.188+00	73	2023-08-30 16:46:14.188+00	Set up pre-commit	\N	\N	867deb38-738b-45f0-9c88-095e745bc94a	1	\N	73
29	0001000100020002	4	0	Wagtail Honeypot	wagtail-honeypot	t	f	/home/packages/wagtail-honeypot/		f		\N	\N	f	32	1	f	2023-09-24 16:48:54.532+00	2023-09-01 16:30:20.993+00	143	2023-09-24 16:48:54.748+00	Wagtail Honeypot	\N	\N	c4ade89a-781d-401e-8784-8d6ba78a8964	1	\N	143
30	0001000100020003	4	0	Wagtail (formatted) richtext	wagtail-formatted-richtext	t	f	/home/packages/wagtail-formatted-richtext/		f		\N	\N	f	32	1	f	2023-09-03 10:23:13.766+00	2023-09-01 16:49:28.42+00	120	2023-09-03 10:23:13.96+00	Wagtail (formatted) richtext	\N	\N	a547de4d-f2ad-441f-b4b5-7de9a2746eb9	1	\N	120
32	0001000100020004	4	0	Wagtail 360° virtual tours	wagtail-360-virtual-tours	f	t	/home/packages/wagtail-360-virtual-tours/		f		\N	\N	f	32	1	f	2023-09-02 09:45:05.173+00	2023-09-02 09:45:05.254+00	\N	2023-09-02 09:45:05.254+00	Wagtail 360° virtual tours	\N	\N	94aa45e4-807f-4e3a-aaaf-f025713d7c59	1	\N	96
33	0001000100010004	4	0	Python dependency version checker	python-dependency-version-checker	t	f	/home/articles/python-dependency-version-checker/		f		\N	\N	f	30	1	f	2023-09-02 10:03:51.612+00	2023-09-02 10:03:51.733+00	100	2023-09-02 10:03:51.733+00	Python dependency version checker	\N	\N	1ee1aaa6-28fb-430b-a407-9dc1c07af0aa	1	\N	100
34	0001000100010005	4	0	Wagtail Response Checker	wagtail-response-checker	t	f	/home/articles/wagtail-response-checker/		f		\N	\N	f	30	1	f	2023-09-24 16:44:25.443+00	2023-09-02 10:33:55.592+00	142	2023-09-24 16:44:25.802+00	Wagtail Response Checker	\N	\N	41860149-0f71-4079-992d-b871ab2a64fd	1	\N	142
35	0001000100010006	4	0	Wagtail Content Types Reporter	wagtail-content-types-reporter	t	f	/home/articles/wagtail-content-types-reporter/		f		\N	\N	f	30	1	f	2023-09-02 11:59:03.836+00	2023-09-02 11:49:38.673+00	117	2023-09-02 11:59:03.989+00	Wagtail Content Types Reporter	\N	\N	3e5679b7-3a95-42b8-917c-af1f834b3be6	1	\N	117
36	0001000100010007	4	0	Wagtail Start CLI	wagtail-start-cli	t	f	/home/articles/wagtail-start-cli/		f		\N	\N	f	30	1	f	2024-09-30 08:09:02.079+00	2023-09-22 21:51:14.4+00	173	2024-09-30 08:09:02.3+00	Wagtail Start CLI	\N	\N	4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d	1	\N	173
37	0001000100010008	4	0	Click to Edit Template Tags	click-to-edit-template-tags	f	t	/home/articles/click-to-edit-template-tags/		f		\N	\N	f	30	1	f	2023-09-30 22:54:41.632+00	\N	\N	\N	Click to Edit Template Tags	\N	\N	f63621e0-6229-47c4-92a5-0e0b850be8b3	1	\N	161
38	0001000100020005	4	0	Wagtail Exposapi	wagtail-exposapi	t	f	/home/packages/wagtail-exposapi/		t		\N	\N	f	32	1	f	2024-09-28 13:09:05.604+00	2024-02-17 16:08:51.26+00	172	2024-09-28 13:09:05.733+00	Wagtail Exposapi	\N	\N	7ea898e9-cda3-4a2e-b2d9-533f5f525d49	1	\N	172
39	0001000100010009	4	0	Getting Started With Wagtail	getting-started-with-wagtail	t	f	/home/articles/getting-started-with-wagtail/		f		\N	\N	f	30	1	f	2024-12-18 21:50:33.478+00	2024-12-18 17:52:47.185+00	190	2024-12-18 21:50:33.535+00	Getting Started With Wagtail	\N	\N	a4f433ec-c61a-4cae-9342-5f29173e2cf4	1	\N	190
\.


--
-- Data for Name: wagtailcore_pagelogentry; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_pagelogentry (id, label, action, data, "timestamp", content_changed, deleted, content_type_id, page_id, revision_id, user_id, uuid) FROM stdin;
\.


--
-- Data for Name: wagtailcore_pagesubscription; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_pagesubscription (id, comment_notifications, page_id, user_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_pageviewrestriction; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_pageviewrestriction (id, password, page_id, restriction_type) FROM stdin;
\.


--
-- Data for Name: wagtailcore_pageviewrestriction_groups; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_pageviewrestriction_groups (id, pageviewrestriction_id, group_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_referenceindex; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_referenceindex (id, object_id, to_object_id, model_path, content_path, content_path_hash, base_content_type_id, content_type_id, to_content_type_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_revision; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_revision (id, submitted_for_moderation, created_at, content, approved_go_live_at, object_id, user_id, content_type_id, base_content_type_id, object_str) FROM stdin;
1	f	2023-08-28 15:23:07.293+00	{"pk": 4, "body": "[]", "live": false, "path": "000100010001", "slug": "articles", "depth": 3, "owner": 1, "title": "Articles", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Articles", "content_type": 29, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "d7209bd3-4d98-424b-9925-54b52d457cb2", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	4	1	29	1	Articles
2	f	2023-08-28 15:23:14.563+00	{"pk": 4, "body": "[]", "live": false, "path": "000100010001", "slug": "articles", "depth": 3, "owner": 1, "title": "Articles", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Articles", "content_type": 29, "live_revision": null, "show_in_menus": false, "latest_revision": 1, "translation_key": "d7209bd3-4d98-424b-9925-54b52d457cb2", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-28T15:23:07.293Z"}	\N	4	1	29	1	Articles
3	f	2023-08-28 15:23:42.131+00	{"pk": 5, "body": "[]", "live": true, "path": "000100010002", "slug": "packages", "depth": 3, "owner": 1, "title": "Packages", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Packages", "content_type": 31, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "79393666-7574-43d0-8c99-cc32f3c78c74", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	5	1	31	1	Packages
4	f	2023-08-28 15:25:08.959+00	{"pk": 6, "body": "[]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "an excerpt", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
5	f	2023-08-28 15:26:31.98+00	{"pk": 4, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xebs3\\\\\\">Nice articles</p>\\", \\"id\\": \\"3c89e23c-a0af-45ef-97ba-df38c009bbd4\\"}]", "live": true, "path": "000100010001", "slug": "articles", "depth": 3, "owner": 1, "title": "Articles", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 1, "url_path": "/home/articles/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Articles", "content_type": 29, "live_revision": 2, "show_in_menus": false, "latest_revision": 2, "translation_key": "d7209bd3-4d98-424b-9925-54b52d457cb2", "last_published_at": "2023-08-28T15:23:14.678Z", "first_published_at": "2023-08-28T15:23:14.678Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:23:14.563Z"}	\N	4	1	29	1	Articles
6	f	2023-08-28 15:28:01.616+00	{"pk": 6, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"sb0an\\\\\\">Say something</p>\\", \\"id\\": \\"7d657bbe-d1ac-48f0-bfee-00ca83e8502c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com\\\\\\">PythonAnywhere</a></p><p data-block-key=\\\\\\"6ujpq\\\\\\">I&#x27;m going to build a site for myself, <a href=\\\\\\"http://nickmoreton.co.uk\\\\\\">nickmoreton.co.uk</a>. I&#x27;m not sure yet what I&#x27;m going to put on it, but I&#x27;ll figure that out as I go along. It&#x27;s a starting point that has all the elements one might need to build a Wagtail site and deploy it live.</p><p data-block-key=\\\\\\"88hsl\\\\\\">The official <a href=\\\\\\"https://wagtail.org\\\\\\">Wagtail documentation</a> is excellent and I recommend you read the Developer Documentation, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail</a> site but I wanted to document the process I go through.</p><p data-block-key=\\\\\\"851pf\\\\\\">I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade, as a freelancer and I now work for <a href=\\\\\\"https://torchbox.com\\\\\\">Torchbox</a> as a developer.</p><p data-block-key=\\\\\\"b9246\\\\\\">The tech stack so far is:</p><ul><li data-block-key=\\\\\\"9ghcn\\\\\\">Python:3.10</li><li data-block-key=\\\\\\"b3gr6\\\\\\">Mysql:5.7 (this is a limitation of PythonAnywhere)</li><li data-block-key=\\\\\\"8h2gq\\\\\\">Node / webpack to build the frontend</li><li data-block-key=\\\\\\"33al9\\\\\\">CI actions for code checks</li><li data-block-key=\\\\\\"cplc0\\\\\\">Pre-commit to run git hooks</li><li data-block-key=\\\\\\"5eh7v\\\\\\">Git push deployments to PythonAnywhere (like Heroku etc.)</li><li data-block-key=\\\\\\"684ub\\\\\\">Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"37tvd\\\\\\">Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"2gpcg\\\\\\">The finished source code for the live site is here [https://github.com/nickmoreton/nickmoreton.co.uk](https://github.com/nickmoreton/nickmoreton.co.uk) on the `main` branch and will become more complete over time. It&#x27;s a work in progress and at the moment is just a home page.</p><p data-block-key=\\\\\\"1oo2m\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I need to use the paid version of PythonAnywhere, which starts at \\\\u20ac5/month. You could use a free account but you&#x27;ll need to do your deployments manually and use `git pull` to update the code.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 4, "show_in_menus": false, "latest_revision": 4, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-28T15:25:09.097Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:25:08.959Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
7	f	2023-08-28 15:29:28.71+00	{"pk": 7, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jcfbx\\\\\\">I&#x27;m using Github for this project.</p><p data-block-key=\\\\\\"163ct\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"v2q5\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin. Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"41fa1bc3-eaf2-499b-94a0-ed392ef94063\\"}]", "live": true, "path": "00010001000100010001", "slug": "create-a-git-repo-to-store-the-source-code", "depth": 5, "owner": 1, "title": "Create a git repo to store the source code", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-git-repo-to-store-the-source-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Create a git repo to store the source code", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "25afd220-b19c-410e-8d4a-f8219e39a172", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	7	1	28	1	Create a git repo to store the source code
8	f	2023-08-28 15:31:12.915+00	{"pk": 8, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"zcy2h\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"rflk\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"du9hm\\\\\\">Choose:</p><ol><li data-block-key=\\\\\\"ah19e\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"d033t\\\\\\">Manual setup</li><li data-block-key=\\\\\\"7v757\\\\\\">Python (latest you can choose)</li></ol><p data-block-key=\\\\\\"7fra7\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"a09358fe-cd24-4dea-900f-397f25996747\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3sg5q\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk<br/>It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p><h2 data-block-key=\\\\\\"9pvmu\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"7lcja\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"7qoet\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h2 data-block-key=\\\\\\"ed40a\\\\\\">Add directories for your webapp</h2><p data-block-key=\\\\\\"788o4\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><h3 data-block-key=\\\\\\"3q63l\\\\\\">Source code</h3><p data-block-key=\\\\\\"6sh23\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"2irrv\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><h2 data-block-key=\\\\\\"2qp5s\\\\\\">Bare repos storage</h2><p data-block-key=\\\\\\"bh7o7\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"3anc\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"a3qss\\\\\\">Environment variables storage</h2><p data-block-key=\\\\\\"5mt6r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"cv2b1\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><h2 data-block-key=\\\\\\"4jgl\\\\\\">Virtual Environments</h2><p data-block-key=\\\\\\"9ccp7\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><h3 data-block-key=\\\\\\"7d2ov\\\\\\">Create a virtual environment</h3><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p><p data-block-key=\\\\\\"l159\\\\\\">mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10</p><p data-block-key=\\\\\\"bhgp1\\\\\\">To confirm the virtual environment has been created run:</p><p data-block-key=\\\\\\"15dfi\\\\\\">ls ~/.virtualenvs/nickmoreton.co.uk_venv/<br/>&gt; bin lib pyvenv.cfg</p><h3 data-block-key=\\\\\\"239v2\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/>    # only the main branch can be deployed<br/><br/>    # ensure the site directory exists<br/>    mkdir -p /var/www/sites/nickmoreton.co.uk<br/>    <br/>    # checkout the latest version of the site<br/>    git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main <br/>    <br/>    # there will be more content added here later ...    <br/>else<br/>    echo &quot;Ref $ref successfully received.  Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"eeed11fc-0686-431c-8e84-e296c75767aa\\"}]", "live": false, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
9	f	2023-08-28 15:33:57.819+00	{"pk": 8, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"zcy2h\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"rflk\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"du9hm\\\\\\">Choose:</p><ol><li data-block-key=\\\\\\"ah19e\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"d033t\\\\\\">Manual setup</li><li data-block-key=\\\\\\"7v757\\\\\\">Python (latest you can choose)</li></ol><p data-block-key=\\\\\\"7fra7\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"a09358fe-cd24-4dea-900f-397f25996747\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3sg5q\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"dqgd6\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"eeed11fc-0686-431c-8e84-e296c75767aa\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Configure your domain name\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"0fa25a3e-3caf-403c-9797-14bdea17d445\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ibsy0\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Add directories for your webapp</h2><p data-block-key=\\\\\\"788o4\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><h3 data-block-key=\\\\\\"3q63l\\\\\\">Source code</h3><p data-block-key=\\\\\\"6sh23\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"2irrv\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><h2 data-block-key=\\\\\\"2qp5s\\\\\\">Bare repos storage</h2><p data-block-key=\\\\\\"bh7o7\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"3anc\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"a3qss\\\\\\">Environment variables storage</h2><p data-block-key=\\\\\\"5mt6r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"cv2b1\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><h2 data-block-key=\\\\\\"4jgl\\\\\\">Virtual Environments</h2><p data-block-key=\\\\\\"9ccp7\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><h3 data-block-key=\\\\\\"7d2ov\\\\\\">Create a virtual environment</h3><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p><p data-block-key=\\\\\\"l159\\\\\\">mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10</p><p data-block-key=\\\\\\"bhgp1\\\\\\">To confirm the virtual environment has been created run:</p><p data-block-key=\\\\\\"15dfi\\\\\\">ls ~/.virtualenvs/nickmoreton.co.uk_venv/<br/>&gt; bin lib pyvenv.cfg</p><h3 data-block-key=\\\\\\"239v2\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}]", "live": false, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 8, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-28T15:31:12.915Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
10	f	2023-08-28 15:35:05.188+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ol><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ol><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Configure your domain name\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"0fa25a3e-3caf-403c-9797-14bdea17d445\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ibsy0\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Add directories for your webapp</h2><p data-block-key=\\\\\\"788o4\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><h3 data-block-key=\\\\\\"3q63l\\\\\\">Source code</h3><p data-block-key=\\\\\\"6sh23\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"2irrv\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><h2 data-block-key=\\\\\\"2qp5s\\\\\\">Bare repos storage</h2><p data-block-key=\\\\\\"bh7o7\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"3anc\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"a3qss\\\\\\">Environment variables storage</h2><p data-block-key=\\\\\\"5mt6r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"cv2b1\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><h2 data-block-key=\\\\\\"4jgl\\\\\\">Virtual Environments</h2><p data-block-key=\\\\\\"9ccp7\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><h3 data-block-key=\\\\\\"7d2ov\\\\\\">Create a virtual environment</h3><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p><p data-block-key=\\\\\\"l159\\\\\\">mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10</p><p data-block-key=\\\\\\"bhgp1\\\\\\">To confirm the virtual environment has been created run:</p><p data-block-key=\\\\\\"15dfi\\\\\\">ls ~/.virtualenvs/nickmoreton.co.uk_venv/<br/>&gt; bin lib pyvenv.cfg</p><h3 data-block-key=\\\\\\"239v2\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 9, "show_in_menus": false, "latest_revision": 9, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:33:57.922Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:33:57.819Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
11	f	2023-08-28 15:35:27.219+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Configure your domain name\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"0fa25a3e-3caf-403c-9797-14bdea17d445\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ibsy0\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Add directories for your webapp</h2><p data-block-key=\\\\\\"788o4\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><h3 data-block-key=\\\\\\"3q63l\\\\\\">Source code</h3><p data-block-key=\\\\\\"6sh23\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"2irrv\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><h2 data-block-key=\\\\\\"2qp5s\\\\\\">Bare repos storage</h2><p data-block-key=\\\\\\"bh7o7\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"3anc\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"a3qss\\\\\\">Environment variables storage</h2><p data-block-key=\\\\\\"5mt6r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"cv2b1\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><h2 data-block-key=\\\\\\"4jgl\\\\\\">Virtual Environments</h2><p data-block-key=\\\\\\"9ccp7\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><h3 data-block-key=\\\\\\"7d2ov\\\\\\">Create a virtual environment</h3><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p><p data-block-key=\\\\\\"l159\\\\\\">mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10</p><p data-block-key=\\\\\\"bhgp1\\\\\\">To confirm the virtual environment has been created run:</p><p data-block-key=\\\\\\"15dfi\\\\\\">ls ~/.virtualenvs/nickmoreton.co.uk_venv/<br/>&gt; bin lib pyvenv.cfg</p><h3 data-block-key=\\\\\\"239v2\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 10, "show_in_menus": false, "latest_revision": 10, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:35:05.352Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:35:05.188Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
12	f	2023-08-28 15:38:48.084+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Configure your domain name\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"0fa25a3e-3caf-403c-9797-14bdea17d445\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ibsy0\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"eu9el\\\\\\">Add directories for your webapp</h2><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><h3 data-block-key=\\\\\\"8m5t3\\\\\\">Source code</h3><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><h2 data-block-key=\\\\\\"er3ru\\\\\\">Bare repos storage</h2><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"45g16\\\\\\">Environment variables storage</h2><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><h2 data-block-key=\\\\\\"1n2pj\\\\\\">Virtual Environments</h2><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 11, "show_in_menus": false, "latest_revision": 11, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:35:27.326Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:35:27.219Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
13	f	2023-08-28 15:39:39.909+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Configure your domain name\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"0fa25a3e-3caf-403c-9797-14bdea17d445\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ibsy0\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eu9el\\\\\\"><b>Add directories for your webapp</b></p><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"8m5t3\\\\\\"><b>Source code</b></p><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\\\\\"er3ru\\\\\\"><b>Bare repos storage</b></p><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\\\\\"45g16\\\\\\"><b>Environment variables storage</b></p><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\\\\\"1n2pj\\\\\\"><b>Virtual Environments</b></p><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 12, "show_in_menus": false, "latest_revision": 12, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:38:48.215Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:38:48.084Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
14	f	2023-08-28 15:40:25.88+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ibsy0\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"f0gfu\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eu9el\\\\\\"><b>Add directories for your webapp</b></p><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"8m5t3\\\\\\"><b>Source code</b></p><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\\\\\"er3ru\\\\\\"><b>Bare repos storage</b></p><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\\\\\"45g16\\\\\\"><b>Environment variables storage</b></p><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\\\\\"1n2pj\\\\\\"><b>Virtual Environments</b></p><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 13, "show_in_menus": false, "latest_revision": 13, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:39:40.063Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:39:39.909Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
15	f	2023-08-28 15:41:01.651+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ibsy0\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"f0gfu\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eu9el\\\\\\"><b>Add directories for your webapp</b></p><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"8m5t3\\\\\\"><b>Source code</b></p><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\\\\\"er3ru\\\\\\"><b>Bare repos storage</b></p><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\\\\\"45g16\\\\\\"><b>Environment variables storage</b></p><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\\\\\"1n2pj\\\\\\"><b>Virtual Environments</b></p><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"4le57\\\\\\">touch ~/.env-settings/nickmoreton.co.uk/.env</p><p data-block-key=\\\\\\"98ifh\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c3psm\\\\\\">echo &quot;set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate</p><p data-block-key=\\\\\\"aou03\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4j5iu\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"pkf6\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"3tmhv\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"60qe2\\\\\\">cd ~/bare-repos/nickmoreton.co.uk.git/</p><p data-block-key=\\\\\\"1p0s4\\\\\\">and run:</p><p data-block-key=\\\\\\"c13v3\\\\\\">git init --bare</p><p data-block-key=\\\\\\"2jfpv\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"19jec\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 14, "show_in_menus": false, "latest_revision": 14, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:40:26.023Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:40:25.880Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
16	f	2023-08-28 15:45:17.556+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ibsy0\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"f0gfu\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eu9el\\\\\\"><b>Add directories for your webapp</b></p><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"8m5t3\\\\\\"><b>Source code</b></p><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\\\\\"er3ru\\\\\\"><b>Bare repos storage</b></p><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\\\\\"45g16\\\\\\"><b>Environment variables storage</b></p><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\\\\\"1n2pj\\\\\\"><b>Virtual Environments</b></p><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch ~/.env-settings/nickmoreton.co.uk/.env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4eb4f9d5-79c4-4f46-8f4f-6f7f64f5b7ed\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9hmnn\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>\\", \\"id\\": \\"3874a6b0-c2f7-4689-8d82-6f7d0a976bae\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a\\\\\\" >> ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0475fc58-71d8-45b6-b834-91b2a3bb7b7d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bu4pk\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p>\\", \\"id\\": \\"630f9bf9-40f8-4204-a6ad-9123ad1414ef\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7fs22\\\\\\">Set up a git bare repo</h2>\\", \\"id\\": \\"d4ef1dbc-48d8-4d33-8471-c1eef4597b51\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"9xexe\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p>\\", \\"id\\": \\"f3b58428-d467-4ddc-b1c5-8afdf5f3c44f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dj0r\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p>\\", \\"id\\": \\"076b0400-646e-46d1-9684-a4ae2e5a6e97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cd ~/bare-repos/nickmoreton.co.uk.git/\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"64d72776-e9ef-434a-820b-ccfb49ad8cac\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"dovrj\\\\\\">and run:</p>\\", \\"id\\": \\"340f3162-b74b-40d7-a5d8-1cee66d11fc0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git init --bare\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a18c1778-23e4-4463-85ce-0c20bb03d389\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3pm7g\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p>\\", \\"id\\": \\"46c9fa02-1c81-4936-bf16-4dd3de9dc6ef\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"34hjl\\\\\\">Create a post-receive hook</h2><p data-block-key=\\\\\\"1dnm6\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"8g7c8\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"f72so\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"75knf\\\\\\">then I opened the file in nano:</p><p data-block-key=\\\\\\"c1h33\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"1cqg8\\\\\\">and added the following content:</p><p data-block-key=\\\\\\"a2gqp\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/nickmoreton.co.uk<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"9kia1\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p><p data-block-key=\\\\\\"ak734\\\\\\">chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</p><p data-block-key=\\\\\\"81lse\\\\\\">To make the post-receive hook executable.</p><h3 data-block-key=\\\\\\"199lq\\\\\\">Add the new remote to your local repository</h3><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run::</p><p data-block-key=\\\\\\"dqi10\\\\\\">git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git</p><h2 data-block-key=\\\\\\"3akhk\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p><p data-block-key=\\\\\\"a2llm\\\\\\">git push production main</p><p data-block-key=\\\\\\"cj15r\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.<br/>I can see the push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"27qa6\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a0rog\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/b-python-dependencies.md\\\\\\">Python dependencies</a></p>\\", \\"id\\": \\"b3438edb-7ac6-44ed-a39f-30d7d47b592a\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 15, "show_in_menus": false, "latest_revision": 15, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:41:01.835Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:41:01.651Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
17	f	2023-08-28 15:50:50.412+00	{"pk": 8, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hpdos\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"ej8ua\\\\\\">Open the web tab and click the Add a new web app button.</p><p data-block-key=\\\\\\"d3l4i\\\\\\">Choose:</p><ul><li data-block-key=\\\\\\"fjhas\\\\\\">Own domain (I&#x27;m using a domain I own www.nickmoreton.co.uk)</li><li data-block-key=\\\\\\"3jkh2\\\\\\">Manual setup</li><li data-block-key=\\\\\\"56ss2\\\\\\">Python (latest you can choose)</li></ul><p data-block-key=\\\\\\"b8cgl\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"88f602f7-791c-4b2f-8d6a-824fc676938b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ibsy0\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"f0gfu\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"e8gnk\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p>\\", \\"id\\": \\"f15a92ef-399f-4e57-b7ef-36d403534213\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"aim0l\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from nickmoreton.co.uk to www.nickmoreton.co.uk</p><p data-block-key=\\\\\\"623pq\\\\\\">It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"e578d30e-569b-4f61-ac99-bc30728bdb0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eu9el\\\\\\"><b>Add directories for your webapp</b></p><p data-block-key=\\\\\\"6ja2l\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"8m5t3\\\\\\"><b>Source code</b></p><p data-block-key=\\\\\\"c3oq\\\\\\">Open the Files tab navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"6m64\\\\\\">Create a directory to hold your source code. I named mine nickmoreton.co.uk, this is going to be my live/production website.</p><p data-block-key=\\\\\\"er3ru\\\\\\"><b>Bare repos storage</b></p><p data-block-key=\\\\\\"auqrg\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"92qj7\\\\\\">Create a directory to hold your bare-repos. I named mine bare-repos Then I added another directory inside bare-repos called nickmoreton.co.uk.git</p><p data-block-key=\\\\\\"45g16\\\\\\"><b>Environment variables storage</b></p><p data-block-key=\\\\\\"bnd4r\\\\\\">Open the Files tab navigate to your home folder.</p><p data-block-key=\\\\\\"37hk4\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside .env-settings called nickmoreton.co.uk</p><p data-block-key=\\\\\\"1n2pj\\\\\\"><b>Virtual Environments</b></p><p data-block-key=\\\\\\"c1m56\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p>\\", \\"id\\": \\"94a5c9c1-b90d-4212-90fa-ba5c44d8d987\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dadf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"1889r\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"52mtq\\\\\\">Use mkvirtualenv to create a new virtual environment. I named mine nickmoreton.co.uk_venv and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"8aed0c0a-0bad-44d4-8ad2-f19cf0080ca0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv nickmoreton.co.uk_venv --python=/usr/bin/python3.10\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ee4f1fb8-f735-4e84-8fbd-1257f323fa68\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1l969\\\\\\">To confirm the virtual environment has been created run:</p>\\", \\"id\\": \\"2f00648a-899f-4a00-8219-da3417e4424a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"ls ~/.virtualenvs/nickmoreton.co.uk_venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c0af363-afa9-4e6a-b6b1-b43d8e8c6664\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"fkio\\\\\\">Load environment variables when activating the virtual env</h2><p data-block-key=\\\\\\"90qpf\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"ebhdi\\\\\\">workon nickmoreton.co.uk_venv</p><p data-block-key=\\\\\\"5l882\\\\\\">Create a .env file in the environment variables directory created earlier:</p>\\", \\"id\\": \\"5cb1712b-c573-433b-999a-d61c76fa2975\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch ~/.env-settings/nickmoreton.co.uk/.env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4eb4f9d5-79c4-4f46-8f4f-6f7f64f5b7ed\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9hmnn\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"42ba5\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>\\", \\"id\\": \\"3874a6b0-c2f7-4689-8d82-6f7d0a976bae\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"set -a; source ~/.env-settings/nickmoreton.co.uk/.env; set +a\\\\\\" >> ~/.virtualenvs/nickmoreton.co.uk_venv/bin/postactivate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0475fc58-71d8-45b6-b834-91b2a3bb7b7d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bu4pk\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p>\\", \\"id\\": \\"630f9bf9-40f8-4204-a6ad-9123ad1414ef\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7fs22\\\\\\">Set up a git bare repo</h2>\\", \\"id\\": \\"d4ef1dbc-48d8-4d33-8471-c1eef4597b51\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"9xexe\\\\\\">A bare repo is the remote production I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p>\\", \\"id\\": \\"f3b58428-d467-4ddc-b1c5-8afdf5f3c44f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dj0r\\\\\\">Open the Consoles tab open a new console.</p><p data-block-key=\\\\\\"f0jqd\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p>\\", \\"id\\": \\"076b0400-646e-46d1-9684-a4ae2e5a6e97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cd ~/bare-repos/nickmoreton.co.uk.git/\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"64d72776-e9ef-434a-820b-ccfb49ad8cac\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"dovrj\\\\\\">and run:</p>\\", \\"id\\": \\"340f3162-b74b-40d7-a5d8-1cee66d11fc0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git init --bare\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a18c1778-23e4-4463-85ce-0c20bb03d389\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3pm7g\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p>\\", \\"id\\": \\"46c9fa02-1c81-4936-bf16-4dd3de9dc6ef\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"34hjl\\\\\\">Create a post-receive hook</h2>\\", \\"id\\": \\"b3438edb-7ac6-44ed-a39f-30d7d47b592a\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"pnl4s\\\\\\">While still in the bare-repos directory for your site.</p>\\", \\"id\\": \\"8f67a122-6ee7-4d5c-a803-9fa29e85d04f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5kn03\\\\\\">Create a post-receive hook file:</p>\\", \\"id\\": \\"4a4b9847-9337-4bbc-896a-4ccc0aac013e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b6cf03fc-a5d1-47f8-abd4-d9e4bccdabfc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"deufh\\\\\\">then I opened the file in nano:</p>\\", \\"id\\": \\"f8193e57-99f0-4268-836d-b1ebb32c775b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nano hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5a6acea1-817b-4054-9a21-2ae3e981cc19\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4s55i\\\\\\">and added the following content:</p>\\", \\"id\\": \\"bc468aaa-2cb1-4e17-8969-0bc06ad33e3b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"#!/bin/bash\\\\r\\\\n\\\\r\\\\nwhile read oldrev newrev ref\\\\r\\\\ndo\\\\r\\\\nif [[ $ref =~ .*/main ]];\\\\r\\\\nthen\\\\r\\\\n # only the main branch can be deployed\\\\r\\\\n\\\\r\\\\n # ensure the site directory exists\\\\r\\\\n mkdir -p /var/www/sites/nickmoreton.co.uk\\\\r\\\\n\\\\r\\\\n # checkout the latest version of the site\\\\r\\\\n git --work-tree=/var/www/sites/nickmoreton.co.uk --git-dir=/home/wtgi/bare-repos/nickmoreton.co.uk.git checkout -f main\\\\r\\\\n\\\\r\\\\n # there will be more content added here later ...\\\\r\\\\n else\\\\r\\\\n echo \\\\\\"Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.\\\\\\"\\\\r\\\\nfi\\\\r\\\\ndone\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a57389de-d37a-4811-9d83-a163686cbe3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4pa9o\\\\\\">Make the post-receive hook executable</h2><p data-block-key=\\\\\\"ba7ob\\\\\\">In the console run:</p>\\", \\"id\\": \\"8c69d303-2e62-45d8-98e6-0063e35bd6e1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"chmod +x ~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"6f3d8c39-d79f-47db-abb5-b6134edf81ae\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"eagf5\\\\\\">Add the new remote to your local repository</h2><p data-block-key=\\\\\\"8kil4\\\\\\">Substitute my-account-name with your own account name<br/>My account is in the EU so I need to use ssh.eu.pythonanywhere.com</p><p data-block-key=\\\\\\"co5lr\\\\\\">On your local machine in the root of the project run:</p>\\", \\"id\\": \\"07a01a7f-d06e-4fd5-8d59-884ace3cd8f8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git remote add production my-account-name@ssh.eu.pythonanywhere.com:/home/my-account-name/bare-repos/nickmoreton.co.uk.git\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"65e4c42a-46e2-4cb4-a7eb-03c993bf9fc7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ojqh\\\\\\">Pushing to the remote repo</h2><p data-block-key=\\\\\\"6g8a6\\\\\\">I&#x27;m going to push my main branch to the production remote repo.</p>\\", \\"id\\": \\"805736ed-351f-4e0d-b580-636e23bdd860\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git push production main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"90941efa-ff37-4809-804c-ec817756f672\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"a0ol8\\\\\\">If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.</p>\\", \\"id\\": \\"bbc9c23f-99c0-4278-8543-4284d612f11c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"pnl4s\\\\\\">The push has worked because in /var/www/sites/nickmoreton.co.uk I can see the new files.</p><p data-block-key=\\\\\\"3m8lf\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to /var/www/sites/nickmoreton.co.uk</p>\\", \\"id\\": \\"4bcc1695-c6b0-41bc-95bf-5a22a0b3d1f6\\"}]", "live": true, "path": "00010001000100010002", "slug": "set-up-a-webapp-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp on PythonAnywhere", "content_type": 28, "live_revision": 16, "show_in_menus": false, "latest_revision": 16, "translation_key": "539d06a5-bdc6-40f6-bdbd-c5a13d156320", "last_published_at": "2023-08-28T15:45:17.733Z", "first_published_at": "2023-08-28T15:33:57.922Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:45:17.556Z"}	\N	8	1	28	1	Set up a webapp on PythonAnywhere
53	f	2023-08-30 15:33:50.302+00	{"pk": 23, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"md6qj\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"cbnqq\\\\\\">Open the <b>Web</b> tab and click the <b>Add a new web app button</b>.</p><ol><li data-block-key=\\\\\\"d44br\\\\\\"><b>Choose:</b> <i>Own domain</i> (or use the default given by PA) I used my own domain name here, I suggest you also specify www in the name or the subdomain you are using.</li><li data-block-key=\\\\\\"8u89j\\\\\\"><b>Choose:</b> <i>Manual setup</i></li><li data-block-key=\\\\\\"8aqoh\\\\\\"><b>Choose:</b> <i>Python</i> (latest you can choose)</li></ol><p data-block-key=\\\\\\"cu767\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"e953c3c7-e53c-4555-a053-e2a7ec28af85\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ebq4x\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from domain.com to www.domain.com It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"d60a4eb1-7973-4f2e-803f-3da9bde74a03\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"112ut\\\\\\">Configure your domain name</h3><p data-block-key=\\\\\\"8e4jf\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"er86l\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h3 data-block-key=\\\\\\"fqrgr\\\\\\">Setup directories</h3>\\", \\"id\\": \\"5e38f96d-2a52-48c8-93fb-335483612c86\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3zzjy\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p>\\", \\"id\\": \\"0583b337-091b-4fc1-8b19-c077b9702a30\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"a5obg\\\\\\"><b>Open the Files tab...</b></p><p data-block-key=\\\\\\"arkrv\\\\\\"><b><i>Source code directory</i></b></p><p data-block-key=\\\\\\"1km2n\\\\\\">Navigate to <b>/var/www/sites</b> which should already exist.</p><p data-block-key=\\\\\\"efbb0\\\\\\">Create a directory to hold your source code. Something like <b>www.domain.com</b>, this is going to be my live/production website.</p><p data-block-key=\\\\\\"7gbn\\\\\\"><b><i>Bare repos directory</i></b></p><p data-block-key=\\\\\\"4f6e6\\\\\\">Set up a directory structure to hold your bare repos.</p><p data-block-key=\\\\\\"788ae\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"62hvo\\\\\\">Create a directory inside to hold your bare-repos. I named mine <i>bare-repos</i> Then I add another directory inside bare-repos something like <b>www.domain.com.git</b></p><p data-block-key=\\\\\\"39b0s\\\\\\">So the path to the bare repo directory is:</p>\\", \\"id\\": \\"bdf2bddd-24dc-4579-9c72-5b31dd223132\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/bare-repos/www.domain.com.git\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a89c632-62c3-4eba-b7db-48c1d1ef5fb9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"egije\\\\\\"><b><i>Environment variables storage</i></b></p><p data-block-key=\\\\\\"5tq2r\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"9t1dk\\\\\\">Create a directory to hold your environment variables. I called mine <b>.env-settings</b> then I added another directory inside it called <b>www.domain.com</b></p><p data-block-key=\\\\\\"7f6j1\\\\\\">So the path to the environment variables directory is:</p>\\", \\"id\\": \\"29646b8f-e751-4860-ba6d-625d12621d0e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/.env-settings/www.domain.com\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"8f2c63d4-aa64-4e0c-b27e-6ae575bb5878\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"dsfgf\\\\\\"><b><i>Create a virtual environment</i></b></p><p data-block-key=\\\\\\"8eive\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"8l0p\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"a9p8d\\\\\\">Use mkvirtualenv to create a new virtual environment for this site. I named mine <b>www.domain.com.venv</b> and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"07a73cc1-3807-4c21-8b23-567ca013bcd1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv www.domain.com.venv --python=/usr/bin/python3.10\\\\r\\\\n\\\\r\\\\n# to confirm the virtual environment has been created run:\\\\r\\\\nls ~/.virtualenvs/www.domain.com.venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"01b718f0-cc8e-4e1f-a66a-8276f8c4c4c1\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"23idg\\\\\\"><b><i>Load environment variables when activating the virtual env</i></b></p><p data-block-key=\\\\\\"c5u9v\\\\\\">You can manually activate the virtual environment by running:</p>\\", \\"id\\": \\"6aa0ac4c-540f-429b-a328-1c7d1ab4f407\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"workon www.domain.com.venv\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"514f7b25-b591-4727-a5f5-c7dcfa747b67\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8lu5\\\\\\">Create a .env file in the environment variables directory created earlier:</p>\\", \\"id\\": \\"f5f7099d-9d03-4109-898d-0d4bab083a20\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch ~/.env-settings/www.domain.com/.env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"83faf76c-c28b-4a08-8fa6-b74bb5f7793a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"aap4r\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"1jkt7\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>\\", \\"id\\": \\"2baf760e-2e53-4623-9f6c-a29e030179e1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"set -a; source ~/.env-settings/www.domain.com/.env; set +a\\\\\\" >> ~/.virtualenvs/www.domain.com.venv/bin/postactivate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bc316137-fca3-44b3-94f3-dd00fd48081d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9jqt4\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4sfek\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"4vcak\\\\\\">A bare repo is the remote I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"5otnh\\\\\\">Open the Consoles tab open a new console ro use the console from the previous step.</p><p data-block-key=\\\\\\"7ueo6\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"1gd9h\\\\\\">cd ~/bare-repos/www.domain.com.git/</p><p data-block-key=\\\\\\"dgi43\\\\\\">and run:</p><p data-block-key=\\\\\\"11lkt\\\\\\">git init --bare</p><p data-block-key=\\\\\\"cargk\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"3lros\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"8v5ek\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"49qve\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"1gfu5\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"1313a\\\\\\">then I opened the file in nano (you could open if from the Files tab):</p><p data-block-key=\\\\\\"fdb4e\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"8cf22\\\\\\">and added the following content (substitute account-name with your own account name and www.domain.com with your own domain name):</p><p data-block-key=\\\\\\"ehsid\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/www.domain.com<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/www.domain.com --git-dir=/home/account-name/bare-repos/www.domain.com.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"f6kpd\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"e5j24\\\\\\">In the console run:</p><p data-block-key=\\\\\\"cd7nr\\\\\\">chmod +x ~/bare-repos/www.domain.com.git/hooks/post-receive</p><h2 data-block-key=\\\\\\"2i0i5\\\\\\">Create a Mysql database on PythonAnywhere</h2><p data-block-key=\\\\\\"ehvrd\\\\\\">On the Databases tab create a new database. I called mine www_domain_com_db. PythonAnywhere prepends your account name to the database name followed by a $. So my database name is account-name$www_domain_com_db</p><p data-block-key=\\\\\\"1edii\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"a2tju\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"mlkj\\\\\\">Earlier on I created a .env file at ~/.env-settings/www.domain.com/.env</p><p data-block-key=\\\\\\"ft2rs\\\\\\">Open the file, you can do this from the Files tab and add the following content, substituting the values for your own:</p><p data-block-key=\\\\\\"14li0\\\\\\">MYSQL_DATABASE=&#x27;account-name$www_domain_com_db&#x27;<br/>MYSQL_USER=&#x27;account-name&#x27; # Username<br/>MYSQL_PASSWORD=&#x27;the-password-just-created&#x27;<br/>MYSQL_HOST=&#x27;get-this-from-the-databases-tab&#x27; # Database host address<br/>MYSQL_PORT=&#x27;3306&#x27;</p><p data-block-key=\\\\\\"eelf0\\\\\\">While I am editing this file, although not Database related the following can be added.</p><p data-block-key=\\\\\\"5g49h\\\\\\">WAGTAIL_SITE_NAME=&#x27;add-your-sites-name&#x27;<br/>BASE_URL=&#x27;http://www.domain.com&#x27;<br/>DJANGO_SECRET_KEY=&#x27;add-a-good-secret-key&#x27;<br/>DJANGO_ALLOWED_HOSTS=&#x27;www.domain.com&#x27;</p><p data-block-key=\\\\\\"ei9ul\\\\\\">Save the file.</p><p data-block-key=\\\\\\"97kse\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"f5fcb4e0-bba3-4b64-b3be-0cffcf04758e\\"}]", "live": false, "path": "0001000100010001000H", "slug": "set-up-a-webapp-and-bare-repo-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp and bare-repo on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-and-bare-repo-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp and bare-repo on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 52, "translation_key": "479451c6-31ad-4b5c-b23a-c46ca26c56ef", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:26:13.613Z"}	\N	23	1	28	1	Set up a webapp and bare-repo on PythonAnywhere
54	f	2023-08-30 15:34:55.926+00	{"pk": 23, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"md6qj\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"cbnqq\\\\\\">Open the <b>Web</b> tab and click the <b>Add a new web app button</b>.</p><ol><li data-block-key=\\\\\\"d44br\\\\\\"><b>Choose:</b> <i>Own domain</i> (or use the default given by PA) I used my own domain name here, I suggest you also specify www in the name or the subdomain you are using.</li><li data-block-key=\\\\\\"8u89j\\\\\\"><b>Choose:</b> <i>Manual setup</i></li><li data-block-key=\\\\\\"8aqoh\\\\\\"><b>Choose:</b> <i>Python</i> (latest you can choose)</li></ol><p data-block-key=\\\\\\"cu767\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"e953c3c7-e53c-4555-a053-e2a7ec28af85\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ebq4x\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from domain.com to www.domain.com It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"d60a4eb1-7973-4f2e-803f-3da9bde74a03\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"112ut\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"8e4jf\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"er86l\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h2 data-block-key=\\\\\\"fqrgr\\\\\\">Setup directories</h2>\\", \\"id\\": \\"5e38f96d-2a52-48c8-93fb-335483612c86\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3zzjy\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p>\\", \\"id\\": \\"0583b337-091b-4fc1-8b19-c077b9702a30\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"a5obg\\\\\\">Open the Files tab...</h3><p data-block-key=\\\\\\"arkrv\\\\\\"><b><i>Source code directory</i></b></p><p data-block-key=\\\\\\"1km2n\\\\\\">Navigate to <b>/var/www/sites</b> which should already exist.</p><p data-block-key=\\\\\\"efbb0\\\\\\">Create a directory to hold your source code. Something like <b>www.domain.com</b>, this is going to be my live/production website.</p><p data-block-key=\\\\\\"7gbn\\\\\\"><b><i>Bare repos directory</i></b></p><p data-block-key=\\\\\\"4f6e6\\\\\\">Set up a directory structure to hold your bare repos.</p><p data-block-key=\\\\\\"788ae\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"62hvo\\\\\\">Create a directory inside to hold your bare-repos. I named mine <i>bare-repos</i> Then I add another directory inside bare-repos something like <b>www.domain.com.git</b></p><p data-block-key=\\\\\\"39b0s\\\\\\">So the path to the bare repo directory is:</p>\\", \\"id\\": \\"bdf2bddd-24dc-4579-9c72-5b31dd223132\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/bare-repos/www.domain.com.git\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a89c632-62c3-4eba-b7db-48c1d1ef5fb9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"egije\\\\\\"><b><i>Environment variables storage</i></b></p><p data-block-key=\\\\\\"5tq2r\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"9t1dk\\\\\\">Create a directory to hold your environment variables. I called mine <b>.env-settings</b> then I added another directory inside it called <b>www.domain.com</b></p><p data-block-key=\\\\\\"7f6j1\\\\\\">So the path to the environment variables directory is:</p>\\", \\"id\\": \\"29646b8f-e751-4860-ba6d-625d12621d0e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/.env-settings/www.domain.com\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"8f2c63d4-aa64-4e0c-b27e-6ae575bb5878\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"dsfgf\\\\\\"><b><i>Create a virtual environment</i></b></p><p data-block-key=\\\\\\"8eive\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"8l0p\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"a9p8d\\\\\\">Use mkvirtualenv to create a new virtual environment for this site. I named mine <b>www.domain.com.venv</b> and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"07a73cc1-3807-4c21-8b23-567ca013bcd1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv www.domain.com.venv --python=/usr/bin/python3.10\\\\r\\\\n\\\\r\\\\n# to confirm the virtual environment has been created run:\\\\r\\\\nls ~/.virtualenvs/www.domain.com.venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"01b718f0-cc8e-4e1f-a66a-8276f8c4c4c1\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"23idg\\\\\\"><b><i>Load environment variables when activating the virtual env</i></b></p><p data-block-key=\\\\\\"c5u9v\\\\\\">You can manually activate the virtual environment by running:</p>\\", \\"id\\": \\"6aa0ac4c-540f-429b-a328-1c7d1ab4f407\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"workon www.domain.com.venv\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"514f7b25-b591-4727-a5f5-c7dcfa747b67\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8lu5\\\\\\">Create a .env file in the environment variables directory created earlier:</p>\\", \\"id\\": \\"f5f7099d-9d03-4109-898d-0d4bab083a20\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch ~/.env-settings/www.domain.com/.env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"83faf76c-c28b-4a08-8fa6-b74bb5f7793a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"aap4r\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"1jkt7\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>\\", \\"id\\": \\"2baf760e-2e53-4623-9f6c-a29e030179e1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"set -a; source ~/.env-settings/www.domain.com/.env; set +a\\\\\\" >> ~/.virtualenvs/www.domain.com.venv/bin/postactivate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bc316137-fca3-44b3-94f3-dd00fd48081d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9jqt4\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4sfek\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"4vcak\\\\\\">A bare repo is the remote I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"5otnh\\\\\\">Open the Consoles tab open a new console ro use the console from the previous step.</p><p data-block-key=\\\\\\"7ueo6\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"1gd9h\\\\\\">cd ~/bare-repos/www.domain.com.git/</p><p data-block-key=\\\\\\"dgi43\\\\\\">and run:</p><p data-block-key=\\\\\\"11lkt\\\\\\">git init --bare</p><p data-block-key=\\\\\\"cargk\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"3lros\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"8v5ek\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"49qve\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"1gfu5\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"1313a\\\\\\">then I opened the file in nano (you could open if from the Files tab):</p><p data-block-key=\\\\\\"fdb4e\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"8cf22\\\\\\">and added the following content (substitute account-name with your own account name and www.domain.com with your own domain name):</p><p data-block-key=\\\\\\"ehsid\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/> # only the main branch can be deployed<br/><br/> # ensure the site directory exists<br/> mkdir -p /var/www/sites/www.domain.com<br/><br/> # checkout the latest version of the site<br/> git --work-tree=/var/www/sites/www.domain.com --git-dir=/home/account-name/bare-repos/www.domain.com.git checkout -f main<br/><br/> # there will be more content added here later ...<br/> else<br/> echo &quot;Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"f6kpd\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"e5j24\\\\\\">In the console run:</p><p data-block-key=\\\\\\"cd7nr\\\\\\">chmod +x ~/bare-repos/www.domain.com.git/hooks/post-receive</p><h2 data-block-key=\\\\\\"2i0i5\\\\\\">Create a Mysql database on PythonAnywhere</h2><p data-block-key=\\\\\\"ehvrd\\\\\\">On the Databases tab create a new database. I called mine www_domain_com_db. PythonAnywhere prepends your account name to the database name followed by a $. So my database name is account-name$www_domain_com_db</p><p data-block-key=\\\\\\"1edii\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"a2tju\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"mlkj\\\\\\">Earlier on I created a .env file at ~/.env-settings/www.domain.com/.env</p><p data-block-key=\\\\\\"ft2rs\\\\\\">Open the file, you can do this from the Files tab and add the following content, substituting the values for your own:</p><p data-block-key=\\\\\\"14li0\\\\\\">MYSQL_DATABASE=&#x27;account-name$www_domain_com_db&#x27;<br/>MYSQL_USER=&#x27;account-name&#x27; # Username<br/>MYSQL_PASSWORD=&#x27;the-password-just-created&#x27;<br/>MYSQL_HOST=&#x27;get-this-from-the-databases-tab&#x27; # Database host address<br/>MYSQL_PORT=&#x27;3306&#x27;</p><p data-block-key=\\\\\\"eelf0\\\\\\">While I am editing this file, although not Database related the following can be added.</p><p data-block-key=\\\\\\"5g49h\\\\\\">WAGTAIL_SITE_NAME=&#x27;add-your-sites-name&#x27;<br/>BASE_URL=&#x27;http://www.domain.com&#x27;<br/>DJANGO_SECRET_KEY=&#x27;add-a-good-secret-key&#x27;<br/>DJANGO_ALLOWED_HOSTS=&#x27;www.domain.com&#x27;</p><p data-block-key=\\\\\\"ei9ul\\\\\\">Save the file.</p><p data-block-key=\\\\\\"97kse\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"f5fcb4e0-bba3-4b64-b3be-0cffcf04758e\\"}]", "live": false, "path": "0001000100010001000H", "slug": "set-up-a-webapp-and-bare-repo-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp and bare-repo on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-and-bare-repo-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp and bare-repo on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 53, "translation_key": "479451c6-31ad-4b5c-b23a-c46ca26c56ef", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:33:50.302Z"}	\N	23	1	28	1	Set up a webapp and bare-repo on PythonAnywhere
55	f	2023-08-30 15:42:31.878+00	{"pk": 23, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"md6qj\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"cbnqq\\\\\\">Open the <b>Web</b> tab and click the <b>Add a new web app button</b>.</p><ol><li data-block-key=\\\\\\"d44br\\\\\\"><b>Choose:</b> <i>Own domain</i> (or use the default given by PA) I used my own domain name here, I suggest you also specify www in the name or the subdomain you are using.</li><li data-block-key=\\\\\\"8u89j\\\\\\"><b>Choose:</b> <i>Manual setup</i></li><li data-block-key=\\\\\\"8aqoh\\\\\\"><b>Choose:</b> <i>Python</i> (latest you can choose)</li></ol><p data-block-key=\\\\\\"cu767\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"e953c3c7-e53c-4555-a053-e2a7ec28af85\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ebq4x\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from domain.com to www.domain.com It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"d60a4eb1-7973-4f2e-803f-3da9bde74a03\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"112ut\\\\\\">Configure your domain name</h2><p data-block-key=\\\\\\"8e4jf\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"er86l\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h2 data-block-key=\\\\\\"fqrgr\\\\\\">Setup directories</h2>\\", \\"id\\": \\"5e38f96d-2a52-48c8-93fb-335483612c86\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3zzjy\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p>\\", \\"id\\": \\"0583b337-091b-4fc1-8b19-c077b9702a30\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"a5obg\\\\\\">Open the Files tab...</h3><p data-block-key=\\\\\\"arkrv\\\\\\"><b><i>Source code directory</i></b></p><p data-block-key=\\\\\\"1km2n\\\\\\">Navigate to <b>/var/www/sites</b> which should already exist.</p><p data-block-key=\\\\\\"efbb0\\\\\\">Create a directory to hold your source code. Something like <b>www.domain.com</b>, this is going to be my live/production website.</p><p data-block-key=\\\\\\"7gbn\\\\\\"><b><i>Bare repos directory</i></b></p><p data-block-key=\\\\\\"4f6e6\\\\\\">Set up a directory structure to hold your bare repos.</p><p data-block-key=\\\\\\"788ae\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"62hvo\\\\\\">Create a directory inside to hold your bare-repos. I named mine <i>bare-repos</i> Then I add another directory inside bare-repos something like <b>www.domain.com.git</b></p><p data-block-key=\\\\\\"39b0s\\\\\\">So the path to the bare repo directory is:</p>\\", \\"id\\": \\"bdf2bddd-24dc-4579-9c72-5b31dd223132\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/bare-repos/www.domain.com.git\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a89c632-62c3-4eba-b7db-48c1d1ef5fb9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"egije\\\\\\"><b><i>Environment variables storage</i></b></p><p data-block-key=\\\\\\"5tq2r\\\\\\">Navigate to your home folder e.g. <b>/home/account-name</b></p><p data-block-key=\\\\\\"9t1dk\\\\\\">Create a directory to hold your environment variables. I called mine <b>.env-settings</b> then I added another directory inside it called <b>www.domain.com</b></p><p data-block-key=\\\\\\"7f6j1\\\\\\">So the path to the environment variables directory is:</p>\\", \\"id\\": \\"29646b8f-e751-4860-ba6d-625d12621d0e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"/home/account-name/.env-settings/www.domain.com\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"8f2c63d4-aa64-4e0c-b27e-6ae575bb5878\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"dsfgf\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"8eive\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"8l0p\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"a9p8d\\\\\\">Use mkvirtualenv to create a new virtual environment for this site. I named mine <b>www.domain.com.venv</b> and I&#x27;m using Python 3.10</p>\\", \\"id\\": \\"07a73cc1-3807-4c21-8b23-567ca013bcd1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkvirtualenv www.domain.com.venv --python=/usr/bin/python3.10\\\\r\\\\n\\\\r\\\\n# to confirm the virtual environment has been created run:\\\\r\\\\nls ~/.virtualenvs/www.domain.com.venv/\\\\r\\\\n> bin lib pyvenv.cfg\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"01b718f0-cc8e-4e1f-a66a-8276f8c4c4c1\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"23idg\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"c5u9v\\\\\\">You can manually activate the virtual environment by running:</p>\\", \\"id\\": \\"6aa0ac4c-540f-429b-a328-1c7d1ab4f407\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"workon www.domain.com.venv\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"514f7b25-b591-4727-a5f5-c7dcfa747b67\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8lu5\\\\\\">Create a .env file in the environment variables directory created earlier:</p>\\", \\"id\\": \\"f5f7099d-9d03-4109-898d-0d4bab083a20\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch ~/.env-settings/www.domain.com/.env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"83faf76c-c28b-4a08-8fa6-b74bb5f7793a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"aap4r\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"1jkt7\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p>\\", \\"id\\": \\"2baf760e-2e53-4623-9f6c-a29e030179e1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"set -a; source ~/.env-settings/www.domain.com/.env; set +a\\\\\\" >> ~/.virtualenvs/www.domain.com.venv/bin/postactivate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bc316137-fca3-44b3-94f3-dd00fd48081d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9jqt4\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4sfek\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"4vcak\\\\\\">A bare repo is the remote I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"5otnh\\\\\\">Open the Consoles tab open a new console or use the console from the previous step.</p><p data-block-key=\\\\\\"7ueo6\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p>\\", \\"id\\": \\"f5fcb4e0-bba3-4b64-b3be-0cffcf04758e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cd ~/bare-repos/www.domain.com.git/\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"54c1c0cc-ef69-431b-a447-18b2f612b360\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5vnkt\\\\\\">and run:</p>\\", \\"id\\": \\"bd885f3b-a68c-4f16-b2ae-51479f22cc66\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git init --bare\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c8c309f1-b52d-492f-9b7b-6a708b3fa789\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7192o\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"3lros\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"8v5ek\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"49qve\\\\\\">Create a post-receive hook file:</p>\\", \\"id\\": \\"992826e1-f0fb-421f-8efa-133852fa5b23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4f7a9d81-395f-4ac7-b68d-5bc364a984ab\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"j1v3\\\\\\">then I opened the file in nano (you could open if from the Files tab):</p>\\", \\"id\\": \\"71fd5532-5808-4f0d-853b-9e1d938e1950\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nano hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"7ea127a8-7fa6-476e-8008-b81b0f6ea64c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7ij46\\\\\\">and added the following content (substitute account-name with your own account name and www.domain.com with your own domain name):</p>\\", \\"id\\": \\"c906fe46-606e-4e8b-b924-e0e10fd9d61e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"#!/bin/bash\\\\r\\\\n\\\\r\\\\nwhile read oldrev newrev ref\\\\r\\\\ndo\\\\r\\\\nif [[ $ref =~ .*/main ]];\\\\r\\\\nthen\\\\r\\\\n # only the main branch can be deployed\\\\r\\\\n\\\\r\\\\n # ensure the site directory exists\\\\r\\\\n mkdir -p /var/www/sites/www.domain.com\\\\r\\\\n\\\\r\\\\n # checkout the latest version of the site\\\\r\\\\n git --work-tree=/var/www/sites/www.domain.com --git-dir=/home/account-name/bare-repos/www.domain.com.git checkout -f main\\\\r\\\\n\\\\r\\\\n # there will be more content added here later ...\\\\r\\\\n else\\\\r\\\\n echo \\\\\\"Ref $ref successfully received. Doing nothing: only the main branch may be deployed on this server.\\\\\\"\\\\r\\\\nfi\\\\r\\\\ndone\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"aba4c099-1c51-44bb-8456-f773f9347910\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"45mjf\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"e5j24\\\\\\">In the console run:</p>\\", \\"id\\": \\"2aa089b4-8dd5-46a1-9d1f-fb0d511e901a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"chmod +x ~/bare-repos/www.domain.com.git/hooks/post-receive\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"8d9dd147-7c55-495d-bac9-88b5162be26b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"74hca\\\\\\">Create a Mysql database on PythonAnywhere</h2><p data-block-key=\\\\\\"ehvrd\\\\\\">On the Databases tab create a new database. I called mine <b>www_domain_com_db</b>. PythonAnywhere prepends your account name to the database name followed by a $. So my database name is <i>account-name$www_domain_com_db</i></p><p data-block-key=\\\\\\"1edii\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"a2tju\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"mlkj\\\\\\">Earlier on I created a .env file at <b>~/.env-settings/www.domain.com/.env</b></p><p data-block-key=\\\\\\"ft2rs\\\\\\">Open the file, you can do this from the Files tab and add the following content, substituting the values for your own:</p>\\", \\"id\\": \\"f8002a64-720e-4301-a5cc-1d40606aac10\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_DATABASE='account-name$www_domain_com_db'\\\\r\\\\nMYSQL_USER='account-name' # Username\\\\r\\\\nMYSQL_PASSWORD='the-password-just-created'\\\\r\\\\nMYSQL_HOST='get-this-from-the-databases-tab' # Database host address\\\\r\\\\nMYSQL_PORT='3306'\\\\r\\\\n\\\\r\\\\n# While I am editing this file, although not Database related the following can be added.\\\\r\\\\nWAGTAIL_SITE_NAME='add-your-sites-name'\\\\r\\\\nBASE_URL='http://www.domain.com'\\\\r\\\\nDJANGO_SECRET_KEY='add-a-good-secret-key'\\\\r\\\\nDJANGO_ALLOWED_HOSTS='www.domain.com'\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"aa714da2-c91b-4441-af99-7613ff75c649\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"11mfs\\\\\\">Save the file.</p>\\", \\"id\\": \\"649b0309-d1e7-4054-95b2-8e663306d26f\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"7pxoc\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"f86810f0-31c9-4447-969e-c0a9eef0d007\\"}]", "live": false, "path": "0001000100010001000H", "slug": "set-up-a-webapp-and-bare-repo-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp and bare-repo on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-and-bare-repo-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp and bare-repo on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 54, "translation_key": "479451c6-31ad-4b5c-b23a-c46ca26c56ef", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:34:55.926Z"}	\N	23	1	28	1	Set up a webapp and bare-repo on PythonAnywhere
56	f	2023-08-30 15:54:41.72+00	{"pk": 24, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b94g3\\\\\\">Deploy hooks (post-receive)</h2><p data-block-key=\\\\\\"2pa8r\\\\\\">Earlier I created a post-receive hook: <b>~/bare-repos/www.domain.com.git/hooks/post-receive</b> open the file (use the files tab to locate it and open it in the editor) and add the following extra steps.</p>\\", \\"id\\": \\"e1793f67-bc91-486d-9b55-b21fb6beae8a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"83i16\\\\\\">Replace: <i># there will be more content added here later ...</i> with the following, make adjustments for your own paths and/or file names:</p>\\", \\"id\\": \\"a863ceb2-0bff-4b90-a62d-2d1865b14a54\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# there will be more content added here later ...\\\\r\\\\n\\\\r\\\\n# Replace the above with ...\\\\r\\\\n\\\\r\\\\n# switch to site directory\\\\r\\\\ncd /var/www/sites/www.domain.com\\\\r\\\\nsource /usr/local/bin/virtualenvwrapper.sh\\\\r\\\\n# and activate the virtual environment\\\\r\\\\nworkon www.domain.com.venv\\\\r\\\\n\\\\r\\\\n# install/update requirements\\\\r\\\\necho \\\\\\"INSTALL REQUIREMENTS\\\\\\"\\\\r\\\\npip install -r requirements.txt\\\\r\\\\n\\\\r\\\\n# run migrations\\\\r\\\\necho \\\\\\"RUN MIGRATIONS\\\\\\"\\\\r\\\\npython manage.py migrate --no-input\\\\r\\\\n\\\\r\\\\n# add/update static files\\\\r\\\\necho \\\\\\"COLLECT STATIC FILES\\\\\\"\\\\r\\\\npython manage.py collectstatic --no-input\\\\r\\\\n\\\\r\\\\n# reload the web app by touching the wsgi file\\\\r\\\\necho \\\\\\"RELOAD THE WEB APP\\\\\\"\\\\r\\\\ntouch /var/www/www_domain_com_wsgi.py\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c558a2ff-1479-4202-a0dc-6d43fec92a54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"504s\\\\\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\\\\\"b4kme\\\\\\">The last command <i>touch</i> will restart the webapp so that any changes are loaded.</p><p data-block-key=\\\\\\"dgabj\\\\\\">Save the file.</p><h2 data-block-key=\\\\\\"8lg96\\\\\\">Update the WSG file on PythonAnywhere</h2><p data-block-key=\\\\\\"4q0re\\\\\\">From the Web tab open the WSGI configuration file for your site.</p><p data-block-key=\\\\\\"oq55\\\\\\"></p>\\", \\"id\\": \\"6d199342-14dc-4e0d-b1c8-dab4587a17c3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"20fe7\\\\\\">When a new webapp is created a WSGI file is automatically created with some example content. You can delete all the content and add the following modified version of the example # +++++++++++ DJANGO +++++++++++ section.</p>\\", \\"id\\": \\"e2737377-2c28-4827-a457-4e0f333aec8d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1vai4\\\\\\">Add this python code to your sites WSGI file, update the paths and file names as appropriate for your own site.</p>\\", \\"id\\": \\"884f3f4d-1d67-4a3d-bec1-2aeff050968d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import os\\\\r\\\\nimport sys\\\\r\\\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\\\r\\\\n\\\\r\\\\n# use your own site path\\\\r\\\\npath = '/var/www/sites/www.domain.com'\\\\r\\\\nif path not in sys.path:\\\\r\\\\n    sys.path.append(path)\\\\r\\\\n\\\\r\\\\n# use your own path for the env settings\\\\r\\\\nenv_folder = os.path.expanduser('~/.env-settings/www.domain.com')\\\\r\\\\nload_dotenv(os.path.join(env_folder, '.env'))\\\\r\\\\n\\\\r\\\\n# assumes your webapp is called webapp, substitute as appropriate\\\\r\\\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\\\r\\\\n\\\\r\\\\nfrom django.core.wsgi import get_wsgi_application\\\\r\\\\napplication = get_wsgi_application()\\", \\"language\\": \\"python\\"}, \\"id\\": \\"95ba0b0c-2d92-4707-987a-6a06b190a797\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"32aqi\\\\\\">Save the file.</p>\\", \\"id\\": \\"ff527db4-6142-4e3a-bb18-3b93a376df6a\\"}]", "live": false, "path": "0001000100010001000I", "slug": "add-further-deployment-settings", "depth": 5, "owner": 1, "title": "Add further deployment settings", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-deployment-settings/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add further deployment settings", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "942996b8-e776-42fb-bde9-c8b78adeb6c7", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	24	1	28	1	Add further deployment settings
57	f	2023-08-30 15:55:08.581+00	{"pk": 24, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b94g3\\\\\\">Deploy hooks (post-receive)</h2><p data-block-key=\\\\\\"2pa8r\\\\\\">Earlier I created a post-receive hook: <b>~/bare-repos/www.domain.com.git/hooks/post-receive</b> open the file (use the files tab to locate it and open it in the editor) and add the following extra steps.</p>\\", \\"id\\": \\"e1793f67-bc91-486d-9b55-b21fb6beae8a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"83i16\\\\\\">Replace: <i># there will be more content added here later ...</i> with the following, make adjustments for your own paths and/or file names:</p>\\", \\"id\\": \\"a863ceb2-0bff-4b90-a62d-2d1865b14a54\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# there will be more content added here later ...\\\\r\\\\n\\\\r\\\\n# Replace the above with ...\\\\r\\\\n\\\\r\\\\n# switch to site directory\\\\r\\\\ncd /var/www/sites/www.domain.com\\\\r\\\\nsource /usr/local/bin/virtualenvwrapper.sh\\\\r\\\\n# and activate the virtual environment\\\\r\\\\nworkon www.domain.com.venv\\\\r\\\\n\\\\r\\\\n# install/update requirements\\\\r\\\\necho \\\\\\"INSTALL REQUIREMENTS\\\\\\"\\\\r\\\\npip install -r requirements.txt\\\\r\\\\n\\\\r\\\\n# run migrations\\\\r\\\\necho \\\\\\"RUN MIGRATIONS\\\\\\"\\\\r\\\\npython manage.py migrate --no-input\\\\r\\\\n\\\\r\\\\n# add/update static files\\\\r\\\\necho \\\\\\"COLLECT STATIC FILES\\\\\\"\\\\r\\\\npython manage.py collectstatic --no-input\\\\r\\\\n\\\\r\\\\n# reload the web app by touching the wsgi file\\\\r\\\\necho \\\\\\"RELOAD THE WEB APP\\\\\\"\\\\r\\\\ntouch /var/www/www_domain_com_wsgi.py\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c558a2ff-1479-4202-a0dc-6d43fec92a54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"504s\\\\\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\\\\\"b4kme\\\\\\">The last command <i>touch</i> will restart the webapp so that any changes are loaded.</p><p data-block-key=\\\\\\"dgabj\\\\\\">Save the file.</p><h2 data-block-key=\\\\\\"8lg96\\\\\\">Update the WSG file on PythonAnywhere</h2><p data-block-key=\\\\\\"4q0re\\\\\\">From the Web tab open the WSGI configuration file for your site.</p><p data-block-key=\\\\\\"oq55\\\\\\"></p>\\", \\"id\\": \\"6d199342-14dc-4e0d-b1c8-dab4587a17c3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"20fe7\\\\\\">When a new webapp is created a WSGI file is automatically created with some example content. You can delete all the content and add the following modified version of the example # +++++++++++ DJANGO +++++++++++ section.</p>\\", \\"id\\": \\"e2737377-2c28-4827-a457-4e0f333aec8d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1vai4\\\\\\">Add this python code to your sites WSGI file, update the paths and file names as appropriate for your own site.</p>\\", \\"id\\": \\"884f3f4d-1d67-4a3d-bec1-2aeff050968d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import os\\\\r\\\\nimport sys\\\\r\\\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\\\r\\\\n\\\\r\\\\n# use your own site path\\\\r\\\\npath = '/var/www/sites/www.domain.com'\\\\r\\\\nif path not in sys.path:\\\\r\\\\n    sys.path.append(path)\\\\r\\\\n\\\\r\\\\n# use your own path for the env settings\\\\r\\\\nenv_folder = os.path.expanduser('~/.env-settings/www.domain.com')\\\\r\\\\nload_dotenv(os.path.join(env_folder, '.env'))\\\\r\\\\n\\\\r\\\\n# assumes your webapp is called webapp, substitute as appropriate\\\\r\\\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\\\r\\\\n\\\\r\\\\nfrom django.core.wsgi import get_wsgi_application\\\\r\\\\napplication = get_wsgi_application()\\", \\"language\\": \\"python\\"}, \\"id\\": \\"95ba0b0c-2d92-4707-987a-6a06b190a797\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"32aqi\\\\\\">Save the file.</p>\\", \\"id\\": \\"ff527db4-6142-4e3a-bb18-3b93a376df6a\\"}]", "live": false, "path": "0001000100010001000I", "slug": "add-further-deployment-settings", "depth": 5, "owner": 1, "title": "Add further deployment settings", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-deployment-settings/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add further deployment settings", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 56, "translation_key": "942996b8-e776-42fb-bde9-c8b78adeb6c7", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:54:41.720Z"}	\N	24	1	28	1	Add further deployment settings
18	f	2023-08-28 15:53:56.215+00	{"pk": 9, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"p5a9x\\\\\\">Open your project on your local machine.</p>\\", \\"id\\": \\"157e6619-921f-4bd6-830c-f7ecbb054304\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"g08yl\\\\\\">I&#x27;m using Pipenv to manage the python dependencies, Pipenv isn&#x27;t used on PythonAnywhere. Production dependencies will be in requirements.txt</p>\\", \\"id\\": \\"c2759190-b384-42ac-bdc7-5b5d7ff53936\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f82\\\\\\">With <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> installed run:</p>\\", \\"id\\": \\"5ef4bb07-7434-41ef-a298-9f7d9f90285b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"wagtail>=5.1,<5.2\\\\\\" \\\\\\"mysqlclient>=2.2,<2.3\\\\\\" \\\\\\"python-dotenv>=1.0,<1.1\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a7c01979-d186-4184-b24c-d3c084043b85\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8ihln\\\\\\">Then create the requirements file with:</p>\\", \\"id\\": \\"7bcbe1e4-e2d7-4086-8f57-c4f03c7cd95c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"d90fb60e-62c5-444a-892b-babaf08a8e08\\"}]", "live": false, "path": "00010001000100010003", "slug": "python-dependencies", "depth": 5, "owner": 1, "title": "Python dependencies", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/python-dependencies/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Python dependencies", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "7a66b01c-2c27-435c-b167-56678f398c4f", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	9	1	28	1	Python dependencies
19	f	2023-08-28 15:54:04.935+00	{"pk": 9, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"p5a9x\\\\\\">Open your project on your local machine.</p>\\", \\"id\\": \\"157e6619-921f-4bd6-830c-f7ecbb054304\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"g08yl\\\\\\">I&#x27;m using Pipenv to manage the python dependencies, Pipenv isn&#x27;t used on PythonAnywhere. Production dependencies will be in requirements.txt</p>\\", \\"id\\": \\"c2759190-b384-42ac-bdc7-5b5d7ff53936\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f82\\\\\\">With <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> installed run:</p>\\", \\"id\\": \\"5ef4bb07-7434-41ef-a298-9f7d9f90285b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"wagtail>=5.1,<5.2\\\\\\" \\\\\\"mysqlclient>=2.2,<2.3\\\\\\" \\\\\\"python-dotenv>=1.0,<1.1\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a7c01979-d186-4184-b24c-d3c084043b85\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8ihln\\\\\\">Then create the requirements file with:</p>\\", \\"id\\": \\"7bcbe1e4-e2d7-4086-8f57-c4f03c7cd95c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"d90fb60e-62c5-444a-892b-babaf08a8e08\\"}]", "live": false, "path": "00010001000100010003", "slug": "python-dependencies", "depth": 5, "owner": 1, "title": "Python dependencies", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/python-dependencies/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Python dependencies", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 18, "translation_key": "7a66b01c-2c27-435c-b167-56678f398c4f", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-28T15:53:56.215Z"}	\N	9	1	28	1	Python dependencies
20	f	2023-08-28 16:02:57.104+00	{"pk": 10, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"fb5q7\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"d58l0\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"7ikoa\\\\\\">/media</p>\\", \\"id\\": \\"fc3d65a5-f6c7-4ce7-81e6-5bafedafc6e7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"yq1na\\\\\\">Now create the initial Wagtail site called webapp.</p><p data-block-key=\\\\\\"90h5m\\\\\\"></p>\\", \\"id\\": \\"1d1bf3de-85f0-40e2-a38f-1488d7857883\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run wagtail start webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5d0bb2f2-c70a-438d-92c8-b7cecf2f6eae\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"3l00k\\\\\\">Modify the file and folder layout a little</h2><p data-block-key=\\\\\\"cmrlk\\\\\\">This is my preferred layout for a Wagtail project, it&#x27;s not the same as the official docs.</p><p data-block-key=\\\\\\"5964r\\\\\\"></p>\\", \\"id\\": \\"fdf4e8a8-bc16-4f44-a45c-f52f7d89359e\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"191o6\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"deu1e\\\\\\">Dockefile</li><li data-block-key=\\\\\\"bc39o\\\\\\">requirements.txt</li></ul>\\", \\"id\\": \\"b31b8594-a9bb-47be-a742-65936ab97f9d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48ea35ef-041c-4deb-8281-fe6dfe8b4e54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3h3rb\\\\\\">Move the manage.py file to the root of the project: don&#x27;t forget the . at the end</p>\\", \\"id\\": \\"77337179-8de2-4a71-b719-8ecf54f146f8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/manage.py .\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b908ff20-e1fa-4d14-bd8a-7f1b18717b86\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b5rr7\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>\\", \\"id\\": \\"d2bd8f36-dd4a-4142-8e6a-fc77f9443477\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/webapp/* webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"34e00e0a-1e91-4ebd-86ae-3f8f5ba1c3e2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bcalb\\\\\\">Delete the empty webapp/webapp directory:</p>\\", \\"id\\": \\"80b8b4e4-ac1e-4da6-b49d-a181734ff7ee\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm -rf webapp/webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3f18fa58-58bc-4655-98d5-7f7b1fca7beb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9uqe\\\\\\">Alter import paths and settings</h2><p data-block-key=\\\\\\"e0hel\\\\\\">Open webapp/urls.py and change the import path for:</p>\\", \\"id\\": \\"ef8da042-8e0d-4955-b0c6-237ce85510c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from search import views as search_views\\\\r\\\\n# to\\\\r\\\\nfrom webapp.search import views as search_views\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2bb9f887-d218-4877-8c14-259c46b26b0b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6fgkc\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>\\", \\"id\\": \\"1599ae6d-4748-4006-979d-78a987d90969\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    \\\\\\"webapp.home\\\\\\",\\\\r\\\\n    \\\\\\"webapp.search\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"36e2d1ab-8402-40d7-90c2-445671c3795d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bbsqj\\\\\\">The project file structure should look like this:</p>\\", \\"id\\": \\"f508aac9-0f99-4ab5-ba08-8a132a90cd81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".\\\\r\\\\n|\\\\u2500\\\\u2500 venv\\\\r\\\\n|\\\\u2500\\\\u2500 webapp\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 home\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 search\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 settings\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 static\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 templates\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 __init__.py\\\\r\\\\n\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 urls.py\\\\r\\\\n\\\\u2502   \\\\u2514\\\\u2500\\\\u2500 wsgi.py\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 .gitignore\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 manage.py\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 Pipfile\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 Pipfile.lock\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 README.md\\\\r\\\\n\\\\u251c\\\\u2500\\\\u2500 requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"87b7a8fe-9a5a-4bd5-8671-72c243617ab4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4ljve\\\\\\"></p><p data-block-key=\\\\\\"2asq1\\\\\\"><br/></p><h2 data-block-key=\\\\\\"amjo4\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"esj80\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p><p data-block-key=\\\\\\"3m5vr\\\\\\">pipenv run python manage.py migrate</p><p data-block-key=\\\\\\"9odi\\\\\\">pipenv run python manage.py createsuperuser</p><p data-block-key=\\\\\\"fbrga\\\\\\">pipenv run python manage.py runserver</p><p data-block-key=\\\\\\"5r85l\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"5p7s5\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p><p data-block-key=\\\\\\"dg1lf\\\\\\">You can run pipenv shell to activate the virtual environment before running any of the manage.py commands.<br/>This will mean pipenv run python manage.py migrate can be run as ./manage.py migrate for example.</p><p data-block-key=\\\\\\"2furs\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p><p data-block-key=\\\\\\"etuqs\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/d-add-envvars.md\\\\\\">Setup environment variables</a></p>\\", \\"id\\": \\"4b75c822-e2e1-4c09-9362-2fc492a056c0\\"}]", "live": false, "path": "00010001000100010004", "slug": "start-a-wagtail-site", "depth": 5, "owner": 1, "title": "Start a Wagtail site", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-wagtail-site/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Start a Wagtail site", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "ac74b3dd-9a3f-486f-ad1a-4a2011a51fee", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	10	1	28	1	Start a Wagtail site
21	f	2023-08-28 16:06:33.271+00	{"pk": 10, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"fb5q7\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"d58l0\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"7ikoa\\\\\\">/media</p>\\", \\"id\\": \\"fc3d65a5-f6c7-4ce7-81e6-5bafedafc6e7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"yq1na\\\\\\">Now create the initial Wagtail site called webapp.</p><p data-block-key=\\\\\\"90h5m\\\\\\"></p>\\", \\"id\\": \\"1d1bf3de-85f0-40e2-a38f-1488d7857883\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run wagtail start webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5d0bb2f2-c70a-438d-92c8-b7cecf2f6eae\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"3l00k\\\\\\">Modify the file and folder layout a little</h2><p data-block-key=\\\\\\"cmrlk\\\\\\">This is my preferred layout for a Wagtail project, it&#x27;s not the same as the official docs.</p><p data-block-key=\\\\\\"5964r\\\\\\"></p>\\", \\"id\\": \\"fdf4e8a8-bc16-4f44-a45c-f52f7d89359e\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"191o6\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"deu1e\\\\\\">Dockefile</li><li data-block-key=\\\\\\"bc39o\\\\\\">requirements.txt</li></ul>\\", \\"id\\": \\"b31b8594-a9bb-47be-a742-65936ab97f9d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48ea35ef-041c-4deb-8281-fe6dfe8b4e54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3h3rb\\\\\\">Move the manage.py file to the root of the project: don&#x27;t forget the . at the end</p>\\", \\"id\\": \\"77337179-8de2-4a71-b719-8ecf54f146f8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/manage.py .\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b908ff20-e1fa-4d14-bd8a-7f1b18717b86\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b5rr7\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>\\", \\"id\\": \\"d2bd8f36-dd4a-4142-8e6a-fc77f9443477\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/webapp/* webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"34e00e0a-1e91-4ebd-86ae-3f8f5ba1c3e2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bcalb\\\\\\">Delete the empty webapp/webapp directory:</p>\\", \\"id\\": \\"80b8b4e4-ac1e-4da6-b49d-a181734ff7ee\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm -rf webapp/webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3f18fa58-58bc-4655-98d5-7f7b1fca7beb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9uqe\\\\\\">Alter import paths and settings</h2><p data-block-key=\\\\\\"e0hel\\\\\\">Open webapp/urls.py and change the import path for:</p>\\", \\"id\\": \\"ef8da042-8e0d-4955-b0c6-237ce85510c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from search import views as search_views\\\\r\\\\n# to\\\\r\\\\nfrom webapp.search import views as search_views\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2bb9f887-d218-4877-8c14-259c46b26b0b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6fgkc\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>\\", \\"id\\": \\"1599ae6d-4748-4006-979d-78a987d90969\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    \\\\\\"webapp.home\\\\\\",\\\\r\\\\n    \\\\\\"webapp.search\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"36e2d1ab-8402-40d7-90c2-445671c3795d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bbsqj\\\\\\">The project file structure should look like this:</p>\\", \\"id\\": \\"f508aac9-0f99-4ab5-ba08-8a132a90cd81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".\\\\r\\\\n|\\\\u2500\\\\u2500 venv\\\\r\\\\n|\\\\u2500\\\\u2500 webapp\\\\r\\\\n    |\\\\u2500\\\\u2500 home\\\\r\\\\n    |\\\\u2500\\\\u2500 search\\\\r\\\\n    |\\\\u2500\\\\u2500 settings\\\\r\\\\n    |\\\\u2500\\\\u2500 static\\\\r\\\\n    |\\\\u2500\\\\u2500 templates\\\\r\\\\n    |\\\\u2500\\\\u2500 __init__.py\\\\r\\\\n    |\\\\u2500\\\\u2500 urls.py\\\\r\\\\n    |\\\\u2500\\\\u2500 wsgi.py\\\\r\\\\n|\\\\u2500\\\\u2500 .gitignore\\\\r\\\\n|\\\\u2500\\\\u2500 manage.py\\\\r\\\\n|\\\\u2500\\\\u2500 Pipfile\\\\r\\\\n|\\\\u2500\\\\u2500 Pipfile.lock\\\\r\\\\n|\\\\u2500\\\\u2500 README.md\\\\r\\\\n|\\\\u2500\\\\u2500 requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"87b7a8fe-9a5a-4bd5-8671-72c243617ab4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4ljve\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"esj80\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p>\\", \\"id\\": \\"4b75c822-e2e1-4c09-9362-2fc492a056c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run python manage.py migrate\\\\r\\\\npipenv run python manage.py createsuperuser\\\\r\\\\npipenv run python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"111d13c7-ac25-42a5-be71-707e602b2206\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bb14u\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"5p7s5\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p><p data-block-key=\\\\\\"dg1lf\\\\\\">You can run pipenv shell to activate the virtual environment before running any of the manage.py commands.</p><p data-block-key=\\\\\\"933ri\\\\\\">This will mean pipenv run python manage.py migrate can be run as ./manage.py migrate for example.</p>\\", \\"id\\": \\"9f739a88-68fc-4c5a-b3a2-a6b3d5ab9313\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"h0rex\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>\\", \\"id\\": \\"3d5a6bbf-fade-4071-b140-b290f10d3554\\"}]", "live": false, "path": "00010001000100010004", "slug": "start-a-wagtail-site", "depth": 5, "owner": 1, "title": "Start a Wagtail site", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-wagtail-site/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Start a Wagtail site", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 20, "translation_key": "ac74b3dd-9a3f-486f-ad1a-4a2011a51fee", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-28T16:02:57.104Z"}	\N	10	1	28	1	Start a Wagtail site
22	f	2023-08-28 16:06:37.043+00	{"pk": 10, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"fb5q7\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"d58l0\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"7ikoa\\\\\\">/media</p>\\", \\"id\\": \\"fc3d65a5-f6c7-4ce7-81e6-5bafedafc6e7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"yq1na\\\\\\">Now create the initial Wagtail site called webapp.</p><p data-block-key=\\\\\\"90h5m\\\\\\"></p>\\", \\"id\\": \\"1d1bf3de-85f0-40e2-a38f-1488d7857883\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run wagtail start webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5d0bb2f2-c70a-438d-92c8-b7cecf2f6eae\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"3l00k\\\\\\">Modify the file and folder layout a little</h2><p data-block-key=\\\\\\"cmrlk\\\\\\">This is my preferred layout for a Wagtail project, it&#x27;s not the same as the official docs.</p><p data-block-key=\\\\\\"5964r\\\\\\"></p>\\", \\"id\\": \\"fdf4e8a8-bc16-4f44-a45c-f52f7d89359e\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"u71yw\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"191o6\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"deu1e\\\\\\">Dockefile</li><li data-block-key=\\\\\\"bc39o\\\\\\">requirements.txt</li></ul>\\", \\"id\\": \\"b31b8594-a9bb-47be-a742-65936ab97f9d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48ea35ef-041c-4deb-8281-fe6dfe8b4e54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3h3rb\\\\\\">Move the manage.py file to the root of the project: don&#x27;t forget the . at the end</p>\\", \\"id\\": \\"77337179-8de2-4a71-b719-8ecf54f146f8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/manage.py .\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b908ff20-e1fa-4d14-bd8a-7f1b18717b86\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b5rr7\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>\\", \\"id\\": \\"d2bd8f36-dd4a-4142-8e6a-fc77f9443477\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/webapp/* webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"34e00e0a-1e91-4ebd-86ae-3f8f5ba1c3e2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bcalb\\\\\\">Delete the empty webapp/webapp directory:</p>\\", \\"id\\": \\"80b8b4e4-ac1e-4da6-b49d-a181734ff7ee\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm -rf webapp/webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3f18fa58-58bc-4655-98d5-7f7b1fca7beb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9uqe\\\\\\">Alter import paths and settings</h2><p data-block-key=\\\\\\"e0hel\\\\\\">Open webapp/urls.py and change the import path for:</p>\\", \\"id\\": \\"ef8da042-8e0d-4955-b0c6-237ce85510c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from search import views as search_views\\\\r\\\\n# to\\\\r\\\\nfrom webapp.search import views as search_views\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2bb9f887-d218-4877-8c14-259c46b26b0b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6fgkc\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>\\", \\"id\\": \\"1599ae6d-4748-4006-979d-78a987d90969\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    \\\\\\"webapp.home\\\\\\",\\\\r\\\\n    \\\\\\"webapp.search\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"36e2d1ab-8402-40d7-90c2-445671c3795d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bbsqj\\\\\\">The project file structure should look like this:</p>\\", \\"id\\": \\"f508aac9-0f99-4ab5-ba08-8a132a90cd81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".\\\\r\\\\n|\\\\u2500\\\\u2500 venv\\\\r\\\\n|\\\\u2500\\\\u2500 webapp\\\\r\\\\n    |\\\\u2500\\\\u2500 home\\\\r\\\\n    |\\\\u2500\\\\u2500 search\\\\r\\\\n    |\\\\u2500\\\\u2500 settings\\\\r\\\\n    |\\\\u2500\\\\u2500 static\\\\r\\\\n    |\\\\u2500\\\\u2500 templates\\\\r\\\\n    |\\\\u2500\\\\u2500 __init__.py\\\\r\\\\n    |\\\\u2500\\\\u2500 urls.py\\\\r\\\\n    |\\\\u2500\\\\u2500 wsgi.py\\\\r\\\\n|\\\\u2500\\\\u2500 .gitignore\\\\r\\\\n|\\\\u2500\\\\u2500 manage.py\\\\r\\\\n|\\\\u2500\\\\u2500 Pipfile\\\\r\\\\n|\\\\u2500\\\\u2500 Pipfile.lock\\\\r\\\\n|\\\\u2500\\\\u2500 README.md\\\\r\\\\n|\\\\u2500\\\\u2500 requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"87b7a8fe-9a5a-4bd5-8671-72c243617ab4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4ljve\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"esj80\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p>\\", \\"id\\": \\"4b75c822-e2e1-4c09-9362-2fc492a056c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run python manage.py migrate\\\\r\\\\npipenv run python manage.py createsuperuser\\\\r\\\\npipenv run python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"111d13c7-ac25-42a5-be71-707e602b2206\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bb14u\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"5p7s5\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p><p data-block-key=\\\\\\"dg1lf\\\\\\">You can run pipenv shell to activate the virtual environment before running any of the manage.py commands.</p><p data-block-key=\\\\\\"933ri\\\\\\">This will mean pipenv run python manage.py migrate can be run as ./manage.py migrate for example.</p>\\", \\"id\\": \\"9f739a88-68fc-4c5a-b3a2-a6b3d5ab9313\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"h0rex\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>\\", \\"id\\": \\"3d5a6bbf-fade-4071-b140-b290f10d3554\\"}]", "live": false, "path": "00010001000100010004", "slug": "start-a-wagtail-site", "depth": 5, "owner": 1, "title": "Start a Wagtail site", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-wagtail-site/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Start a Wagtail site", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 21, "translation_key": "ac74b3dd-9a3f-486f-ad1a-4a2011a51fee", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-28T16:06:33.271Z"}	\N	10	1	28	1	Start a Wagtail site
23	f	2023-08-28 16:11:00.639+00	{"pk": 11, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"93elw\\\\\\">To handle the configuration of the Wagtail app and make it convenient to run the app locally and in production I&#x27;ll set up some environment variables.</p>\\", \\"id\\": \\"9c4d95f1-c013-4dd6-b93c-d4ffd48f6a74\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"l6awf\\\\\\">Add a .env file which we can safely push to a git repo</h2>\\", \\"id\\": \\"c15d3fa3-9e77-4eea-b93f-7a56823fa649\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"520f2d1d-24d3-45e3-9af2-399d3186f94b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"fdome\\\\\\">and add the following content</p>\\", \\"id\\": \\"b5b50269-860d-4116-bdf9-08df87eb93db\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"d5a5623e-bd32-4998-ba1e-2a38647125a9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b9gbr\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"920q0\\\\\\">Copy the environment file to .env</p>\\", \\"id\\": \\"69509f5a-f1e1-425c-b3b8-163981874bb1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env.example .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"055dd867-7f12-4747-96a0-66ab39a6fdf7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c2s2l\\\\\\">Before you commit the .env file to git, add it to the .gitignore file so in the future there&#x27;s less risk of committing secrets to git:</p>\\", \\"id\\": \\"a55304b8-f0b1-4958-9293-cec3eb25a4d9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"fa2b00b7-f6b2-4014-9430-08fe02131c0e\\"}]", "live": true, "path": "00010001000100010005", "slug": "setup-environment-variables", "depth": 5, "owner": 1, "title": "Setup environment variables", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-environment-variables/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup environment variables", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "f9c2bf9c-17ac-4a01-950b-28523d17adf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	11	1	28	1	Setup environment variables
24	f	2023-08-28 16:12:38.571+00	{"pk": 12, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"f4e85\\\\\\">As I mentioned, the database will be switched from using sqlite3 to mysql. Here a new docker-compose setup will be added that can be used to spin up the database locally for development.</p>\\", \\"id\\": \\"41d1b85a-a5aa-4c78-a73c-302acb9c5b4b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"fsr17\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"75ee772e-51b9-474f-8d15-4877d7b65465\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"f1181c63-95e0-4a26-845d-263c0eec5828\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bs8h5\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"8q25s\\\\\\">From the root of your project run:</p><p data-block-key=\\\\\\"6qlum\\\\\\">docker-compose up -d</p><p data-block-key=\\\\\\"ck4us\\\\\\">Becuase the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp<br/>To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.<br/>If you already have a mysql server running locally you can probably skip this step.</p><p data-block-key=\\\\\\"dtssh\\\\\\">Up Next - <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk/blob/main/docs/f-switch-to-mysql.md\\\\\\">Configure Wagtail to use the Mysql database</a></p>\\", \\"id\\": \\"a96fda03-faf9-446c-b334-2f767e92de7f\\"}]", "live": true, "path": "00010001000100010006", "slug": "add-a-local-mysql-docker-container-for-development", "depth": 5, "owner": 1, "title": "Add a local mysql docker container for development", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-a-local-mysql-docker-container-for-development/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add a local mysql docker container for development", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "03dc9b6e-26d7-45be-bb04-f18395af1969", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	12	1	28	1	Add a local mysql docker container for development
25	f	2023-08-28 16:13:27.176+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com\\\\\\">PythonAnywhere</a></p><p data-block-key=\\\\\\"6ujpq\\\\\\">I&#x27;m going to build a site for myself, <a href=\\\\\\"http://nickmoreton.co.uk\\\\\\">nickmoreton.co.uk</a>. I&#x27;m not sure yet what I&#x27;m going to put on it, but I&#x27;ll figure that out as I go along. It&#x27;s a starting point that has all the elements one might need to build a Wagtail site and deploy it live.</p><p data-block-key=\\\\\\"88hsl\\\\\\">The official <a href=\\\\\\"https://wagtail.org\\\\\\">Wagtail documentation</a> is excellent and I recommend you read the Developer Documentation, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail</a> site but I wanted to document the process I go through.</p><p data-block-key=\\\\\\"851pf\\\\\\">I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade, as a freelancer and I now work for <a href=\\\\\\"https://torchbox.com\\\\\\">Torchbox</a> as a developer.</p><p data-block-key=\\\\\\"b9246\\\\\\">The tech stack so far is:</p><ul><li data-block-key=\\\\\\"9ghcn\\\\\\">Python:3.10</li><li data-block-key=\\\\\\"b3gr6\\\\\\">Mysql:5.7 (this is a limitation of PythonAnywhere)</li><li data-block-key=\\\\\\"8h2gq\\\\\\">Node / webpack to build the frontend</li><li data-block-key=\\\\\\"33al9\\\\\\">CI actions for code checks</li><li data-block-key=\\\\\\"cplc0\\\\\\">Pre-commit to run git hooks</li><li data-block-key=\\\\\\"5eh7v\\\\\\">Git push deployments to PythonAnywhere (like Heroku etc.)</li><li data-block-key=\\\\\\"684ub\\\\\\">Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"37tvd\\\\\\">Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"2gpcg\\\\\\">The finished source code for the live site is here [https://github.com/nickmoreton/nickmoreton.co.uk](https://github.com/nickmoreton/nickmoreton.co.uk) on the `main` branch and will become more complete over time. It&#x27;s a work in progress and at the moment is just a home page.</p><p data-block-key=\\\\\\"1oo2m\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I need to use the paid version of PythonAnywhere, which starts at \\\\u20ac5/month. You could use a free account but you&#x27;ll need to do your deployments manually and use `git pull` to update the code.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 6, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 6, "show_in_menus": false, "latest_revision": 6, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-28T15:28:01.767Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:28:01.616Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
26	f	2023-08-28 16:15:01.28+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com\\\\\\">PythonAnywhere</a></p><p data-block-key=\\\\\\"6ujpq\\\\\\">I&#x27;m going to build a site for myself, <a href=\\\\\\"http://nickmoreton.co.uk\\\\\\">nickmoreton.co.uk</a>. I&#x27;m not sure yet what I&#x27;m going to put on it, but I&#x27;ll figure that out as I go along. It&#x27;s a starting point that has all the elements one might need to build a Wagtail site and deploy it live.</p><p data-block-key=\\\\\\"88hsl\\\\\\">The official <a href=\\\\\\"https://wagtail.org\\\\\\">Wagtail documentation</a> is excellent and I recommend you read the Developer Documentation, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail</a> site but I wanted to document the process I go through.</p><p data-block-key=\\\\\\"851pf\\\\\\">I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade, as a freelancer and I now work for <a href=\\\\\\"https://torchbox.com\\\\\\">Torchbox</a> as a developer.</p><h2 data-block-key=\\\\\\"b9246\\\\\\">The tech stack so far is</h2><ul><li data-block-key=\\\\\\"9ghcn\\\\\\">Python:3.10</li><li data-block-key=\\\\\\"b3gr6\\\\\\">Mysql:5.7 (this is a limitation of PythonAnywhere)</li><li data-block-key=\\\\\\"8h2gq\\\\\\">Node / webpack to build the frontend</li><li data-block-key=\\\\\\"33al9\\\\\\">CI actions for code checks</li><li data-block-key=\\\\\\"cplc0\\\\\\">Pre-commit to run git hooks</li><li data-block-key=\\\\\\"5eh7v\\\\\\">Git push deployments to PythonAnywhere (like Heroku etc.)</li><li data-block-key=\\\\\\"684ub\\\\\\">Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"37tvd\\\\\\">Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"2gpcg\\\\\\">The finished source code for the live site is here <a href=\\\\\\"https://github.com/nickmoreton/nickmoreton.co.uk\\\\\\">https://github.com/nickmoreton/nickmoreton.co.uk</a> on the `main` branch and will become more complete over time. It&#x27;s a work in progress and at the moment is just a home page.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I need to use the paid version of PythonAnywhere, which starts at \\\\u20ac5/month. You could use a free account but you&#x27;ll need to do your deployments manually and use `git pull` to update the code.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 6, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 25, "show_in_menus": false, "latest_revision": 25, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-28T16:13:27.333Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:13:27.176Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
27	f	2023-08-28 16:17:23.699+00	{"pk": 12, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"f4e85\\\\\\">As I mentioned, the database will be switched from using sqlite3 to mysql. Here a new docker-compose setup will be added that can be used to spin up the database locally for development.</p>\\", \\"id\\": \\"41d1b85a-a5aa-4c78-a73c-302acb9c5b4b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"fsr17\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"75ee772e-51b9-474f-8d15-4877d7b65465\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"f1181c63-95e0-4a26-845d-263c0eec5828\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bs8h5\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"8q25s\\\\\\">From the root of your project run:</p>\\", \\"id\\": \\"a96fda03-faf9-446c-b334-2f767e92de7f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"d6f09a59-083f-4db3-8795-8aec39a3b791\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cb256\\\\\\">Becuase the .env file is available the running db container will use the MYSQL_... env vars. </p><p data-block-key=\\\\\\"397d5\\\\\\">Therefore the username, password and database name are initialized to <i>webapp</i></p>\\", \\"id\\": \\"98dd3cff-2268-4302-8379-d2a1f49c4c3f\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"57sn0\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><p data-block-key=\\\\\\"1pfnh\\\\\\">If you already have a mysql server running locally you can probably skip this step.</p>\\", \\"id\\": \\"aed19e7a-52aa-4f22-913e-7dcf264a1dd2\\"}]", "live": true, "path": "00010001000100010006", "slug": "add-a-local-mysql-docker-container-for-development", "depth": 5, "owner": 1, "title": "Add a local mysql docker container for development", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-a-local-mysql-docker-container-for-development/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add a local mysql docker container for development", "content_type": 28, "live_revision": 24, "show_in_menus": false, "latest_revision": 24, "translation_key": "03dc9b6e-26d7-45be-bb04-f18395af1969", "last_published_at": "2023-08-28T16:12:38.707Z", "first_published_at": "2023-08-28T16:12:38.707Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:12:38.571Z"}	\N	12	1	28	1	Add a local mysql docker container for development
28	f	2023-08-28 16:21:32.903+00	{"pk": 13, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ru9sg\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"0ff7c519-4cb8-4e76-95fb-65660593e00b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"d4077b53-045f-43ba-8fa2-452a9e5f0ed3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"545d4\\\\\\">and replace it with:</p>\\", \\"id\\": \\"6f998498-e558-4469-b81a-511a4ee240ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"e320af32-ba52-4753-9e01-0b6677b1a3d2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"erdre\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"c196d4b4-32f3-4e5f-8d99-e7ca3ddddc3a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"33b37b73-7da8-44dd-9e38-499ebf4054f0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1p03i\\\\\\"><i>env_vars</i> will hold all the environment variables and we can use them to connect to the local mysql database.</p><p data-block-key=\\\\\\"aap1t\\\\\\">In PythonAnywhere those environment variables will be available but that still needs to be setup.</p><h2 data-block-key=\\\\\\"24h0\\\\\\">Add Django &lt; 4.2 as a python dependency</h2><p data-block-key=\\\\\\"egnv4\\\\\\">As python anywhere (on my account) uses Mysql 5.7 and Django v4.2+ requires Mysql v8.0+ the Django version installed needs to be pinned at v4.1</p><p data-block-key=\\\\\\"8sbca\\\\\\">Run the following to add the Django constraint:</p>\\", \\"id\\": \\"4acc1610-4aad-4e9e-8460-e5aec73d57ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"django>=4.1,<4.2\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"32d1d4b5-a6cc-463f-af94-1d4f56937f0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bkuks\\\\\\">then write the dependencies to requirements.txt</p>\\", \\"id\\": \\"fd3987dc-7b53-4fa8-ae4c-6cfc25826953\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f905978-1f12-4da6-992b-ea58c40cf15a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7retl\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"1fc9q\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p>\\", \\"id\\": \\"6ae19ec3-bb22-41fd-96c7-bea8f53efa7b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run python manage.py migrate\\\\r\\\\npipenv run python manage.py createsuperuser\\\\r\\\\npipenv run python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9fb347d5-386e-4a45-8d19-5f9b110f017c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"570be\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"58m6k\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"1daef18d-fbfe-45d9-a785-3c53e44abce6\\"}]", "live": true, "path": "00010001000100010007", "slug": "configure-wagtail-to-use-the-mysql-database", "depth": 5, "owner": 1, "title": "Configure Wagtail to use the Mysql database", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/configure-wagtail-to-use-the-mysql-database/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Configure Wagtail to use the Mysql database", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "2f0eb026-67ea-4e67-ad44-9be27fbd40c7", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	13	1	28	1	Configure Wagtail to use the Mysql database
29	f	2023-08-28 16:22:28.887+00	{"pk": 13, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ru9sg\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"0ff7c519-4cb8-4e76-95fb-65660593e00b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"d4077b53-045f-43ba-8fa2-452a9e5f0ed3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"545d4\\\\\\">and replace it with:</p>\\", \\"id\\": \\"6f998498-e558-4469-b81a-511a4ee240ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"e320af32-ba52-4753-9e01-0b6677b1a3d2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"erdre\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"c196d4b4-32f3-4e5f-8d99-e7ca3ddddc3a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"33b37b73-7da8-44dd-9e38-499ebf4054f0\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ta7ec\\\\\\"><i>env_vars</i> will hold all the environment variables and we can use them to connect to the local mysql database.</p><p data-block-key=\\\\\\"ck0qh\\\\\\">In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"61bac2d8-7ca3-4656-b696-e291d0db95d0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"1p03i\\\\\\">Add Django &lt; 4.2 as a python dependency</h3><p data-block-key=\\\\\\"egnv4\\\\\\">As python anywhere (on my account) uses Mysql 5.7 and Django v4.2+ requires Mysql v8.0+ the Django version installed needs to be pinned at v4.1</p><p data-block-key=\\\\\\"8sbca\\\\\\">Run the following to add the Django constraint:</p>\\", \\"id\\": \\"4acc1610-4aad-4e9e-8460-e5aec73d57ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"django>=4.1,<4.2\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"32d1d4b5-a6cc-463f-af94-1d4f56937f0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bkuks\\\\\\">then write the dependencies to requirements.txt</p>\\", \\"id\\": \\"fd3987dc-7b53-4fa8-ae4c-6cfc25826953\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f905978-1f12-4da6-992b-ea58c40cf15a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7retl\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"1fc9q\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p>\\", \\"id\\": \\"6ae19ec3-bb22-41fd-96c7-bea8f53efa7b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run python manage.py migrate\\\\r\\\\npipenv run python manage.py createsuperuser\\\\r\\\\npipenv run python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9fb347d5-386e-4a45-8d19-5f9b110f017c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"570be\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"58m6k\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"1daef18d-fbfe-45d9-a785-3c53e44abce6\\"}]", "live": true, "path": "00010001000100010007", "slug": "configure-wagtail-to-use-the-mysql-database", "depth": 5, "owner": 1, "title": "Configure Wagtail to use the Mysql database", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/configure-wagtail-to-use-the-mysql-database/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Configure Wagtail to use the Mysql database", "content_type": 28, "live_revision": 28, "show_in_menus": false, "latest_revision": 28, "translation_key": "2f0eb026-67ea-4e67-ad44-9be27fbd40c7", "last_published_at": "2023-08-28T16:21:33.051Z", "first_published_at": "2023-08-28T16:21:33.051Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:21:32.903Z"}	\N	13	1	28	1	Configure Wagtail to use the Mysql database
30	f	2023-08-28 16:23:46.141+00	{"pk": 13, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ru9sg\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"0ff7c519-4cb8-4e76-95fb-65660593e00b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"d4077b53-045f-43ba-8fa2-452a9e5f0ed3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"545d4\\\\\\">and replace it with:</p>\\", \\"id\\": \\"6f998498-e558-4469-b81a-511a4ee240ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"e320af32-ba52-4753-9e01-0b6677b1a3d2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"erdre\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"c196d4b4-32f3-4e5f-8d99-e7ca3ddddc3a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"33b37b73-7da8-44dd-9e38-499ebf4054f0\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ta7ec\\\\\\"><i>env_vars</i> will hold all the environment variables and we can use them to connect to the local mysql database.</p><p data-block-key=\\\\\\"ck0qh\\\\\\">In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"61bac2d8-7ca3-4656-b696-e291d0db95d0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"1p03i\\\\\\">Add Django &lt; 4.2 as a python dependency</h3><p data-block-key=\\\\\\"egnv4\\\\\\">As python anywhere (on my account) uses Mysql 5.7 and Django v4.2+ requires Mysql v8.0+ the Django version installed needs to be pinned at v4.1</p><p data-block-key=\\\\\\"eihv8\\\\\\"><b><i>You don&#x27;t need to do this if you account is running Mysql 8.0+</i></b></p><p data-block-key=\\\\\\"8sbca\\\\\\">Run the following to add the Django constraint:</p>\\", \\"id\\": \\"4acc1610-4aad-4e9e-8460-e5aec73d57ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"django>=4.1,<4.2\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"32d1d4b5-a6cc-463f-af94-1d4f56937f0c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bkuks\\\\\\">then write the dependencies to requirements.txt</p>\\", \\"id\\": \\"fd3987dc-7b53-4fa8-ae4c-6cfc25826953\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f905978-1f12-4da6-992b-ea58c40cf15a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7retl\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"1fc9q\\\\\\">Run the Wagtail project locally to check that everything is working as expected:</p>\\", \\"id\\": \\"6ae19ec3-bb22-41fd-96c7-bea8f53efa7b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run python manage.py migrate\\\\r\\\\npipenv run python manage.py createsuperuser\\\\r\\\\npipenv run python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9fb347d5-386e-4a45-8d19-5f9b110f017c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"570be\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"58m6k\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"1daef18d-fbfe-45d9-a785-3c53e44abce6\\"}]", "live": true, "path": "00010001000100010007", "slug": "configure-wagtail-to-use-the-mysql-database", "depth": 5, "owner": 1, "title": "Configure Wagtail to use the Mysql database", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/configure-wagtail-to-use-the-mysql-database/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Configure Wagtail to use the Mysql database", "content_type": 28, "live_revision": 29, "show_in_menus": false, "latest_revision": 29, "translation_key": "2f0eb026-67ea-4e67-ad44-9be27fbd40c7", "last_published_at": "2023-08-28T16:22:29.003Z", "first_published_at": "2023-08-28T16:21:33.051Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:22:28.887Z"}	\N	13	1	28	1	Configure Wagtail to use the Mysql database
41	f	2023-08-29 12:18:08.71+00	{"pk": 20, "body": "[]", "date": "2023-08-29", "live": false, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": 40, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": null, "pypi_package_name": "wagtail-qrcode", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-29T12:17:31.273Z"}	\N	20	1	32	1	Wagtail QR code
42	f	2023-08-29 12:27:18.426+00	{"pk": 20, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.</p>\\", \\"id\\": \\"a043f204-854f-4dda-a86c-cfedd38353c0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h2><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": false, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": 41, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": null, "pypi_package_name": "wagtail-qrcode", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-29T12:18:08.710Z"}	\N	20	1	32	1	Wagtail QR code
43	f	2023-08-29 12:29:06.865+00	{"pk": 20, "body": "[{\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"left\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.</p>\\", \\"id\\": \\"a043f204-854f-4dda-a86c-cfedd38353c0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h2><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 42, "show_in_menus": false, "latest_revision": 42, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-08-29T12:27:18.553Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-29T12:27:18.426Z"}	\N	20	1	32	1	Wagtail QR code
44	f	2023-08-29 12:32:15.538+00	{"pk": 20, "body": "[{\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.</p>\\", \\"id\\": \\"a043f204-854f-4dda-a86c-cfedd38353c0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h2><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 43, "show_in_menus": false, "latest_revision": 43, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-08-29T12:29:07.021Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-29T12:29:06.865Z"}	\N	20	1	32	1	Wagtail QR code
45	f	2023-08-29 12:32:54.315+00	{"pk": 20, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.</p>\\", \\"id\\": \\"a043f204-854f-4dda-a86c-cfedd38353c0\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h2><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 44, "show_in_menus": false, "latest_revision": 44, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-08-29T12:32:15.892Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-29T12:32:15.538Z"}	\N	20	1	32	1	Wagtail QR code
46	f	2023-08-30 14:58:57.974+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</p><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><p data-block-key=\\\\\\"5ib0m\\\\\\">The code here is the complete source code after following the steps below.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 13, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 26, "show_in_menus": false, "latest_revision": 26, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-28T16:15:01.439Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:15:01.280Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
31	f	2023-08-28 16:26:12.588+00	{"pk": 14, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d1vwu\\\\\\">On the Databases tab create a new database. I called mine nickmoreton_co_uk_db</p><p data-block-key=\\\\\\"bb8gs\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"3jmh9\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"c6u9b\\\\\\">Earlier on I created a .env file at ~/.env-settings/nickmoreton.co.uk</p><p data-block-key=\\\\\\"a5bvq\\\\\\">Open the file, you can do this from the Files tab and add the following content.</p><p data-block-key=\\\\\\"42tdb\\\\\\"></p>\\", \\"id\\": \\"55149dd4-f7f9-4a1c-8d5c-cf1e899cbd59\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_DATABASE='the-datbase-name-you-just-created'\\\\r\\\\nMYSQL_USER='get-this-from-the-databases-tab' # Username\\\\r\\\\nMYSQL_PASSWORD='the-password-just-created'\\\\r\\\\nMYSQL_HOST='get-this-from-the-databases-tab' # Database host address\\\\r\\\\nMYSQL_PORT='3306'\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ebf157ca-5b67-4057-92b0-95bf87aed6ce\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2derj\\\\\\">While I am editing this file, although not Database related the following can also be added.</p>\\", \\"id\\": \\"2330a053-488b-4b7f-9fc0-f2bc290089fd\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME='add-your-sites-name'\\\\r\\\\nBASE_URL='http://your-domain.co.uk'\\\\r\\\\nDJANGO_SECRET_KEY='add-a-good-secret-key'\\\\r\\\\nDJANGO_ALLOWED_HOSTS='your-domain.co.uk'\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a804acb0-9d99-44b5-b31b-cfbbffa6ce83\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7pbsp\\\\\\">Save the file.</p>\\", \\"id\\": \\"86f22a01-2976-4613-86d4-529abd3c4efc\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"beq5o\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"157340aa-91bf-471a-9246-7237a1745310\\"}]", "live": true, "path": "00010001000100010008", "slug": "create-a-mysql-database-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Create a Mysql database on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-mysql-database-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Create a Mysql database on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "de563c28-0774-4966-a16b-cb46a0b9ee9e", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	14	1	28	1	Create a Mysql database on PythonAnywhere
32	f	2023-08-28 16:26:57.638+00	{"pk": 14, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d1vwu\\\\\\">On the Databases tab create a new database. I called mine <i>nickmoreton_co_uk_db</i></p><p data-block-key=\\\\\\"bb8gs\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"3jmh9\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"c6u9b\\\\\\">Earlier on I created a .env file at <i>~/.env-settings/nickmoreton.co.uk</i></p><p data-block-key=\\\\\\"a5bvq\\\\\\">Open the file, you can do this from the Files tab and add the following content.</p>\\", \\"id\\": \\"55149dd4-f7f9-4a1c-8d5c-cf1e899cbd59\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_DATABASE='the-datbase-name-you-just-created'\\\\r\\\\nMYSQL_USER='get-this-from-the-databases-tab' # Username\\\\r\\\\nMYSQL_PASSWORD='the-password-just-created'\\\\r\\\\nMYSQL_HOST='get-this-from-the-databases-tab' # Database host address\\\\r\\\\nMYSQL_PORT='3306'\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ebf157ca-5b67-4057-92b0-95bf87aed6ce\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2derj\\\\\\">While I am editing this file, although not Database related the following can also be added.</p>\\", \\"id\\": \\"2330a053-488b-4b7f-9fc0-f2bc290089fd\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME='add-your-sites-name'\\\\r\\\\nBASE_URL='http://your-domain.co.uk'\\\\r\\\\nDJANGO_SECRET_KEY='add-a-good-secret-key'\\\\r\\\\nDJANGO_ALLOWED_HOSTS='your-domain.co.uk'\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a804acb0-9d99-44b5-b31b-cfbbffa6ce83\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7pbsp\\\\\\">Save the file.</p>\\", \\"id\\": \\"86f22a01-2976-4613-86d4-529abd3c4efc\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"beq5o\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"157340aa-91bf-471a-9246-7237a1745310\\"}]", "live": true, "path": "00010001000100010008", "slug": "create-a-mysql-database-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Create a Mysql database on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-mysql-database-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Create a Mysql database on PythonAnywhere", "content_type": 28, "live_revision": 31, "show_in_menus": false, "latest_revision": 31, "translation_key": "de563c28-0774-4966-a16b-cb46a0b9ee9e", "last_published_at": "2023-08-28T16:26:12.727Z", "first_published_at": "2023-08-28T16:26:12.727Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:26:12.588Z"}	\N	14	1	28	1	Create a Mysql database on PythonAnywhere
33	f	2023-08-28 16:29:36.571+00	{"pk": 15, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"tkk0f\\\\\\">On the Web tab set the following.</p><ul><li data-block-key=\\\\\\"3lvtn\\\\\\">Code &gt; Source code:<br/>mine is <i>/var/www/sites/nickmoreton.co.uk</i></li><li data-block-key=\\\\\\"2ncsc\\\\\\">Virtualenv path:<br/>mine is <i>/home/account-name-here/.virtualenvs/nickmoreton.co.uk_venv</i></li><li data-block-key=\\\\\\"9jf8n\\\\\\">Static files:<br/>url: <i>/static/</i> directory: <i>/var/www/sites/nickmoreton.co.uk/static<br/></i>url: <i>/media/</i> directory: <i>/var/www/sites/nickmoreton.co.uk/media</i></li></ul>\\", \\"id\\": \\"11053e75-4651-4514-a3aa-1eb2400051ea\\"}]", "live": true, "path": "00010001000100010009", "slug": "update-some-web-app-settings", "depth": 5, "owner": 1, "title": "Update some web app settings", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/update-some-web-app-settings/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Update some web app settings", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "8d1e6b50-705f-4623-9a71-e8ba9764b89f", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	15	1	28	1	Update some web app settings
34	f	2023-08-28 16:32:21.675+00	{"pk": 16, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"w8kbr\\\\\\">On your local machine, open webapp/settings/base.py and add/update the following:</p>\\", \\"id\\": \\"16d14f70-772f-4eef-805d-43410c06abd6\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"020453ba-844c-44e5-b9f5-c6cc8521ba26\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"thlh\\\\\\">Open your local .env.example file and add these new environment variables, also make sure they are available in the .env file</p>\\", \\"id\\": \\"3ef6a607-a8d8-487f-9e95-ad883bcef57d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b806738f-26f8-4fd9-b0cc-60acf26df002\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"q8plg\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"29ab5\\\\\\">Try out the webapp locally to make sure all is working OK. Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p><p data-block-key=\\\\\\"249tt\\\\\\">In production, on a live site they will be loaded from that environment.</p>\\", \\"id\\": \\"19b17b33-b89c-4205-87d4-05c774dfc3f6\\"}]", "live": true, "path": "0001000100010001000A", "slug": "alter-wagtail-settings-to-use-more-environment-variables", "depth": 5, "owner": 1, "title": "Alter Wagtail settings to use more environment variables", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/alter-wagtail-settings-to-use-more-environment-variables/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Alter Wagtail settings to use more environment variables", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "2bdfdce9-4c0b-43d8-b3c1-edaf2a430d2c", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	16	1	28	1	Alter Wagtail settings to use more environment variables
47	f	2023-08-30 14:59:44.959+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><p data-block-key=\\\\\\"5ib0m\\\\\\">The code here is the complete source code after following the steps below.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 13, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 46, "show_in_menus": false, "latest_revision": 46, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T14:58:58.214Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T14:58:57.974Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
48	f	2023-08-30 15:02:23.413+00	{"pk": 21, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xz8um\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"c7ibd\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin.</p>\\", \\"id\\": \\"a3d3f767-6c3f-47ae-aa47-f1e196d45d55\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"cf5l9\\\\\\">Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"d3bafac7-3d27-4293-84f8-800dcde3ece7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t1it\\\\\\">Python dependencies</h2><p data-block-key=\\\\\\"f9vg9\\\\\\">There are a few ways to manage python dependencies, I&#x27;m using <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> but you can use your preferred method. The only caveat is that the production dependencies ideally need to be in a requirements.txt file when deploying to PythonAnywhere.</p><p data-block-key=\\\\\\"eqmpg\\\\\\">With <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> installed run:</p><p data-block-key=\\\\\\"28l85\\\\\\">pipenv install &quot;wagtail&gt;=5.1,&lt;5.2&quot; &quot;mysqlclient&gt;=2.2,&lt;2.3&quot; &quot;python-dotenv&gt;=1.0,&lt;1.1&quot; &quot;django&gt;=4.1,&lt;4.2&quot;</p><p data-block-key=\\\\\\"4c3qm\\\\\\">I&#x27;m using Django v4.1 as my PythonAnywhere account uses Mysql v5.7 and Django v4.2+ requires Mysql v8.0+. If your account uses Mysql v8.0+ then you can omit the Django constraint.</p><p data-block-key=\\\\\\"9jh4v\\\\\\">Then create an initial requirements file with:</p><p data-block-key=\\\\\\"a0nj\\\\\\">pipenv requirements &gt; requirements.txt</p><h2 data-block-key=\\\\\\"74hpn\\\\\\">Start a Wagtail site</h2><p data-block-key=\\\\\\"3p6cn\\\\\\">If you don&#x27;t have one already, add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"8ggpc\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"2cafs\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"f9pg4\\\\\\">/media</p><p data-block-key=\\\\\\"eimv5\\\\\\">Now create the initial Wagtail site called webapp or use your preferred name.</p><p data-block-key=\\\\\\"djoou\\\\\\">pipenv run wagtail start webapp</p><h3 data-block-key=\\\\\\"4jthh\\\\\\">Modify the file and folder layout a little</h3><p data-block-key=\\\\\\"6rev7\\\\\\">I like to alter the layout of the files and folders a little to suit my preferences. It&#x27;s not necessary but I find it easier to work with. You can skip this step if you prefer but make sure you adjust any paths in the following steps.</p><p data-block-key=\\\\\\"c0adi\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"er7es\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"4f9cn\\\\\\">Dockefile</li><li data-block-key=\\\\\\"59iul\\\\\\">requirements.txt</li></ul><p data-block-key=\\\\\\"102r0\\\\\\">rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt</p><p data-block-key=\\\\\\"b258t\\\\\\">Move the manage.py file to the root of the project:</p><p data-block-key=\\\\\\"6qerf\\\\\\">mv webapp/manage.py .</p><p data-block-key=\\\\\\"6mo4b\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p><p data-block-key=\\\\\\"ab8d5\\\\\\">mv webapp/webapp/* webapp</p><p data-block-key=\\\\\\"85ggp\\\\\\">Delete the empty webapp/webapp directory:</p><p data-block-key=\\\\\\"4s6h3\\\\\\">rm -rf webapp/webapp</p><h3 data-block-key=\\\\\\"2l3gv\\\\\\">Alter import paths and settings</h3><p data-block-key=\\\\\\"3t20p\\\\\\">Open webapp/urls.py and change the import path for</p><p data-block-key=\\\\\\"6rhif\\\\\\">from search import views as search_views</p><p data-block-key=\\\\\\"6758g\\\\\\">to</p><p data-block-key=\\\\\\"bb2j3\\\\\\">from webapp.search import views as search_views</p><p data-block-key=\\\\\\"cuf6t\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p><p data-block-key=\\\\\\"5dm1\\\\\\">INSTALLED_APPS = [<br/>    &quot;webapp.home&quot;,<br/>    &quot;webapp.search&quot;,<br/>    ...<br/>]</p><p data-block-key=\\\\\\"ai3qt\\\\\\">The project file structure should look like this:</p><p data-block-key=\\\\\\"aptt2\\\\\\">.<br/>\\\\u251c\\\\u2500\\\\u2500 venv<br/>\\\\u251c\\\\u2500\\\\u2500 webapp<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 home<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 search<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 settings<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 static<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 templates<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 __init__.py<br/>\\\\u2502   \\\\u251c\\\\u2500\\\\u2500 urls.py<br/>\\\\u2502   \\\\u2514\\\\u2500\\\\u2500 wsgi.py<br/>\\\\u251c\\\\u2500\\\\u2500 .gitignore<br/>\\\\u251c\\\\u2500\\\\u2500 manage.py<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile.lock<br/>\\\\u251c\\\\u2500\\\\u2500 README.md<br/>\\\\u251c\\\\u2500\\\\u2500 requirements.txt<br/></p><h2 data-block-key=\\\\\\"3t677\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"76o2f\\\\\\">Run the Wagtail project locally to check that everything is working as expected, activate the virtual environment e.g. pipenv shell and run the following commands:</p><p data-block-key=\\\\\\"79con\\\\\\">python manage.py migrate<br/>python manage.py createsuperuser</p><p data-block-key=\\\\\\"2urfq\\\\\\">Then run the local development server:</p><p data-block-key=\\\\\\"dv4um\\\\\\">python manage.py runserver</p><p data-block-key=\\\\\\"feq4b\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"ajs9p\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p><p data-block-key=\\\\\\"8vj0e\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>\\", \\"id\\": \\"dabe2227-282f-4551-96d4-9799b9f73440\\"}]", "live": false, "path": "0001000100010001000E", "slug": "initial-repo-and-starting-a-new-wagtail-project", "depth": 5, "owner": 1, "title": "Initial repo and starting a new Wagtail project", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/initial-repo-and-starting-a-new-wagtail-project/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Initial repo and starting a new Wagtail project", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "da0a702c-52e0-4199-a7b9-dc9fa0312509", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	21	1	28	1	Initial repo and starting a new Wagtail project
49	f	2023-08-30 15:10:48.405+00	{"pk": 21, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xz8um\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"c7ibd\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin.</p>\\", \\"id\\": \\"a3d3f767-6c3f-47ae-aa47-f1e196d45d55\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"cf5l9\\\\\\">Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"d3bafac7-3d27-4293-84f8-800dcde3ece7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t1it\\\\\\">Python dependencies</h2><p data-block-key=\\\\\\"f9vg9\\\\\\">There are a few ways to manage python dependencies, I&#x27;m using <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> but you can use your preferred method. The only caveat is that the production dependencies ideally need to be in a requirements.txt file when deploying to PythonAnywhere.</p><p data-block-key=\\\\\\"eqmpg\\\\\\">With <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> installed run:</p>\\", \\"id\\": \\"dabe2227-282f-4551-96d4-9799b9f73440\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"wagtail>=5.1,<5.2\\\\\\" \\\\\\"mysqlclient>=2.2,<2.3\\\\\\" \\\\\\"python-dotenv>=1.0,<1.1\\\\\\" \\\\\\"django>=4.1,<4.2\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"aaaaf3a3-fde2-4ed3-809f-02eb61989519\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"dz51h\\\\\\">I&#x27;m using Django v4.1 as my PythonAnywhere account uses Mysql v5.7 and Django v4.2+ requires Mysql v8.0+. If your account uses Mysql v8.0+ then you can omit the Django constraint.</p>\\", \\"id\\": \\"7971d398-03a1-47cf-9932-a6af919332cf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"68evn\\\\\\">Then create an initial requirements file with:</p>\\", \\"id\\": \\"0b2ce765-ae0a-4dda-8921-fdb6219b45a2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ebebc2c6-44a9-4514-9e83-d43422879065\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"cruch\\\\\\">Start a Wagtail site</h2><p data-block-key=\\\\\\"3p6cn\\\\\\">If you don&#x27;t have one already, add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"8ggpc\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"2cafs\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"f9pg4\\\\\\">/media</p><p data-block-key=\\\\\\"eimv5\\\\\\">Now create the initial Wagtail site called webapp or use your preferred name.</p>\\", \\"id\\": \\"6e4a9814-54b3-4f2f-844a-1a386b64fc7b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run wagtail start webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bee4b813-919b-46ab-881b-9cfc8fbe8f09\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bbgsl\\\\\\">Modify the file and folder layout a little</h2>\\", \\"id\\": \\"82d8c374-0f10-4465-aa89-25b799558f94\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"dz51h\\\\\\">I like to alter the layout of the files and folders a little to suit my preferences. It&#x27;s not necessary but I find it easier to work with. You can skip this step if you prefer but make sure you adjust any paths in the following steps.</p>\\", \\"id\\": \\"a769e132-aedf-45f4-8134-383c654203db\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6loua\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"er7es\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"4f9cn\\\\\\">Dockefile</li><li data-block-key=\\\\\\"59iul\\\\\\">requirements.txt</li></ul>\\", \\"id\\": \\"446e29ec-2e34-4bde-a3c1-119b47a8cfe3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1e52eb8f-810e-4d59-9fcb-94178e201a9e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"aoqr7\\\\\\">Move the manage.py file to the root of the project:</p>\\", \\"id\\": \\"e8e66774-9343-4864-a8d5-5da96bbb5e72\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/manage.py .\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"939fafb7-bb46-4171-9118-45109c42bd63\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7mb3j\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>\\", \\"id\\": \\"83d06159-e072-443d-bc42-091f93051ece\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/webapp/* webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"7da877a9-8758-465f-992b-f5a3e4266181\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"e3u3g\\\\\\">Delete the empty webapp/webapp directory:</p>\\", \\"id\\": \\"55c1c87f-7ed2-4600-8082-ac0dd47d7f88\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm -rf webapp/webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"549d87c8-fe78-46ba-95fd-4026b91dc627\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"a1hca\\\\\\">Alter import paths and settings</h2><p data-block-key=\\\\\\"3t20p\\\\\\">Open webapp/urls.py and change the import path for:</p>\\", \\"id\\": \\"554f25d8-acce-4e09-8bc9-a702353d9a21\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from search import views as search_views\\\\r\\\\n# to\\\\r\\\\nfrom webapp.search import views as search_views\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ff16aeb4-1d06-4520-80ce-02331b449285\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ak7j1\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>\\", \\"id\\": \\"b0389d29-7509-42c1-8985-8a55477da00a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n \\\\\\"webapp.home\\\\\\",\\\\r\\\\n \\\\\\"webapp.search\\\\\\",\\\\r\\\\n ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"a91cfbfb-5411-4356-bea2-2293c80ead1f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"e1vsi\\\\\\">The project file structure should look like this:</p><p data-block-key=\\\\\\"aptt2\\\\\\">.<br/>\\\\u251c\\\\u2500\\\\u2500 venv<br/>\\\\u251c\\\\u2500\\\\u2500 webapp<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 home<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 search<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 settings<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 static<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 templates<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 __init__.py<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 urls.py<br/>\\\\u2502 \\\\u2514\\\\u2500\\\\u2500 wsgi.py<br/>\\\\u251c\\\\u2500\\\\u2500 .gitignore<br/>\\\\u251c\\\\u2500\\\\u2500 manage.py<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile.lock<br/>\\\\u251c\\\\u2500\\\\u2500 README.md<br/>\\\\u251c\\\\u2500\\\\u2500 requirements.txt<br/></p>\\", \\"id\\": \\"02954837-c7c6-40d1-aa3c-f4188ffc24b2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"54iip\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"76o2f\\\\\\">Run the Wagtail project locally to check that everything is working as expected, activate the virtual environment e.g. pipenv shell and run the following commands:</p>\\", \\"id\\": \\"41087582-e4d4-4488-85e2-ab3a7abc90ed\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"f0b39fd3-9433-4c4d-bc3e-324048c329ba\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2ddes\\\\\\">Then run the local development server:</p>\\", \\"id\\": \\"c5dd5815-4a17-45ce-a7ee-1174d505ac4e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"916254e0-c8e1-4b63-97d1-d87c0aa1334d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"al79g\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"ajs9p\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"3958791c-b6c4-419c-b511-ee64129c05f3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"dz51h\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>\\", \\"id\\": \\"694b227d-a9d5-4f16-aac1-388b990a1513\\"}]", "live": false, "path": "0001000100010001000E", "slug": "initial-repo-and-starting-a-new-wagtail-project", "depth": 5, "owner": 1, "title": "Initial repo and starting a new Wagtail project", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/initial-repo-and-starting-a-new-wagtail-project/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Initial repo and starting a new Wagtail project", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 48, "translation_key": "da0a702c-52e0-4199-a7b9-dc9fa0312509", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:02:23.413Z"}	\N	21	1	28	1	Initial repo and starting a new Wagtail project
50	f	2023-08-30 15:22:53.845+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run. </p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK. </p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": false, "path": "0001000100010001000F", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	22	1	28	1	Setup to use Mysql
51	f	2023-08-30 15:22:59.418+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": false, "path": "0001000100010001000F", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": 50, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-08-30T15:22:53.845Z"}	\N	22	1	28	1	Setup to use Mysql
52	f	2023-08-30 15:26:13.613+00	{"pk": 23, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"md6qj\\\\\\">Once you have created your PythonAnywhere account, log into it.</p><p data-block-key=\\\\\\"cbnqq\\\\\\">Open the <b>Web</b> tab and click the <b>Add a new web app button</b>.</p><ol><li data-block-key=\\\\\\"d44br\\\\\\"><b>Choose:</b> <i>Own domain</i> (or use the default given by PA) I used my own domain name here, I suggest you also specify www in the name or the subdomain you are using.</li><li data-block-key=\\\\\\"8u89j\\\\\\"><b>Choose:</b> <i>Manual setup</i></li><li data-block-key=\\\\\\"8aqoh\\\\\\"><b>Choose:</b> <i>Python</i> (latest you can choose)</li></ol><p data-block-key=\\\\\\"cu767\\\\\\">This will create the webapp and take you to the settings page for the webapp.</p>\\", \\"id\\": \\"e953c3c7-e53c-4555-a053-e2a7ec28af85\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"ebq4x\\\\\\">I find it best to use the full domain, including www for the webapp name. Later on at my domain provider I set up web-forwarding from domain.com to www.domain.com It can take a while for DNS changes to be updated for the webapp so you could come back later and complete some of the following steps.</p>\\", \\"id\\": \\"d60a4eb1-7973-4f2e-803f-3da9bde74a03\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"112ut\\\\\\">Configure your domain name</h3><p data-block-key=\\\\\\"8e4jf\\\\\\">Copy the CNAME details and add them to your domain at your providers control panel. <a href=\\\\\\"https://help.pythonanywhere.com/pages/CustomDomains\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"er86l\\\\\\">When the DNS changes have propagated you should add an HTTPS certificate and make it the default Force HTTPS enabled.</p><h2 data-block-key=\\\\\\"fqrgr\\\\\\">Setup directories</h2><p data-block-key=\\\\\\"c7okd\\\\\\">As it&#x27;s possible to host multiple web apps in your PA account, think about naming when choosing your directory/file names</p><p data-block-key=\\\\\\"ar8ef\\\\\\">Open the Files tab...</p><h3 data-block-key=\\\\\\"arkrv\\\\\\">Source code directory</h3><p data-block-key=\\\\\\"1km2n\\\\\\">Navigate to /var/www/sites which should already exist.</p><p data-block-key=\\\\\\"efbb0\\\\\\">Create a directory to hold your source code. Something like www.domain.com, this is going to be my live/production website.</p><h3 data-block-key=\\\\\\"7gbn\\\\\\">Bare repos directory</h3><p data-block-key=\\\\\\"4f6e6\\\\\\">Set up a directory structure to hold your bare repos.</p><p data-block-key=\\\\\\"788ae\\\\\\">Navigate to your home folder e.g. /home/account-name</p><p data-block-key=\\\\\\"62hvo\\\\\\">Create a directory inside to hold your bare-repos. I named mine bare-repos Then I add another directory inside bare-repos something like www.domain.com.git</p><p data-block-key=\\\\\\"39b0s\\\\\\">So the path to the bare repo directory is /home/account-name/bare-repos/www.domain.com.git</p><h3 data-block-key=\\\\\\"3d2vp\\\\\\">Environment variables storage</h3><p data-block-key=\\\\\\"5tq2r\\\\\\">Navigate to your home folder e.g. /home/account-name</p><p data-block-key=\\\\\\"9t1dk\\\\\\">Create a directory to hold your environment variables. I called mine .env-settings then I added another directory inside it called www.domain.com</p><p data-block-key=\\\\\\"7f6j1\\\\\\">So the path to the environment variables directory is /home/account-name/.env-settings/www.domain.com</p><h2 data-block-key=\\\\\\"bo6e0\\\\\\">Create a virtual environment</h2><p data-block-key=\\\\\\"8eive\\\\\\">Open the Consoles tab and open a new bash console.</p><p data-block-key=\\\\\\"8l0p\\\\\\">You should create a virtual environment for each webapp. PA makes this straight forward. <a href=\\\\\\"https://help.pythonanywhere.com/pages/Virtualenvs/\\\\\\">PA Help</a></p><p data-block-key=\\\\\\"a9p8d\\\\\\">Use mkvirtualenv to create a new virtual environment for this site. I named mine www.domain.com.venv and I&#x27;m using Python 3.10</p><p data-block-key=\\\\\\"6aj7\\\\\\">mkvirtualenv www.domain.com.venv --python=/usr/bin/python3.10</p><p data-block-key=\\\\\\"cejq\\\\\\">To confirm the virtual environment has been created run:</p><p data-block-key=\\\\\\"ec5so\\\\\\">ls ~/.virtualenvs/www.domain.com.venv/<br/>&gt; bin lib pyvenv.cfg</p><h3 data-block-key=\\\\\\"9lk7f\\\\\\">Load environment variables when activating the virtual env</h3><p data-block-key=\\\\\\"c5u9v\\\\\\">You can manually activate the virtual environment by running:</p><p data-block-key=\\\\\\"5oubq\\\\\\">workon www.domain.com.venv</p><p data-block-key=\\\\\\"933k9\\\\\\">Create a .env file in the environment variables directory created earlier:</p><p data-block-key=\\\\\\"7uf5l\\\\\\">touch ~/.env-settings/www.domain.com/.env</p><p data-block-key=\\\\\\"7b1gl\\\\\\">Later we&#x27;ll add some env vars to this file...</p><p data-block-key=\\\\\\"1jkt7\\\\\\">When you activate the virtual environment, environment variables can be loaded for you. You can set this up by running:</p><p data-block-key=\\\\\\"c786a\\\\\\">echo &quot;set -a; source ~/.env-settings/www.domain.com/.env; set +a&quot; &gt;&gt; ~/.virtualenvs/www.domain.com.venv/bin/postactivate</p><p data-block-key=\\\\\\"abt00\\\\\\"><a href=\\\\\\"https://help.pythonanywhere.com/pages/environment-variables-for-web-apps/#for-bash-consoles-load-your-env-file-in-your-virtualenv-postactivate-script\\\\\\">PA help</a> about environment variables</p><h2 data-block-key=\\\\\\"4sfek\\\\\\">Set up a git bare repo</h2><p data-block-key=\\\\\\"4vcak\\\\\\">A bare repo is the remote I&#x27;ll push my main branch to to start a deployment. <a href=\\\\\\"https://blog.pythonanywhere.com/87/\\\\\\">A PA Blog Post</a> about bare repos.</p><p data-block-key=\\\\\\"5otnh\\\\\\">Open the Consoles tab open a new console ro use the console from the previous step.</p><p data-block-key=\\\\\\"7ueo6\\\\\\">To initialize the bare repo for a webapp switch to the bare-repos directory:</p><p data-block-key=\\\\\\"1gd9h\\\\\\">cd ~/bare-repos/www.domain.com.git/</p><p data-block-key=\\\\\\"dgi43\\\\\\">and run:</p><p data-block-key=\\\\\\"11lkt\\\\\\">git init --bare</p><p data-block-key=\\\\\\"cargk\\\\\\"><a href=\\\\\\"https://stackoverflow.com/questions/7632454/how-do-you-use-git-bare-init-repository\\\\\\">Stack Overflow</a> How do you use &quot;git --bare init&quot; repository?</p><h3 data-block-key=\\\\\\"3lros\\\\\\">Create a post-receive hook</h3><p data-block-key=\\\\\\"8v5ek\\\\\\">While still in the bare-repos directory for your site:</p><p data-block-key=\\\\\\"49qve\\\\\\">Create a post-receive hook file:</p><p data-block-key=\\\\\\"1gfu5\\\\\\">touch hooks/post-receive</p><p data-block-key=\\\\\\"1313a\\\\\\">then I opened the file in nano (you could open if from the Files tab):</p><p data-block-key=\\\\\\"fdb4e\\\\\\">nano hooks/post-receive</p><p data-block-key=\\\\\\"8cf22\\\\\\">and added the following content (substitute account-name with your own account name and www.domain.com with your own domain name):</p><p data-block-key=\\\\\\"ehsid\\\\\\">#!/bin/bash<br/><br/>while read oldrev newrev ref<br/>do<br/>if [[ $ref =~ .*/main ]];<br/>then<br/>    # only the main branch can be deployed<br/><br/>    # ensure the site directory exists<br/>    mkdir -p /var/www/sites/www.domain.com<br/>    <br/>    # checkout the latest version of the site<br/>    git --work-tree=/var/www/sites/www.domain.com --git-dir=/home/account-name/bare-repos/www.domain.com.git checkout -f main <br/>    <br/>    # there will be more content added here later ...    <br/>else<br/>    echo &quot;Ref $ref successfully received.  Doing nothing: only the main branch may be deployed on this server.&quot;<br/>fi<br/>done</p><h3 data-block-key=\\\\\\"f6kpd\\\\\\">Make the post-receive hook executable</h3><p data-block-key=\\\\\\"e5j24\\\\\\">In the console run:</p><p data-block-key=\\\\\\"cd7nr\\\\\\">chmod +x ~/bare-repos/www.domain.com.git/hooks/post-receive</p><h2 data-block-key=\\\\\\"2i0i5\\\\\\">Create a Mysql database on PythonAnywhere</h2><p data-block-key=\\\\\\"ehvrd\\\\\\">On the Databases tab create a new database. I called mine www_domain_com_db. PythonAnywhere prepends your account name to the database name followed by a $. So my database name is account-name$www_domain_com_db</p><p data-block-key=\\\\\\"1edii\\\\\\">As suggested it&#x27;s best to add a new password for your database if you&#x27;ve not already done so.</p><h2 data-block-key=\\\\\\"a2tju\\\\\\">Add env vars on PythonAnywhere</h2><p data-block-key=\\\\\\"mlkj\\\\\\">Earlier on I created a .env file at ~/.env-settings/www.domain.com/.env</p><p data-block-key=\\\\\\"ft2rs\\\\\\">Open the file, you can do this from the Files tab and add the following content, substituting the values for your own:</p><p data-block-key=\\\\\\"14li0\\\\\\">MYSQL_DATABASE=&#x27;account-name$www_domain_com_db&#x27;<br/>MYSQL_USER=&#x27;account-name&#x27; # Username<br/>MYSQL_PASSWORD=&#x27;the-password-just-created&#x27;<br/>MYSQL_HOST=&#x27;get-this-from-the-databases-tab&#x27; # Database host address<br/>MYSQL_PORT=&#x27;3306&#x27;</p><p data-block-key=\\\\\\"eelf0\\\\\\">While I am editing this file, although not Database related the following can be added.</p><p data-block-key=\\\\\\"5g49h\\\\\\">WAGTAIL_SITE_NAME=&#x27;add-your-sites-name&#x27;<br/>BASE_URL=&#x27;http://www.domain.com&#x27;<br/>DJANGO_SECRET_KEY=&#x27;add-a-good-secret-key&#x27;<br/>DJANGO_ALLOWED_HOSTS=&#x27;www.domain.com&#x27;</p><p data-block-key=\\\\\\"ei9ul\\\\\\">Save the file.</p><p data-block-key=\\\\\\"97kse\\\\\\">These values will be picked up when the webapp is first run and also when activating a virtual environment.</p>\\", \\"id\\": \\"5e38f96d-2a52-48c8-93fb-335483612c86\\"}]", "live": false, "path": "0001000100010001000H", "slug": "set-up-a-webapp-and-bare-repo-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Set up a webapp and bare-repo on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/set-up-a-webapp-and-bare-repo-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up a webapp and bare-repo on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "479451c6-31ad-4b5c-b23a-c46ca26c56ef", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	23	1	28	1	Set up a webapp and bare-repo on PythonAnywhere
35	f	2023-08-28 16:34:54.627+00	{"pk": 17, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"0kcgu\\\\\\">Earlier I created a post-receive hook: <i>~/bare-repos/nickmoreton.co.uk.git/hooks/post-receive</i> open the file and add the following extra steps.</p>\\", \\"id\\": \\"109d88f9-3861-4d16-a7f7-8d304204eca5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"Replace:\\\\r\\\\n# there will be more content added here later ... with the following, make adjustments for your own paths file names:\\\\r\\\\n\\\\r\\\\n# switch to site directory\\\\r\\\\ncd /var/www/sites/nickmoreton.co.uk\\\\r\\\\nsource /usr/local/bin/virtualenvwrapper.sh\\\\r\\\\n# and activate the virtual environment\\\\r\\\\nworkon nickmoreton.co.uk_venv\\\\r\\\\n\\\\r\\\\n# install/update requirements\\\\r\\\\necho \\\\\\"INSTALL REQUIREMENTS\\\\\\"\\\\r\\\\npip install -r requirements.txt\\\\r\\\\n\\\\r\\\\n# run migrations\\\\r\\\\necho \\\\\\"RUN MIGRATIONS\\\\\\"\\\\r\\\\npython manage.py migrate --no-input\\\\r\\\\n\\\\r\\\\n# add/update static files\\\\r\\\\necho \\\\\\"COLLECT STATIC FILES\\\\\\"\\\\r\\\\npython manage.py collectstatic --no-input\\\\r\\\\n\\\\r\\\\n# reload the web app by touching the wsgi file\\\\r\\\\necho \\\\\\"RELOAD THE WEB APP\\\\\\"\\\\r\\\\ntouch /var/www/www_nickmoreton_co_uk_wsgi.py\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"f19efff2-7d52-4696-aa92-6faabb78721b\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"020zy\\\\\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\\\\\"580ea\\\\\\">The last command touch will restart the webapp so that any changes are loaded.</p>\\", \\"id\\": \\"84a7d750-6075-4deb-929e-85978530c94a\\"}]", "live": true, "path": "0001000100010001000B", "slug": "add-further-steps-to-the-post-recieve-hook", "depth": 5, "owner": 1, "title": "Add further steps to the post-recieve hook", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-steps-to-the-post-recieve-hook/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add further steps to the post-recieve hook", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "66a67fa5-2dc7-4dd1-83a9-8370b10e70d9", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	17	1	28	1	Add further steps to the post-recieve hook
36	f	2023-08-28 16:36:31.833+00	{"pk": 18, "body": "[{\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"2tk5g\\\\\\">When a new webapp is created a WSGI file is automatically created with some example content. You can ignore and delete the content and add the following modified version of the example # +++++++++++ DJANGO +++++++++++ section.</p>\\", \\"id\\": \\"99da8fd4-f766-406e-b07f-b8fa20a8c714\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"q1wsl\\\\\\">Update the paths and file names as appropriate for your own site.</p>\\", \\"id\\": \\"440cc565-6276-4589-ae78-b98a35e80c72\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import os\\\\r\\\\nimport sys\\\\r\\\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\\\r\\\\n\\\\r\\\\n# use your own site path\\\\r\\\\npath = '/var/www/sites/nickmoreton.co.uk'\\\\r\\\\nif path not in sys.path:\\\\r\\\\n    sys.path.append(path)\\\\r\\\\n\\\\r\\\\n# use your own path for the env settings\\\\r\\\\nenv_folder = os.path.expanduser('~/.env-settings/nickmoreton.co.uk')\\\\r\\\\nload_dotenv(os.path.join(env_folder, '.env'))\\\\r\\\\n\\\\r\\\\n# assumes your webapp is called webapp, substitute as appropriate\\\\r\\\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\\\r\\\\n\\\\r\\\\nfrom django.core.wsgi import get_wsgi_application\\\\r\\\\napplication = get_wsgi_application()\\", \\"language\\": \\"python\\"}, \\"id\\": \\"984a7e21-e20e-4a22-98c4-76be6e364e37\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6idot\\\\\\">Save the file.</p>\\", \\"id\\": \\"7a2f01db-7790-4d2e-8aac-ad293a867a13\\"}]", "live": true, "path": "0001000100010001000C", "slug": "update-the-wsg-file-on-pythonanywhere", "depth": 5, "owner": 1, "title": "Update the WSG file on PythonAnywhere", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/update-the-wsg-file-on-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Update the WSG file on PythonAnywhere", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "0cdba657-2c5e-4ccc-9886-dd14b23d7361", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	18	1	28	1	Update the WSG file on PythonAnywhere
37	f	2023-08-28 16:40:20.141+00	{"pk": 19, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bmjc1\\\\\\">First <i>git add</i> the file changes made so far and git commit them.</p>\\", \\"id\\": \\"ee76c81a-1a39-4508-a687-4d9a5c9a1e40\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"506s3\\\\\\">For the moment I&#x27;m working directly on my main branch. In the future I&#x27;ll be working on other branches and merging them to main for a deployment.</p>\\", \\"id\\": \\"464947eb-cefa-4db7-a12f-dea377c45e48\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"35nep\\\\\\">You should push to the origin repo first e.g.</p>\\", \\"id\\": \\"65fb884c-87ec-40c1-8d94-54f13934e056\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git push origin main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"23a6a400-7bb2-4c87-9133-0dd2c6378101\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"djcde\\\\\\">and then push to the production bare-repo to start the deployemnt.</p>\\", \\"id\\": \\"dd859209-04c2-47df-9565-342828a2f272\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git push production main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b38b1bef-c8d5-4ff4-8156-466efd9703d4\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"506s3\\\\\\">If all is well you should see the deployment steps displayed in your console. On the first deployemnt is can take a few minutes to complete. Subsequent deployments may take less time.</p><p data-block-key=\\\\\\"6r04n\\\\\\">Although we use the touch command on the WSGI file to reload the webapp it can take a minute or so to actually run on PythonAnywhere.</p>\\", \\"id\\": \\"779fbcd0-6969-4439-a2ee-3f35fb4a3b04\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4rats\\\\\\">If you now visit your webapp url it should be live.</p><h2 data-block-key=\\\\\\"e12lb\\\\\\">Create a superuser on PythonAnywhere</h2><p data-block-key=\\\\\\"bnock\\\\\\">Open the Web tabs on PythonAnywhere.</p><p data-block-key=\\\\\\"c2qg7\\\\\\">Under the Virtualenv section click Start a console in this virtualenv to open a new console in the sites virtual env. (Your environment variables are loaded automatically for you because the virtual env will be activated)</p><p data-block-key=\\\\\\"33ajp\\\\\\">And run:</p>\\", \\"id\\": \\"013ff546-1a34-45b8-8085-945858c1547e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1e8b993e-db69-40d9-8992-d6fba71e8aea\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d7m0j\\\\\\">If you now visit webapp and login at /admin you should be able to test out the default Wagtail CMS</p>\\", \\"id\\": \\"ca84ccfd-63ae-4d43-9740-fda54c56a1d8\\"}]", "live": true, "path": "0001000100010001000D", "slug": "start-a-deployment", "depth": 5, "owner": 1, "title": "Start a deployment", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/start-a-deployment/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Start a deployment", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "02c749b5-1546-4244-95fe-559b3101783c", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	19	1	28	1	Start a deployment
38	f	2023-08-28 16:42:00.262+00	{"pk": 7, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jcfbx\\\\\\">I&#x27;m using Github for this project.</p><p data-block-key=\\\\\\"163ct\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"v2q5\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin. Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"41fa1bc3-eaf2-499b-94a0-ed392ef94063\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"0xakh\\\\\\"><a id=\\\\\\"7\\\\\\" linktype=\\\\\\"page\\\\\\">Next page</a></p>\\", \\"id\\": \\"cb77132c-25ed-47db-a718-57fdaef55e18\\"}]", "live": true, "path": "00010001000100010001", "slug": "create-a-git-repo-to-store-the-source-code", "depth": 5, "owner": 1, "title": "Create a git repo to store the source code", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-git-repo-to-store-the-source-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Create a git repo to store the source code", "content_type": 28, "live_revision": 7, "show_in_menus": false, "latest_revision": 7, "translation_key": "25afd220-b19c-410e-8d4a-f8219e39a172", "last_published_at": "2023-08-28T15:29:28.836Z", "first_published_at": "2023-08-28T15:29:28.836Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:29:28.710Z"}	\N	7	1	28	1	Create a git repo to store the source code
39	f	2023-08-28 16:42:48.155+00	{"pk": 7, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jcfbx\\\\\\">I&#x27;m using Github for this project.</p><p data-block-key=\\\\\\"163ct\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"v2q5\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin. Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"41fa1bc3-eaf2-499b-94a0-ed392ef94063\\"}]", "live": true, "path": "00010001000100010001", "slug": "create-a-git-repo-to-store-the-source-code", "depth": 5, "owner": 1, "title": "Create a git repo to store the source code", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/create-a-git-repo-to-store-the-source-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Create a git repo to store the source code", "content_type": 28, "live_revision": 38, "show_in_menus": false, "latest_revision": 38, "translation_key": "25afd220-b19c-410e-8d4a-f8219e39a172", "last_published_at": "2023-08-28T16:42:00.369Z", "first_published_at": "2023-08-28T15:29:28.836Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T16:42:00.262Z"}	\N	7	1	28	1	Create a git repo to store the source code
40	f	2023-08-29 12:17:31.273+00	{"pk": 20, "body": "[]", "date": "2023-08-29", "live": false, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": null, "pypi_package_name": "", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	20	1	32	1	Wagtail QR code
58	f	2023-08-30 15:56:55.365+00	{"pk": 24, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b94g3\\\\\\">Deploy hooks (post-receive)</h2><p data-block-key=\\\\\\"2pa8r\\\\\\">Earlier I created a post-receive hook: <b>~/bare-repos/www.domain.com.git/hooks/post-receive</b> open the file (use the files tab to locate it and open it in the editor) and add the following extra steps.</p>\\", \\"id\\": \\"e1793f67-bc91-486d-9b55-b21fb6beae8a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"83i16\\\\\\">Replace: <i># there will be more content added here later ...</i> with the following, make adjustments for your own paths and/or file names:</p>\\", \\"id\\": \\"a863ceb2-0bff-4b90-a62d-2d1865b14a54\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# there will be more content added here later ...\\\\r\\\\n\\\\r\\\\n# Replace the above with ...\\\\r\\\\n\\\\r\\\\n# switch to site directory\\\\r\\\\ncd /var/www/sites/www.domain.com\\\\r\\\\nsource /usr/local/bin/virtualenvwrapper.sh\\\\r\\\\n# and activate the virtual environment\\\\r\\\\nworkon www.domain.com.venv\\\\r\\\\n\\\\r\\\\n# install/update requirements\\\\r\\\\necho \\\\\\"INSTALL REQUIREMENTS\\\\\\"\\\\r\\\\npip install -r requirements.txt\\\\r\\\\n\\\\r\\\\n# run migrations\\\\r\\\\necho \\\\\\"RUN MIGRATIONS\\\\\\"\\\\r\\\\npython manage.py migrate --no-input\\\\r\\\\n\\\\r\\\\n# add/update static files\\\\r\\\\necho \\\\\\"COLLECT STATIC FILES\\\\\\"\\\\r\\\\npython manage.py collectstatic --no-input\\\\r\\\\n\\\\r\\\\n# reload the web app by touching the wsgi file\\\\r\\\\necho \\\\\\"RELOAD THE WEB APP\\\\\\"\\\\r\\\\ntouch /var/www/www_domain_com_wsgi.py\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c558a2ff-1479-4202-a0dc-6d43fec92a54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"504s\\\\\\">These steps will install any new/updated requirements and run the necessary Django commands.</p><p data-block-key=\\\\\\"b4kme\\\\\\">The last command <i>touch</i> will restart the webapp so that any changes are loaded.</p><p data-block-key=\\\\\\"dgabj\\\\\\">Save the file.</p><h2 data-block-key=\\\\\\"8lg96\\\\\\">Update the WSG file on PythonAnywhere</h2><p data-block-key=\\\\\\"4q0re\\\\\\">From the Web tab open the WSGI configuration file for your site.</p><p data-block-key=\\\\\\"oq55\\\\\\"></p>\\", \\"id\\": \\"6d199342-14dc-4e0d-b1c8-dab4587a17c3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"20fe7\\\\\\">When a new webapp is created a WSGI file is automatically created with some example content. You can delete all the content and add the following modified version of the example</p><p data-block-key=\\\\\\"114t2\\\\\\"># +++++++++++ DJANGO +++++++++++  section.</p>\\", \\"id\\": \\"e2737377-2c28-4827-a457-4e0f333aec8d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1vai4\\\\\\">Add this python code to your sites WSGI file, update the paths and file names as appropriate for your own site.</p>\\", \\"id\\": \\"884f3f4d-1d67-4a3d-bec1-2aeff050968d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import os\\\\r\\\\nimport sys\\\\r\\\\nfrom dotenv import load_dotenv # this was installed via requirements.txt\\\\r\\\\n\\\\r\\\\n# use your own site path\\\\r\\\\npath = '/var/www/sites/www.domain.com'\\\\r\\\\nif path not in sys.path:\\\\r\\\\n    sys.path.append(path)\\\\r\\\\n\\\\r\\\\n# use your own path for the env settings\\\\r\\\\nenv_folder = os.path.expanduser('~/.env-settings/www.domain.com')\\\\r\\\\nload_dotenv(os.path.join(env_folder, '.env'))\\\\r\\\\n\\\\r\\\\n# assumes your webapp is called webapp, substitute as appropriate\\\\r\\\\nos.environ['DJANGO_SETTINGS_MODULE'] = 'webapp.settings.production'\\\\r\\\\n\\\\r\\\\nfrom django.core.wsgi import get_wsgi_application\\\\r\\\\napplication = get_wsgi_application()\\", \\"language\\": \\"python\\"}, \\"id\\": \\"95ba0b0c-2d92-4707-987a-6a06b190a797\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"32aqi\\\\\\">Save the file.</p>\\", \\"id\\": \\"ff527db4-6142-4e3a-bb18-3b93a376df6a\\"}]", "live": true, "path": "00010001000100010004", "slug": "add-further-deployment-settings", "depth": 5, "owner": 1, "title": "Add further deployment settings", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/add-further-deployment-settings/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Add further deployment settings", "content_type": 28, "live_revision": 57, "show_in_menus": false, "latest_revision": 57, "translation_key": "942996b8-e776-42fb-bde9-c8b78adeb6c7", "last_published_at": "2023-08-30T15:55:08.696Z", "first_published_at": "2023-08-30T15:55:08.696Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T15:55:08.581Z"}	\N	24	1	28	1	Add further deployment settings
59	f	2023-08-30 16:01:42.873+00	{"pk": 25, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"96tav\\\\\\">First <i>git add</i> the file changes made so far and <i>git commit</i> them.</p><p data-block-key=\\\\\\"4ntv\\\\\\">For the moment I&#x27;m working directly on my main branch. In the future I&#x27;ll be working on other branches and merging them to main for running a deployment.</p><p data-block-key=\\\\\\"7s2cm\\\\\\">You should push to the origin repo first e.g:</p>\\", \\"id\\": \\"6553df6a-8a71-456f-9650-90f5deb7f52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git push origin main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"33190219-a03f-46af-accd-abb1f0a28a9e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"chm1a\\\\\\">Add the new remote to your local repository</h2><p data-block-key=\\\\\\"7d8p9\\\\\\">Substitute account-name with your own account name. My account is in the EU so I need to use <b>ssh.eu.pythonanywhere.com</b></p><p data-block-key=\\\\\\"cj2s5\\\\\\">On your local machine in the root of the project run:</p>\\", \\"id\\": \\"142bd43a-9c6b-4fa6-bff2-b826eae0b9fd\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git remote add production account-name@ssh.eu.pythonanywhere.com:/home/account-name/bare-repos/www.domain.com.git\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5c8ae378-7267-43a8-b478-72a869f0fa6c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"awoeg\\\\\\">I&#x27;m using production as the name of the remote repo. You can use any name you like.</p>\\", \\"id\\": \\"09b56c1d-1fba-4bb2-8a74-964f1edece1c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"cthel\\\\\\">Pushing to the remote repo (will start a deployment)</h2><p data-block-key=\\\\\\"aopj7\\\\\\">I&#x27;m going to push my main branch to the remote repo.</p>\\", \\"id\\": \\"e3885879-2e85-40ff-9562-ebdcf5e6065a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git push production main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"dd480392-0fa7-4277-82c2-6ac2c3e72923\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5d2ng\\\\\\">Earlier on, in the post-receive hook I added a check to ensure only the main branch can be deployed. If you are on another branch and accidentally try to push it to your production remote it will not complete and report the error.</p><ul><li data-block-key=\\\\\\"26qlg\\\\\\">I can see the push has worked because in <i>/var/www/sites/www.domain.com</i> I can see the new files.</li><li data-block-key=\\\\\\"ap08c\\\\\\">The post-receive hook will manage the creation of the webapp directory if it doesn&#x27;t exist and will copy across the current file changes to <i>/var/www/sites/wwww.domain.com</i></li><li data-block-key=\\\\\\"4b2fq\\\\\\">If all is well you should see the deployment steps displayed in your console.</li><li data-block-key=\\\\\\"10d5i\\\\\\">On the first deployment it can take a few minutes to complete. Subsequent deployments usually take less time.</li><li data-block-key=\\\\\\"5ui39\\\\\\">In the post-receive hook, the touch command on the WSGI file will reload the webapp, it can take a minute or so to actually run on PythonAnywhere.</li></ul><p data-block-key=\\\\\\"7ve45\\\\\\">If you now visit your webapp url it should be live.</p><h2 data-block-key=\\\\\\"9g6qe\\\\\\">Create a superuser on PythonAnywhere (optional and only required one time)</h2><p data-block-key=\\\\\\"87laq\\\\\\">Open the Web tab on PythonAnywhere.</p><p data-block-key=\\\\\\"16tsi\\\\\\">Under the Virtualenv section click Start a console in this virtualenv to open a new console in the sites virtual env. (Your environment variables are loaded automatically for you because the virtual env will be activated)</p><p data-block-key=\\\\\\"67f9n\\\\\\">And run:</p>\\", \\"id\\": \\"119f432b-c1c6-401a-9a89-adc704a3a604\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b388a1b7-f8e0-40a2-bb80-fc30bbbd0288\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1lfn3\\\\\\">If you now visit webapp and login at /admin you should be able to test out the default Wagtail CMS</p>\\", \\"id\\": \\"ffa9ea45-2909-4bff-9b76-0acde24a5775\\"}]", "live": true, "path": "0001000100010001000J", "slug": "starting-a-deployment", "depth": 5, "owner": 1, "title": "Starting a deployment", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/starting-a-deployment/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Starting a deployment", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "36bd0931-4989-43d1-8f51-fce985030f23", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	25	1	28	1	Starting a deployment
60	f	2023-08-30 16:07:22.099+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><p data-block-key=\\\\\\"5ib0m\\\\\\">The code here is the complete source code after following the steps below.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"auq34\\\\\\">Source code is available at: <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid</a></p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 47, "show_in_menus": false, "latest_revision": 47, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T14:59:45.130Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T14:59:44.959Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
61	f	2023-08-30 16:09:29.416+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 60, "show_in_menus": false, "latest_revision": 60, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:07:22.237Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:07:22.099Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
62	f	2023-08-30 16:12:05.025+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\">Part 2 - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 61, "show_in_menus": false, "latest_revision": 61, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:09:29.570Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:09:29.416Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
63	f	2023-08-30 16:12:32.457+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\">Part 2 - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere (part 1)", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 62, "show_in_menus": false, "latest_revision": 62, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:12:05.153Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:12:05.025Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere (part 1)
64	f	2023-08-30 16:13:13.801+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\">Part 2 - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere (part 1)", "content_type": 30, "live_revision": 63, "show_in_menus": false, "latest_revision": 63, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:12:32.597Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:12:32.457Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
65	f	2023-08-30 16:16:25.429+00	{"pk": 26, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}]", "date": "2023-08-30", "live": true, "path": "0001000100010002", "slug": "webpack-to-compile-styles-and-javascript", "depth": 4, "owner": 1, "title": "Webpack to compile styles and javascript", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Webpack to compile styles and javascript", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	26	1	30	1	Webpack to compile styles and javascript
66	f	2023-08-30 16:16:56.165+00	{"pk": 26, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}]", "date": "2023-08-30", "live": true, "path": "0001000100010002", "slug": "webpack-to-compile-styles-and-javascript", "depth": 4, "owner": 1, "title": "Webpack to compile styles and javascript", "locale": 1, "locked": false, "excerpt": "Setting up Webpack to compile styles and scripts ready for production.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Webpack to compile styles and javascript", "content_type": 30, "live_revision": 65, "show_in_menus": false, "latest_revision": 65, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": "2023-08-30T16:16:25.552Z", "first_published_at": "2023-08-30T16:16:25.552Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:16:25.429Z"}	\N	26	1	30	1	Webpack to compile styles and javascript
67	f	2023-08-30 16:17:49.229+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\"><a id=\\\\\\"26\\\\\\" linktype=\\\\\\"page\\\\\\">Part 2</a> - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-08-28", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 64, "show_in_menus": false, "latest_revision": 64, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:13:13.975Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:13:13.801Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
68	f	2023-08-30 16:19:36.585+00	{"pk": 26, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 2, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"3a3994ae-acca-4c56-afe7-7389ae79a34a\\"}]", "date": "2023-08-30", "live": true, "path": "0001000100010002", "slug": "webpack-to-compile-styles-and-javascript", "depth": 4, "owner": 1, "title": "Webpack to compile styles and javascript", "locale": 1, "locked": false, "excerpt": "Setting up Webpack to compile styles and scripts ready for production.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Webpack to compile styles and javascript", "content_type": 30, "live_revision": 66, "show_in_menus": false, "latest_revision": 66, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": "2023-08-30T16:16:56.320Z", "first_published_at": "2023-08-30T16:16:25.552Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:16:56.165Z"}	\N	26	1	30	1	Webpack to compile styles and javascript
69	f	2023-08-30 16:20:39.217+00	{"pk": 26, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Part 2 of Deploy Wagtail CMS to PythonAnywhere\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"dafc466a-f9ef-4897-8682-0658c1f3c763\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 2, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"3a3994ae-acca-4c56-afe7-7389ae79a34a\\"}]", "date": "2023-08-30", "live": true, "path": "0001000100010002", "slug": "webpack-to-compile-styles-and-javascript", "depth": 4, "owner": 1, "title": "Webpack to compile styles and javascript", "locale": 1, "locked": false, "excerpt": "Setting up Webpack to compile styles and scripts ready for production.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Webpack to compile styles and javascript", "content_type": 30, "live_revision": 68, "show_in_menus": false, "latest_revision": 68, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": "2023-08-30T16:19:36.720Z", "first_published_at": "2023-08-30T16:16:25.552Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:19:36.585Z"}	\N	26	1	30	1	Webpack to compile styles and javascript
70	f	2023-08-30 16:36:11.488+00	{"pk": 27, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"t9ypn\\\\\\">This is a minimal setup for compiling client side code with Webpack.</p><p data-block-key=\\\\\\"61u09\\\\\\">It will compile all files in client/styles css, client/scripts javascript and output them to webapp/static as bundle.css and bundle.js.</p><h3 data-block-key=\\\\\\"de590\\\\\\">Setup node and NPM</h3><p data-block-key=\\\\\\"5rn05\\\\\\">First lets make sure the node version used will always be the intended version 18.</p><p data-block-key=\\\\\\"e2ucd\\\\\\">In the root of your project run:</p>\\", \\"id\\": \\"003de25f-c641-44b9-81a8-f80bcb809a81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo 18 > .nvmrc\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"782daa03-8a42-4b7f-bdfa-b511f5b543aa\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fu62r\\\\\\">Install NVM (node version manager)</h3><p data-block-key=\\\\\\"b2ecu\\\\\\">Instructions can be viewed at <a href=\\\\\\"https://github.com/nvm-sh/nvm\\\\\\">https://github.com/nvm-sh/nvm</a> where you can choose your preferred installation method. I used brew on MacOS.</p>\\", \\"id\\": \\"d5358e8f-6883-4406-ac0c-fd86a13365de\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"brew install nvm\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3b916dbf-eb10-4682-9a7f-cb526b126301\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"17sgd\\\\\\">Use node version 18</h3>\\", \\"id\\": \\"05fec8d6-735b-4820-ad96-dd653df623d3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm use\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"fb6e3072-3750-4d09-bdb2-138ffaa8b59f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1fpeb\\\\\\">If you don&#x27;t have the correct version of node installed a message will tell you that and you can install it with:</p>\\", \\"id\\": \\"686ba7f7-a270-49e3-9308-4ffc3f178a0c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm install 18\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48827bdb-d1c5-4ba0-86d0-74e114736727\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"adhk4\\\\\\">Initialize NPM</h3>\\", \\"id\\": \\"6c3820db-4af6-445f-871d-4471e8f6a633\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm init\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c38f8160-33b4-4818-9ceb-208bd12b1bf3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6c4so\\\\\\">This will create a package.json file in the root of your project.</p><p data-block-key=\\\\\\"ftj06\\\\\\">Then install the required packages by running:</p>\\", \\"id\\": \\"8679cc93-80de-4b7a-ae54-e1cc674d65c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm install --save-dev \\\\\\\\\\\\r\\\\n    @babel/preset-env \\\\\\\\\\\\r\\\\n    babel-loader \\\\\\\\\\\\r\\\\n    browser-sync-webpack-plugin \\\\\\\\\\\\r\\\\n    css-loader \\\\\\\\\\\\r\\\\n    mini-css-extract-plugin \\\\\\\\\\\\r\\\\n    sass \\\\\\\\\\\\r\\\\n    sass-loader \\\\\\\\\\\\r\\\\n    webpack \\\\\\\\\\\\r\\\\n    webpack-cli \\\\\\\\\\\\r\\\\n    webpack-dev-server\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4e3bcc3a-0bfb-4456-9794-965b0750ae93\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eek32\\\\\\">This will have created a node_modules directory in the root of your project. It&#x27;s not a folder we need to commit to the repository so add it to the .gitignore file.</p>\\", \\"id\\": \\"588e7034-759a-45ec-8364-200ef86d7337\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"node_modules\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"6e471733-f010-4cb5-a229-5adc1cf18c22\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7d22s\\\\\\">Add Webpack configuration</h3><p data-block-key=\\\\\\"1i20\\\\\\">You can read more about Webpack at <a href=\\\\\\"https://webpack.js.org/\\\\\\">https://webpack.js.org/</a>.</p><p data-block-key=\\\\\\"8fu4v\\\\\\">Create a file <b>webpack.config.js</b> in the root of your project with the following content:</p><p data-block-key=\\\\\\"ct7nq\\\\\\"></p>\\", \\"id\\": \\"56c121c4-dae3-4987-8cbb-50dd838d8036\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"const path = require(\\\\\\"path\\\\\\");\\\\r\\\\nconst MiniCssExtractPlugin = require(\\\\\\"mini-css-extract-plugin\\\\\\");\\\\r\\\\nconst BrowserSyncPlugin = require(\\\\\\"browser-sync-webpack-plugin\\\\\\");\\\\r\\\\n\\\\r\\\\nmodule.exports = {\\\\r\\\\n  mode: \\\\\\"production\\\\\\", // or \\\\\\"development\\\\\\"\\\\r\\\\n  entry: path.resolve(__dirname, \\\\\\"./client/scripts/index.js\\\\\\"),\\\\r\\\\n  output: {\\\\r\\\\n    path: path.resolve(__dirname, \\\\\\"./webapp/static/webapp\\\\\\"),\\\\r\\\\n    filename: \\\\\\"bundle.js\\\\\\",\\\\r\\\\n  },\\\\r\\\\n  module: {\\\\r\\\\n    rules: [\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.js$/,\\\\r\\\\n        exclude: /node_modules/,\\\\r\\\\n        use: {\\\\r\\\\n          loader: \\\\\\"babel-loader\\\\\\",\\\\r\\\\n          options: {\\\\r\\\\n            presets: [\\\\\\"@babel/preset-env\\\\\\"],\\\\r\\\\n          },\\\\r\\\\n        },\\\\r\\\\n      },\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.scss$/,\\\\r\\\\n        use: [MiniCssExtractPlugin.loader, \\\\\\"css-loader\\\\\\", \\\\\\"sass-loader\\\\\\"],\\\\r\\\\n      },\\\\r\\\\n    ],\\\\r\\\\n  },\\\\r\\\\n  plugins: [\\\\r\\\\n    new MiniCssExtractPlugin({\\\\r\\\\n      filename: \\\\\\"bundle.css\\\\\\",\\\\r\\\\n    }),\\\\r\\\\n    new BrowserSyncPlugin({\\\\r\\\\n      host: \\\\\\"localhost\\\\\\",\\\\r\\\\n      port: 3000,\\\\r\\\\n      proxy: \\\\\\"http://127.0.0.1:8000/\\\\\\", // the port your django app will be running on in development\\\\r\\\\n      files: [\\\\\\"./**/*.html\\\\\\"],\\\\r\\\\n    }),\\\\r\\\\n  ],\\\\r\\\\n};\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"673253dd-689e-43b0-b5a9-83f3d5347004\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"6g6su\\\\\\">Add client side code</h3><p data-block-key=\\\\\\"9d8ph\\\\\\">Create a directory called client in the root of your project with the following folders:</p>\\", \\"id\\": \\"86b008de-4bd0-4d08-89a6-b64f777e5b00\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkdir -p client/{scripts,styles}\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"2abf49b5-e2db-457c-973e-a55a468083ff\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"cu6n0\\\\\\">Add styles</h3><p data-block-key=\\\\\\"cjtt8\\\\\\">Create a file client/styles/index.scss with the following content:</p><p data-block-key=\\\\\\"3v417\\\\\\"></p>\\", \\"id\\": \\"7492330e-1535-4388-bd54-9c7bf67598ec\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"body {\\\\r\\\\n  background-color: grey;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"2f319dd2-1d59-4e70-873c-1d5d39426968\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ab6ak\\\\\\"><b>Add javascript</b></p><p data-block-key=\\\\\\"3fv6r\\\\\\">Create a file client/scripts/index.js with the following content:</p>\\", \\"id\\": \\"edfa24ef-dcd2-424c-9f2c-955b3110ca0a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"console.log(\\\\\\"Awesome Wagtail !\\\\\\");\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"49a7187b-d74d-4156-9547-1a3a61e7d7fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b6er7\\\\\\">Update the scripts section in the package.json file to:</p>\\", \\"id\\": \\"7a2fbbec-c893-4e17-a7bf-657668b74bdf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"\\\\\\"scripts\\\\\\": {\\\\r\\\\n  \\\\\\"build\\\\\\": \\\\\\"webpack --mode production\\\\\\",\\\\r\\\\n  \\\\\\"start\\\\\\": \\\\\\"webpack --mode development --watch\\\\\\"\\\\r\\\\n},\\", \\"language\\": \\"json\\"}, \\"id\\": \\"8ddae73b-9420-4c20-a445-a333407bad37\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fqig2\\\\\\">Run Webpack</h3><p data-block-key=\\\\\\"1tj01\\\\\\">To compile the client side code during development run:</p>\\", \\"id\\": \\"099e899a-5c8c-485f-8a97-9e6a22d454d9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm start # which will compile and watch for changes\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c7abec35-6fbc-4cb7-bd3b-672ced66b0b9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2dqoj\\\\\\">To compile the client side code for production run:</p>\\", \\"id\\": \\"6e9676a6-c160-4808-a2fc-c474cc9aba74\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm run build # which will compile and minify the code\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1c1adac8-8f44-46ee-bd73-f2d74889bfbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9sbu\\\\\\">Running either of these commands will create a webapp/static/webapp directory containing bundle.css and bundle.js.</p><h2 data-block-key=\\\\\\"h0ft\\\\\\">Update the base template to use the compiled files</h2><p data-block-key=\\\\\\"81rq1\\\\\\">Open the webapp/templates/base.html file and update the head section to include the compiled css and javascript files:</p>\\", \\"id\\": \\"1e26b465-7350-45b3-a9c9-ad93decfea76\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- change -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'css/webapp.css' %}\\\\\\">\\\\r\\\\n<!-- to -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'webapp/bundle.css' %}\\\\\\">\\\\r\\\\n<!-- change -->\\\\r\\\\n<script src=\\\\\\"{% static 'js/webapp.js' %}\\\\\\"></script>\\\\r\\\\n<!-- to -->\\\\r\\\\n<script src=\\\\\\"{% static 'webapp/bundle.js' %}\\\\\\"></script>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"7c35342c-b3c2-40ab-8f3c-9ca1572f3652\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"11pot\\\\\\">You can delete the webapp/static/css and webapp/static/js directories and files as they are no longer needed.</p><h2 data-block-key=\\\\\\"3vbt0\\\\\\">Run the development server</h2><p data-block-key=\\\\\\"2bde9\\\\\\">In a new console run the development server (after activating the virtualenv):</p>\\", \\"id\\": \\"33d2e1fb-e69c-453f-81d8-97fd0481dcd8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"682cab45-26a4-464b-8621-7e8d3f07b32b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"da1c6\\\\\\">As long as you are running the <b>npm start</b> command in the other console...</p><p data-block-key=\\\\\\"85rb8\\\\\\">Open your browser at <a href=\\\\\\"http://localhost:3000/\\\\\\">http://localhost:3000</a> and you should see the home page with a grey background and a message in the console.</p><p data-block-key=\\\\\\"2afmb\\\\\\">Try changing the background color in client/styles/index.scss and you should see the changes in the browser without having to refresh the page.</p><h2 data-block-key=\\\\\\"3pv64\\\\\\">\\\\ud83d\\\\ude1c Just for fun</h2><p data-block-key=\\\\\\"5g6tj\\\\\\">Create a file client/scripts/logo.js with the following content:</p>\\", \\"id\\": \\"15a8d67b-7b24-4c15-8043-ccc15717ce89\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Logo {\\\\r\\\\n  constructor() {\\\\r\\\\n        this.logo = document.getElementsByClassName('logo')[0];\\\\r\\\\n        this.header = document.getElementsByClassName('header')[0];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    init() {\\\\r\\\\n      setTimeout(() => {\\\\r\\\\n        this.logo.classList.add('logo--fade-in');\\\\r\\\\n            this.header.classList.add('header--slope');\\\\r\\\\n        }, 1000);\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nmodule.exports = Logo;\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"31251878-15de-46ec-8e89-2f61ca840af4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6i44k\\\\\\">Update client/scripts/index.js to the following:</p>\\", \\"id\\": \\"2fb946ee-fc33-4626-ad72-fd0e92ace6c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import \\\\\\"../styles/index.scss\\\\\\";\\\\r\\\\nimport Logo from \\\\\\"./logo.js\\\\\\";\\\\r\\\\n\\\\r\\\\nconst logo = new Logo();\\\\r\\\\nlogo.init();\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"533b0532-4437-4842-8146-23f3204c1528\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bli3g\\\\\\">Create a file client/styles/_vars.scss with the following content:</p>\\", \\"id\\": \\"3fb72dab-e272-4990-8756-ddce38ad6bd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"$background-color: #43b1b0;\\\\r\\\\n$foreground-color: #fff;\\", \\"language\\": \\"css\\"}, \\"id\\": \\"daac85a5-de53-48cb-91b7-1d1cb417de05\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d5cs4\\\\\\">Alter the client/styles/index.scss file to the following:</p>\\", \\"id\\": \\"ae0bdae5-b932-49bb-a706-1a2fd648ff97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"@import \\\\\\"./vars\\\\\\";\\\\r\\\\n\\\\r\\\\nbody {\\\\r\\\\n  background-color: $background-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nh2, a {\\\\r\\\\n  color: $foreground-color !important;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nsvg .egg {\\\\r\\\\n  fill: $foreground-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.logo--fade-in {\\\\r\\\\n  animation: fade-in 1s ease-out;\\\\r\\\\n  animation-fill-mode: forwards;\\\\r\\\\n  svg g {\\\\r\\\\n    fill: white;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes fade-in {\\\\r\\\\n  0% {\\\\r\\\\n    opacity: 0.2;\\\\r\\\\n    transform: scale(1);\\\\r\\\\n  }\\\\r\\\\n  75% {\\\\r\\\\n    opacity: 0.8;\\\\r\\\\n    transform: scale(1.8) translateX(10%);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    opacity: 1;\\\\r\\\\n    transform: scale(1.4) translateX(0) translateY(20px) rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.header--slope {\\\\r\\\\n  animation: slope 1s ease-in-out;\\\\r\\\\n  animation-fill-mode: forwards;  \\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes slope {\\\\r\\\\n  0% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  90% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    transform: rotate(-2deg);\\\\r\\\\n  }\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"0485e308-3d73-4b43-b450-c4ffd494a112\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eon8u\\\\\\">With nom start still running: If you view the Wagtail start page (home) it&#x27;s going to look a little different.</p>\\", \\"id\\": \\"94be5fb4-4f60-45f1-af41-22e5f6bddc68\\"}]", "live": true, "path": "00010001000100020001", "slug": "set-up-webpack-and-client-side-code-compilation", "depth": 5, "owner": 1, "title": "Set up Webpack and client side code compilation", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/set-up-webpack-and-client-side-code-compilation/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up Webpack and client side code compilation", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "d8cf4c84-68bb-4faa-961c-6a6e9c760071", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	27	1	28	1	Set up Webpack and client side code compilation
71	f	2023-08-30 16:37:16.342+00	{"pk": 27, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"t9ypn\\\\\\">This is a minimal setup for compiling client side code with Webpack.</p><p data-block-key=\\\\\\"61u09\\\\\\">It will compile all files in client/styles css, client/scripts javascript and output them to webapp/static as bundle.css and bundle.js.</p><h3 data-block-key=\\\\\\"de590\\\\\\">Setup node and NPM</h3><p data-block-key=\\\\\\"5rn05\\\\\\">First lets make sure the node version used will always be the intended version 18.</p><p data-block-key=\\\\\\"e2ucd\\\\\\">In the root of your project run:</p>\\", \\"id\\": \\"003de25f-c641-44b9-81a8-f80bcb809a81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo 18 > .nvmrc\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"782daa03-8a42-4b7f-bdfa-b511f5b543aa\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fu62r\\\\\\">Install NVM (node version manager)</h3><p data-block-key=\\\\\\"b2ecu\\\\\\">Instructions can be viewed at <a href=\\\\\\"https://github.com/nvm-sh/nvm\\\\\\">https://github.com/nvm-sh/nvm</a> where you can choose your preferred installation method. I used brew on MacOS.</p>\\", \\"id\\": \\"d5358e8f-6883-4406-ac0c-fd86a13365de\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"brew install nvm\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3b916dbf-eb10-4682-9a7f-cb526b126301\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"17sgd\\\\\\">Use node version 18</h3>\\", \\"id\\": \\"05fec8d6-735b-4820-ad96-dd653df623d3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm use\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"fb6e3072-3750-4d09-bdb2-138ffaa8b59f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1fpeb\\\\\\">If you don&#x27;t have the correct version of node installed a message will tell you that and you can install it with:</p>\\", \\"id\\": \\"686ba7f7-a270-49e3-9308-4ffc3f178a0c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm install 18\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48827bdb-d1c5-4ba0-86d0-74e114736727\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"adhk4\\\\\\">Initialize NPM</h3>\\", \\"id\\": \\"6c3820db-4af6-445f-871d-4471e8f6a633\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm init\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c38f8160-33b4-4818-9ceb-208bd12b1bf3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6c4so\\\\\\">This will create a package.json file in the root of your project.</p><p data-block-key=\\\\\\"ftj06\\\\\\">Then install the required packages by running:</p>\\", \\"id\\": \\"8679cc93-80de-4b7a-ae54-e1cc674d65c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm install --save-dev \\\\\\\\\\\\r\\\\n    @babel/preset-env \\\\\\\\\\\\r\\\\n    babel-loader \\\\\\\\\\\\r\\\\n    browser-sync-webpack-plugin \\\\\\\\\\\\r\\\\n    css-loader \\\\\\\\\\\\r\\\\n    mini-css-extract-plugin \\\\\\\\\\\\r\\\\n    sass \\\\\\\\\\\\r\\\\n    sass-loader \\\\\\\\\\\\r\\\\n    webpack \\\\\\\\\\\\r\\\\n    webpack-cli \\\\\\\\\\\\r\\\\n    webpack-dev-server\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4e3bcc3a-0bfb-4456-9794-965b0750ae93\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eek32\\\\\\">This will have created a node_modules directory in the root of your project. It&#x27;s not a folder we need to commit to the repository so add it to the .gitignore file.</p>\\", \\"id\\": \\"588e7034-759a-45ec-8364-200ef86d7337\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"node_modules\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"6e471733-f010-4cb5-a229-5adc1cf18c22\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7d22s\\\\\\">Add Webpack configuration</h3><p data-block-key=\\\\\\"1i20\\\\\\">You can read more about Webpack at <a href=\\\\\\"https://webpack.js.org/\\\\\\">https://webpack.js.org/</a>.</p><p data-block-key=\\\\\\"8fu4v\\\\\\">Create a file <b>webpack.config.js</b> in the root of your project with the following content:</p><p data-block-key=\\\\\\"ct7nq\\\\\\"></p>\\", \\"id\\": \\"56c121c4-dae3-4987-8cbb-50dd838d8036\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"const path = require(\\\\\\"path\\\\\\");\\\\r\\\\nconst MiniCssExtractPlugin = require(\\\\\\"mini-css-extract-plugin\\\\\\");\\\\r\\\\nconst BrowserSyncPlugin = require(\\\\\\"browser-sync-webpack-plugin\\\\\\");\\\\r\\\\n\\\\r\\\\nmodule.exports = {\\\\r\\\\n  mode: \\\\\\"production\\\\\\", // or \\\\\\"development\\\\\\"\\\\r\\\\n  entry: path.resolve(__dirname, \\\\\\"./client/scripts/index.js\\\\\\"),\\\\r\\\\n  output: {\\\\r\\\\n    path: path.resolve(__dirname, \\\\\\"./webapp/static/webapp\\\\\\"),\\\\r\\\\n    filename: \\\\\\"bundle.js\\\\\\",\\\\r\\\\n  },\\\\r\\\\n  module: {\\\\r\\\\n    rules: [\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.js$/,\\\\r\\\\n        exclude: /node_modules/,\\\\r\\\\n        use: {\\\\r\\\\n          loader: \\\\\\"babel-loader\\\\\\",\\\\r\\\\n          options: {\\\\r\\\\n            presets: [\\\\\\"@babel/preset-env\\\\\\"],\\\\r\\\\n          },\\\\r\\\\n        },\\\\r\\\\n      },\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.scss$/,\\\\r\\\\n        use: [MiniCssExtractPlugin.loader, \\\\\\"css-loader\\\\\\", \\\\\\"sass-loader\\\\\\"],\\\\r\\\\n      },\\\\r\\\\n    ],\\\\r\\\\n  },\\\\r\\\\n  plugins: [\\\\r\\\\n    new MiniCssExtractPlugin({\\\\r\\\\n      filename: \\\\\\"bundle.css\\\\\\",\\\\r\\\\n    }),\\\\r\\\\n    new BrowserSyncPlugin({\\\\r\\\\n      host: \\\\\\"localhost\\\\\\",\\\\r\\\\n      port: 3000,\\\\r\\\\n      proxy: \\\\\\"http://127.0.0.1:8000/\\\\\\", // the port your django app will be running on in development\\\\r\\\\n      files: [\\\\\\"./**/*.html\\\\\\"],\\\\r\\\\n    }),\\\\r\\\\n  ],\\\\r\\\\n};\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"673253dd-689e-43b0-b5a9-83f3d5347004\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"6g6su\\\\\\">Add client side code</h3><p data-block-key=\\\\\\"9d8ph\\\\\\">Create a directory called client in the root of your project with the following folders:</p>\\", \\"id\\": \\"86b008de-4bd0-4d08-89a6-b64f777e5b00\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkdir -p client/{scripts,styles}\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"2abf49b5-e2db-457c-973e-a55a468083ff\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"cu6n0\\\\\\">Add styles</h3><p data-block-key=\\\\\\"cjtt8\\\\\\">Create a file client/styles/index.scss with the following content:</p><p data-block-key=\\\\\\"3v417\\\\\\"></p>\\", \\"id\\": \\"7492330e-1535-4388-bd54-9c7bf67598ec\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"body {\\\\r\\\\n  background-color: grey;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"2f319dd2-1d59-4e70-873c-1d5d39426968\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ab6ak\\\\\\"><b>Add javascript</b></p><p data-block-key=\\\\\\"3fv6r\\\\\\">Create a file client/scripts/index.js with the following content:</p>\\", \\"id\\": \\"edfa24ef-dcd2-424c-9f2c-955b3110ca0a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"console.log(\\\\\\"Awesome Wagtail !\\\\\\");\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"49a7187b-d74d-4156-9547-1a3a61e7d7fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b6er7\\\\\\">Update the scripts section in the package.json file to:</p>\\", \\"id\\": \\"7a2fbbec-c893-4e17-a7bf-657668b74bdf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"\\\\\\"scripts\\\\\\": {\\\\r\\\\n  \\\\\\"build\\\\\\": \\\\\\"webpack --mode production\\\\\\",\\\\r\\\\n  \\\\\\"start\\\\\\": \\\\\\"webpack --mode development --watch\\\\\\"\\\\r\\\\n},\\", \\"language\\": \\"json\\"}, \\"id\\": \\"8ddae73b-9420-4c20-a445-a333407bad37\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fqig2\\\\\\">Run Webpack</h3><p data-block-key=\\\\\\"1tj01\\\\\\">To compile the client side code during development run:</p>\\", \\"id\\": \\"099e899a-5c8c-485f-8a97-9e6a22d454d9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm start # which will compile and watch for changes\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c7abec35-6fbc-4cb7-bd3b-672ced66b0b9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2dqoj\\\\\\">To compile the client side code for production run:</p>\\", \\"id\\": \\"6e9676a6-c160-4808-a2fc-c474cc9aba74\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm run build # which will compile and minify the code\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1c1adac8-8f44-46ee-bd73-f2d74889bfbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9sbu\\\\\\">Running either of these commands will create a webapp/static/webapp directory containing bundle.css and bundle.js.</p><h2 data-block-key=\\\\\\"h0ft\\\\\\">Update the base template to use the compiled files</h2><p data-block-key=\\\\\\"81rq1\\\\\\">Open the webapp/templates/base.html file and update the head section to include the compiled css and javascript files:</p>\\", \\"id\\": \\"1e26b465-7350-45b3-a9c9-ad93decfea76\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- change -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'css/webapp.css' %}\\\\\\">\\\\r\\\\n<!-- to -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'webapp/bundle.css' %}\\\\\\">\\\\r\\\\n<!-- change -->\\\\r\\\\n<script src=\\\\\\"{% static 'js/webapp.js' %}\\\\\\"></script>\\\\r\\\\n<!-- to -->\\\\r\\\\n<script src=\\\\\\"{% static 'webapp/bundle.js' %}\\\\\\"></script>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"7c35342c-b3c2-40ab-8f3c-9ca1572f3652\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"11pot\\\\\\">You can delete the webapp/static/css and webapp/static/js directories and files as they are no longer needed.</p><h2 data-block-key=\\\\\\"3vbt0\\\\\\">Run the development server</h2><p data-block-key=\\\\\\"2bde9\\\\\\">In a new console run the development server (after activating the virtualenv):</p>\\", \\"id\\": \\"33d2e1fb-e69c-453f-81d8-97fd0481dcd8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"682cab45-26a4-464b-8621-7e8d3f07b32b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"da1c6\\\\\\">As long as you are running the <b>npm start</b> command in the other console...</p><p data-block-key=\\\\\\"85rb8\\\\\\">Open your browser at <a href=\\\\\\"http://localhost:3000/\\\\\\">http://localhost:3000</a> and you should see the home page with a grey background and a message in the console.</p><p data-block-key=\\\\\\"2afmb\\\\\\">Try changing the background color in client/styles/index.scss and you should see the changes in the browser without having to refresh the page.</p><h2 data-block-key=\\\\\\"3pv64\\\\\\">\\\\ud83d\\\\ude1cJust for fun</h2><p data-block-key=\\\\\\"5g6tj\\\\\\">Create a file client/scripts/logo.js with the following content:</p>\\", \\"id\\": \\"15a8d67b-7b24-4c15-8043-ccc15717ce89\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Logo {\\\\r\\\\n  constructor() {\\\\r\\\\n        this.logo = document.getElementsByClassName('logo')[0];\\\\r\\\\n        this.header = document.getElementsByClassName('header')[0];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    init() {\\\\r\\\\n      setTimeout(() => {\\\\r\\\\n        this.logo.classList.add('logo--fade-in');\\\\r\\\\n            this.header.classList.add('header--slope');\\\\r\\\\n        }, 1000);\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nmodule.exports = Logo;\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"31251878-15de-46ec-8e89-2f61ca840af4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6i44k\\\\\\">Update client/scripts/index.js to the following:</p>\\", \\"id\\": \\"2fb946ee-fc33-4626-ad72-fd0e92ace6c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import \\\\\\"../styles/index.scss\\\\\\";\\\\r\\\\nimport Logo from \\\\\\"./logo.js\\\\\\";\\\\r\\\\n\\\\r\\\\nconst logo = new Logo();\\\\r\\\\nlogo.init();\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"533b0532-4437-4842-8146-23f3204c1528\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bli3g\\\\\\">Create a file client/styles/_vars.scss with the following content:</p>\\", \\"id\\": \\"3fb72dab-e272-4990-8756-ddce38ad6bd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"$background-color: #43b1b0;\\\\r\\\\n$foreground-color: #fff;\\", \\"language\\": \\"css\\"}, \\"id\\": \\"daac85a5-de53-48cb-91b7-1d1cb417de05\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d5cs4\\\\\\">Alter the client/styles/index.scss file to the following:</p>\\", \\"id\\": \\"ae0bdae5-b932-49bb-a706-1a2fd648ff97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"@import \\\\\\"./vars\\\\\\";\\\\r\\\\n\\\\r\\\\nbody {\\\\r\\\\n  background-color: $background-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nh2, a {\\\\r\\\\n  color: $foreground-color !important;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nsvg .egg {\\\\r\\\\n  fill: $foreground-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.logo--fade-in {\\\\r\\\\n  animation: fade-in 1s ease-out;\\\\r\\\\n  animation-fill-mode: forwards;\\\\r\\\\n  svg g {\\\\r\\\\n    fill: white;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes fade-in {\\\\r\\\\n  0% {\\\\r\\\\n    opacity: 0.2;\\\\r\\\\n    transform: scale(1);\\\\r\\\\n  }\\\\r\\\\n  75% {\\\\r\\\\n    opacity: 0.8;\\\\r\\\\n    transform: scale(1.8) translateX(10%);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    opacity: 1;\\\\r\\\\n    transform: scale(1.4) translateX(0) translateY(20px) rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.header--slope {\\\\r\\\\n  animation: slope 1s ease-in-out;\\\\r\\\\n  animation-fill-mode: forwards;  \\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes slope {\\\\r\\\\n  0% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  90% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    transform: rotate(-2deg);\\\\r\\\\n  }\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"0485e308-3d73-4b43-b450-c4ffd494a112\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eon8u\\\\\\">With nom start still running: If you view the Wagtail start page (home) it&#x27;s going to look a little different.</p>\\", \\"id\\": \\"94be5fb4-4f60-45f1-af41-22e5f6bddc68\\"}]", "live": true, "path": "00010001000100020001", "slug": "set-up-webpack-and-client-side-code-compilation", "depth": 5, "owner": 1, "title": "Set up Webpack and client side code compilation", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/set-up-webpack-and-client-side-code-compilation/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up Webpack and client side code compilation", "content_type": 28, "live_revision": 70, "show_in_menus": false, "latest_revision": 70, "translation_key": "d8cf4c84-68bb-4faa-961c-6a6e9c760071", "last_published_at": "2023-08-30T16:36:11.615Z", "first_published_at": "2023-08-30T16:36:11.615Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:36:11.488Z"}	\N	27	1	28	1	Set up Webpack and client side code compilation
72	f	2023-08-30 16:38:10.245+00	{"pk": 27, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"t9ypn\\\\\\">This is a minimal setup for compiling client side code with Webpack.</p><p data-block-key=\\\\\\"61u09\\\\\\">It will compile all files in client/styles css, client/scripts javascript and output them to webapp/static as bundle.css and bundle.js.</p><h3 data-block-key=\\\\\\"de590\\\\\\">Setup node and NPM</h3><p data-block-key=\\\\\\"5rn05\\\\\\">First lets make sure the node version used will always be the intended version 18.</p><p data-block-key=\\\\\\"e2ucd\\\\\\">In the root of your project run:</p>\\", \\"id\\": \\"003de25f-c641-44b9-81a8-f80bcb809a81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo 18 > .nvmrc\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"782daa03-8a42-4b7f-bdfa-b511f5b543aa\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fu62r\\\\\\">Install NVM (node version manager)</h3><p data-block-key=\\\\\\"b2ecu\\\\\\">Instructions can be viewed at <a href=\\\\\\"https://github.com/nvm-sh/nvm\\\\\\">https://github.com/nvm-sh/nvm</a> where you can choose your preferred installation method. I used brew on MacOS.</p>\\", \\"id\\": \\"d5358e8f-6883-4406-ac0c-fd86a13365de\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"brew install nvm\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3b916dbf-eb10-4682-9a7f-cb526b126301\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"17sgd\\\\\\">Use node version 18</h3>\\", \\"id\\": \\"05fec8d6-735b-4820-ad96-dd653df623d3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm use\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"fb6e3072-3750-4d09-bdb2-138ffaa8b59f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1fpeb\\\\\\">If you don&#x27;t have the correct version of node installed a message will tell you that and you can install it with:</p>\\", \\"id\\": \\"686ba7f7-a270-49e3-9308-4ffc3f178a0c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm install 18\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48827bdb-d1c5-4ba0-86d0-74e114736727\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"adhk4\\\\\\">Initialize NPM</h3>\\", \\"id\\": \\"6c3820db-4af6-445f-871d-4471e8f6a633\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm init\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c38f8160-33b4-4818-9ceb-208bd12b1bf3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6c4so\\\\\\">This will create a package.json file in the root of your project.</p><p data-block-key=\\\\\\"ftj06\\\\\\">Then install the required packages by running:</p>\\", \\"id\\": \\"8679cc93-80de-4b7a-ae54-e1cc674d65c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm install --save-dev \\\\\\\\\\\\r\\\\n    @babel/preset-env \\\\\\\\\\\\r\\\\n    babel-loader \\\\\\\\\\\\r\\\\n    browser-sync-webpack-plugin \\\\\\\\\\\\r\\\\n    css-loader \\\\\\\\\\\\r\\\\n    mini-css-extract-plugin \\\\\\\\\\\\r\\\\n    sass \\\\\\\\\\\\r\\\\n    sass-loader \\\\\\\\\\\\r\\\\n    webpack \\\\\\\\\\\\r\\\\n    webpack-cli \\\\\\\\\\\\r\\\\n    webpack-dev-server\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4e3bcc3a-0bfb-4456-9794-965b0750ae93\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eek32\\\\\\">This will have created a node_modules directory in the root of your project. It&#x27;s not a folder we need to commit to the repository so add it to the .gitignore file.</p>\\", \\"id\\": \\"588e7034-759a-45ec-8364-200ef86d7337\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"node_modules\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"6e471733-f010-4cb5-a229-5adc1cf18c22\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7d22s\\\\\\">Add Webpack configuration</h3><p data-block-key=\\\\\\"1i20\\\\\\">You can read more about Webpack at <a href=\\\\\\"https://webpack.js.org/\\\\\\">https://webpack.js.org/</a>.</p><p data-block-key=\\\\\\"8fu4v\\\\\\">Create a file <b>webpack.config.js</b> in the root of your project with the following content:</p><p data-block-key=\\\\\\"ct7nq\\\\\\"></p>\\", \\"id\\": \\"56c121c4-dae3-4987-8cbb-50dd838d8036\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"const path = require(\\\\\\"path\\\\\\");\\\\r\\\\nconst MiniCssExtractPlugin = require(\\\\\\"mini-css-extract-plugin\\\\\\");\\\\r\\\\nconst BrowserSyncPlugin = require(\\\\\\"browser-sync-webpack-plugin\\\\\\");\\\\r\\\\n\\\\r\\\\nmodule.exports = {\\\\r\\\\n  mode: \\\\\\"production\\\\\\", // or \\\\\\"development\\\\\\"\\\\r\\\\n  entry: path.resolve(__dirname, \\\\\\"./client/scripts/index.js\\\\\\"),\\\\r\\\\n  output: {\\\\r\\\\n    path: path.resolve(__dirname, \\\\\\"./webapp/static/webapp\\\\\\"),\\\\r\\\\n    filename: \\\\\\"bundle.js\\\\\\",\\\\r\\\\n  },\\\\r\\\\n  module: {\\\\r\\\\n    rules: [\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.js$/,\\\\r\\\\n        exclude: /node_modules/,\\\\r\\\\n        use: {\\\\r\\\\n          loader: \\\\\\"babel-loader\\\\\\",\\\\r\\\\n          options: {\\\\r\\\\n            presets: [\\\\\\"@babel/preset-env\\\\\\"],\\\\r\\\\n          },\\\\r\\\\n        },\\\\r\\\\n      },\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.scss$/,\\\\r\\\\n        use: [MiniCssExtractPlugin.loader, \\\\\\"css-loader\\\\\\", \\\\\\"sass-loader\\\\\\"],\\\\r\\\\n      },\\\\r\\\\n    ],\\\\r\\\\n  },\\\\r\\\\n  plugins: [\\\\r\\\\n    new MiniCssExtractPlugin({\\\\r\\\\n      filename: \\\\\\"bundle.css\\\\\\",\\\\r\\\\n    }),\\\\r\\\\n    new BrowserSyncPlugin({\\\\r\\\\n      host: \\\\\\"localhost\\\\\\",\\\\r\\\\n      port: 3000,\\\\r\\\\n      proxy: \\\\\\"http://127.0.0.1:8000/\\\\\\", // the port your django app will be running on in development\\\\r\\\\n      files: [\\\\\\"./**/*.html\\\\\\"],\\\\r\\\\n    }),\\\\r\\\\n  ],\\\\r\\\\n};\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"673253dd-689e-43b0-b5a9-83f3d5347004\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"6g6su\\\\\\">Add client side code</h3><p data-block-key=\\\\\\"9d8ph\\\\\\">Create a directory called client in the root of your project with the following folders:</p>\\", \\"id\\": \\"86b008de-4bd0-4d08-89a6-b64f777e5b00\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkdir -p client/{scripts,styles}\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"2abf49b5-e2db-457c-973e-a55a468083ff\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"cu6n0\\\\\\">Add styles</h3><p data-block-key=\\\\\\"cjtt8\\\\\\">Create a file client/styles/index.scss with the following content:</p><p data-block-key=\\\\\\"3v417\\\\\\"></p>\\", \\"id\\": \\"7492330e-1535-4388-bd54-9c7bf67598ec\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"body {\\\\r\\\\n  background-color: grey;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"2f319dd2-1d59-4e70-873c-1d5d39426968\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ab6ak\\\\\\"><b>Add javascript</b></p><p data-block-key=\\\\\\"3fv6r\\\\\\">Create a file client/scripts/index.js with the following content:</p>\\", \\"id\\": \\"edfa24ef-dcd2-424c-9f2c-955b3110ca0a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"console.log(\\\\\\"Awesome Wagtail !\\\\\\");\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"49a7187b-d74d-4156-9547-1a3a61e7d7fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b6er7\\\\\\">Update the scripts section in the package.json file to:</p>\\", \\"id\\": \\"7a2fbbec-c893-4e17-a7bf-657668b74bdf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"\\\\\\"scripts\\\\\\": {\\\\r\\\\n  \\\\\\"build\\\\\\": \\\\\\"webpack --mode production\\\\\\",\\\\r\\\\n  \\\\\\"start\\\\\\": \\\\\\"webpack --mode development --watch\\\\\\"\\\\r\\\\n},\\", \\"language\\": \\"json\\"}, \\"id\\": \\"8ddae73b-9420-4c20-a445-a333407bad37\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fqig2\\\\\\">Run Webpack</h3><p data-block-key=\\\\\\"1tj01\\\\\\">To compile the client side code during development run:</p>\\", \\"id\\": \\"099e899a-5c8c-485f-8a97-9e6a22d454d9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm start # which will compile and watch for changes\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c7abec35-6fbc-4cb7-bd3b-672ced66b0b9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2dqoj\\\\\\">To compile the client side code for production run:</p>\\", \\"id\\": \\"6e9676a6-c160-4808-a2fc-c474cc9aba74\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm run build # which will compile and minify the code\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1c1adac8-8f44-46ee-bd73-f2d74889bfbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9sbu\\\\\\">Running either of these commands will create a webapp/static/webapp directory containing bundle.css and bundle.js.</p><h2 data-block-key=\\\\\\"h0ft\\\\\\">Update the base template to use the compiled files</h2><p data-block-key=\\\\\\"81rq1\\\\\\">Open the webapp/templates/base.html file and update the head section to include the compiled css and javascript files:</p>\\", \\"id\\": \\"1e26b465-7350-45b3-a9c9-ad93decfea76\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- change -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'css/webapp.css' %}\\\\\\">\\\\r\\\\n<!-- to -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'webapp/bundle.css' %}\\\\\\">\\\\r\\\\n<!-- change -->\\\\r\\\\n<script src=\\\\\\"{% static 'js/webapp.js' %}\\\\\\"></script>\\\\r\\\\n<!-- to -->\\\\r\\\\n<script src=\\\\\\"{% static 'webapp/bundle.js' %}\\\\\\"></script>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"7c35342c-b3c2-40ab-8f3c-9ca1572f3652\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"11pot\\\\\\">You can delete the webapp/static/css and webapp/static/js directories and files as they are no longer needed.</p><h2 data-block-key=\\\\\\"3vbt0\\\\\\">Run the development server</h2><p data-block-key=\\\\\\"2bde9\\\\\\">In a new console run the development server (after activating the virtualenv):</p>\\", \\"id\\": \\"33d2e1fb-e69c-453f-81d8-97fd0481dcd8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"682cab45-26a4-464b-8621-7e8d3f07b32b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"da1c6\\\\\\">As long as you are running the <b>npm start</b> command in the other console...</p><p data-block-key=\\\\\\"85rb8\\\\\\">Open your browser at <a href=\\\\\\"http://localhost:3000/\\\\\\">http://localhost:3000</a> and you should see the home page with a grey background and a message in the console.</p><p data-block-key=\\\\\\"2afmb\\\\\\">Try changing the background color in client/styles/index.scss and you should see the changes in the browser without having to refresh the page.</p><h2 data-block-key=\\\\\\"3pv64\\\\\\">Just for fun :-)</h2><p data-block-key=\\\\\\"5g6tj\\\\\\">Create a file client/scripts/logo.js with the following content:</p>\\", \\"id\\": \\"15a8d67b-7b24-4c15-8043-ccc15717ce89\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Logo {\\\\r\\\\n  constructor() {\\\\r\\\\n        this.logo = document.getElementsByClassName('logo')[0];\\\\r\\\\n        this.header = document.getElementsByClassName('header')[0];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    init() {\\\\r\\\\n      setTimeout(() => {\\\\r\\\\n        this.logo.classList.add('logo--fade-in');\\\\r\\\\n            this.header.classList.add('header--slope');\\\\r\\\\n        }, 1000);\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nmodule.exports = Logo;\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"31251878-15de-46ec-8e89-2f61ca840af4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6i44k\\\\\\">Update client/scripts/index.js to the following:</p>\\", \\"id\\": \\"2fb946ee-fc33-4626-ad72-fd0e92ace6c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import \\\\\\"../styles/index.scss\\\\\\";\\\\r\\\\nimport Logo from \\\\\\"./logo.js\\\\\\";\\\\r\\\\n\\\\r\\\\nconst logo = new Logo();\\\\r\\\\nlogo.init();\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"533b0532-4437-4842-8146-23f3204c1528\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bli3g\\\\\\">Create a file client/styles/_vars.scss with the following content:</p>\\", \\"id\\": \\"3fb72dab-e272-4990-8756-ddce38ad6bd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"$background-color: #43b1b0;\\\\r\\\\n$foreground-color: #fff;\\", \\"language\\": \\"css\\"}, \\"id\\": \\"daac85a5-de53-48cb-91b7-1d1cb417de05\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d5cs4\\\\\\">Alter the client/styles/index.scss file to the following:</p>\\", \\"id\\": \\"ae0bdae5-b932-49bb-a706-1a2fd648ff97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"@import \\\\\\"./vars\\\\\\";\\\\r\\\\n\\\\r\\\\nbody {\\\\r\\\\n  background-color: $background-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nh2, a {\\\\r\\\\n  color: $foreground-color !important;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nsvg .egg {\\\\r\\\\n  fill: $foreground-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.logo--fade-in {\\\\r\\\\n  animation: fade-in 1s ease-out;\\\\r\\\\n  animation-fill-mode: forwards;\\\\r\\\\n  svg g {\\\\r\\\\n    fill: white;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes fade-in {\\\\r\\\\n  0% {\\\\r\\\\n    opacity: 0.2;\\\\r\\\\n    transform: scale(1);\\\\r\\\\n  }\\\\r\\\\n  75% {\\\\r\\\\n    opacity: 0.8;\\\\r\\\\n    transform: scale(1.8) translateX(10%);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    opacity: 1;\\\\r\\\\n    transform: scale(1.4) translateX(0) translateY(20px) rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.header--slope {\\\\r\\\\n  animation: slope 1s ease-in-out;\\\\r\\\\n  animation-fill-mode: forwards;  \\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes slope {\\\\r\\\\n  0% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  90% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    transform: rotate(-2deg);\\\\r\\\\n  }\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"0485e308-3d73-4b43-b450-c4ffd494a112\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eon8u\\\\\\">With nom start still running: If you view the Wagtail start page (home) it&#x27;s going to look a little different.</p>\\", \\"id\\": \\"94be5fb4-4f60-45f1-af41-22e5f6bddc68\\"}]", "live": true, "path": "00010001000100020001", "slug": "set-up-webpack-and-client-side-code-compilation", "depth": 5, "owner": 1, "title": "Set up Webpack and client side code compilation", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/set-up-webpack-and-client-side-code-compilation/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up Webpack and client side code compilation", "content_type": 28, "live_revision": 71, "show_in_menus": false, "latest_revision": 71, "translation_key": "d8cf4c84-68bb-4faa-961c-6a6e9c760071", "last_published_at": "2023-08-30T16:37:16.468Z", "first_published_at": "2023-08-30T16:36:11.615Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:37:16.342Z"}	\N	27	1	28	1	Set up Webpack and client side code compilation
73	f	2023-08-30 16:46:14.139+00	{"pk": 28, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"18ase\\\\\\"><i>This step is entirely optional but is recommended.</i></p><h2 data-block-key=\\\\\\"2pljs\\\\\\">Pre-commit</h2><p data-block-key=\\\\\\"9o3ih\\\\\\"><a href=\\\\\\"https://pre-commit.com/\\\\\\">Pre-commit</a> is a tool that runs git hooks on your code before you commit it. It&#x27;s a great way to ensure your code is formatted correctly and passes some basic checks before you commit it.</p><p data-block-key=\\\\\\"8ujrj\\\\\\">It will run black, isort and flake8 on my code and check for missing migrations and also that requirements.txt is up to date before I commit it.</p><h3 data-block-key=\\\\\\"de64j\\\\\\">Install pre-commit</h3><p data-block-key=\\\\\\"37hn1\\\\\\">Add pre-commit to the development dependencies in Pipfile:</p>\\", \\"id\\": \\"0cb2e3ae-5a2a-4b4f-bfb7-061d14c170c4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install --dev pre-commit\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"69cd30d2-4020-4570-ad35-26aee8288a7d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"au7e3\\\\\\">If you already have pre-commit installed globally, you can skip this step.</p><h3 data-block-key=\\\\\\"dvfe2\\\\\\">Configure pre-commit</h3><p data-block-key=\\\\\\"d90hp\\\\\\">Create a .pre-commit-config.yaml file in the root of the project and add the following content:</p><p data-block-key=\\\\\\"1kv4c\\\\\\"></p>\\", \\"id\\": \\"8f29ce66-6acd-4d77-bf55-4e8f42b86f4b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"repos:\\\\r\\\\n  # These hooks make sure that the code is formatted correctly\\\\r\\\\n  - repo: https://github.com/pycqa/isort\\\\r\\\\n    rev: 5.12.0\\\\r\\\\n    hooks:\\\\r\\\\n      - id: isort\\\\r\\\\n  - repo: https://github.com/psf/black\\\\r\\\\n    rev: 23.7.0\\\\r\\\\n    hooks:\\\\r\\\\n      - id: black\\\\r\\\\n  - repo: https://github.com/pycqa/flake8\\\\r\\\\n    rev: 6.1.0\\\\r\\\\n    hooks:\\\\r\\\\n      - id: flake8\\\\r\\\\n\\\\r\\\\n  # These hooks make sure that the requirements.txt file is up to date\\\\r\\\\n  # with the latest changes to pipenv as well as making sure migrations\\\\r\\\\n  # are up to date.\\\\r\\\\n  - repo: local\\\\r\\\\n    hooks:\\\\r\\\\n      - id: check-dependencies\\\\r\\\\n        name: Check dependencies\\\\r\\\\n        entry: ./checks/dependencies.sh\\\\r\\\\n        language: system\\\\r\\\\n        types: [python]\\\\r\\\\n        pass_filenames: false\\\\r\\\\n        always_run: true\\\\r\\\\n        stages: [pre-commit]\\\\r\\\\n      - id: check-migrations\\\\r\\\\n        name: Check migrations\\\\r\\\\n        entry: ./checks/migrations.sh\\\\r\\\\n        language: system\\\\r\\\\n        types: [python]\\\\r\\\\n        pass_filenames: false\\\\r\\\\n        always_run: true\\\\r\\\\n        stages: [commit]\\\\r\\\\n      - id: check-static\\\\r\\\\n        name: Check static files\\\\r\\\\n        entry: ./checks/static.sh\\\\r\\\\n        language: system\\\\r\\\\n        types: [css, javascript]\\\\r\\\\n        pass_filenames: false\\\\r\\\\n        always_run: true\\\\r\\\\n        stages: [pre-commit]\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"173161d8-d3fe-4e64-b386-fd31a50b5df9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"22tgb\\\\\\">Add the git hook entry points</h2><p data-block-key=\\\\\\"2bhju\\\\\\">Create a checks directory in the root of the project and add the following files:</p>\\", \\"id\\": \\"86b7fb39-afa4-4b1c-94e2-3e701c940ae0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkdir checks\\\\r\\\\ntouch checks/dependencies.sh\\\\r\\\\ntouch checks/migrations.sh\\\\r\\\\ntouch checks/static.sh\\\\r\\\\nchmod +x checks/*.sh\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"739ab79d-4bf7-4513-9aa2-40d3cc28124e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1jis9\\\\\\">Update the content of each file as follows:</p><p data-block-key=\\\\\\"e9kr7\\\\\\">File checks/dependencies.sh:</p>\\", \\"id\\": \\"1cd25c0f-4b55-4101-b70b-99a640d9136d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"#!/bin/bash\\\\r\\\\n\\\\r\\\\n# Get the contents of requirements.txt\\\\r\\\\nrequirements=$(cat requirements.txt)\\\\r\\\\n\\\\r\\\\n# Get the output from pipenv requirements\\\\r\\\\npipenv_requirements=$(pipenv requirements)\\\\r\\\\n\\\\r\\\\n# Compare the two outputs\\\\r\\\\nif [ \\\\\\"$requirements\\\\\\" == \\\\\\"$pipenv_requirements\\\\\\" ]; then\\\\r\\\\n  echo \\\\\\"Requirements are correct\\\\\\"\\\\r\\\\nelse\\\\r\\\\n  echo \\\\\\"Requirements are different, please run pipenv requirements > requirements.txt and stage the changes\\\\\\"\\\\r\\\\n  exit 1\\\\r\\\\nfi\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0427f78c-5ec6-400a-9969-084cea577d06\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0o8\\\\\\">File checks/migrations.sh:</p>\\", \\"id\\": \\"4e995efa-c60c-4b6a-8c32-d69adaeba15e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"#!/bin/bash\\\\r\\\\n\\\\r\\\\n# Check if MySQL is already running\\\\r\\\\n# so we can stop it after the checks if it was started here.\\\\r\\\\nif docker-compose top | grep mysqld 2> /dev/null; then\\\\r\\\\n    echo \\\\\\"MySQL is running.\\\\\\"\\\\r\\\\n    MYSQL_RUNNING=true\\\\r\\\\nelse\\\\r\\\\n    echo \\\\\\"MySQL is not running.\\\\\\"\\\\r\\\\n    MYSQL_RUNNING=false\\\\r\\\\nfi\\\\r\\\\n\\\\r\\\\nif [ \\\\\\"$MYSQL_RUNNING\\\\\\" = false ]; then\\\\r\\\\n    docker-compose up -d db\\\\r\\\\n    echo \\\\\\"MySQL has been started.\\\\\\"\\\\r\\\\nfi\\\\r\\\\n\\\\r\\\\nif pipenv run python manage.py makemigrations --check --dry-run; then\\\\r\\\\n    # There are no changes to migrations\\\\r\\\\n    if [ \\\\\\"$MYSQL_RUNNING\\\\\\" = false ]; then\\\\r\\\\n        docker-compose stop db\\\\r\\\\n        echo \\\\\\"MySQL has been stopped.\\\\\\"\\\\r\\\\n    fi\\\\r\\\\n    exit 0\\\\r\\\\nelse\\\\r\\\\n    # There are changes to migrations\\\\r\\\\n    echo \\\\\\"Migrations are out of date. Please run 'pipenv run python manage.py makemigrations' and commit the changes.\\\\\\"\\\\r\\\\n    # If MySQL was not originally running, stop it before exiting\\\\r\\\\n    if [ \\\\\\"$MYSQL_RUNNING\\\\\\" = false ]; then\\\\r\\\\n        docker-compose stop db\\\\r\\\\n        echo \\\\\\"MySQL has been stopped.\\\\\\"\\\\r\\\\n    fi\\\\r\\\\n    exit 1\\\\r\\\\nfi\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"2753115d-6a9d-4c6b-84dd-de37d4a6598a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3dhcf\\\\\\">File checks/static.sh:</p>\\", \\"id\\": \\"c64784cd-b323-42ba-ae8c-0d91c5ee2296\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"#!/bin/bash\\\\r\\\\n\\\\r\\\\n# This script generates production-ready files for the scripts and styles\\\\r\\\\n# It runs npm run build\\\\r\\\\n# If files are changed then fails\\\\r\\\\n\\\\r\\\\n# Exit on error\\\\r\\\\nset -e\\\\r\\\\n\\\\r\\\\n# Run npm run build\\\\r\\\\nnpm run build\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"89e52f7d-9c00-4c36-bd26-2f5d4aeb951a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5jrs6\\\\\\">Use Pipenv to install some development dependencies</h3>\\", \\"id\\": \\"4fb0575e-5806-4df7-a454-0cd00e95a043\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install --dev black==23.7.0 pre-commit==3.3.3 flake8==6.1.0 isort==5.12.0 tomli==2.0.1\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e21f14a8-e771-4320-a6be-d5ea854fb97d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"a4r0g\\\\\\">I&#x27;ve pinned the versions of the development dependencies to the same versions as the pre-commit hooks.</p><h3 data-block-key=\\\\\\"f9jk\\\\\\">Install the pre-commit hooks</h3>\\", \\"id\\": \\"d727f548-6a40-44ec-ac5d-30d495ab8ef0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run pre-commit install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5096b294-ba11-4a0f-9bfe-409601088665\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"e8k4i\\\\\\">You can use the <b>pre-commit install</b> command to initialize pre-commit. You can also run <b>pre-commit uninstall</b> to remove the hooks.</p><h3 data-block-key=\\\\\\"culb8\\\\\\">Run the pre-commit hooks</h3>\\", \\"id\\": \\"9eeb4d83-b66b-4da1-9a17-d56c694bd61f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run pre-commit run --all-files\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3ef30389-f53d-4e18-b44d-f44ae8b6fe0d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bcibm\\\\\\">If this is the first time running pre-commit you&#x27;ll probably see some file changes have been made. You can commit these changes and then run the pre-commit hooks again to make sure everything is ok.</p><h3 data-block-key=\\\\\\"dap87\\\\\\">Commit the changes</h3>\\", \\"id\\": \\"9ca34f1c-0229-4c28-b1fb-ffdfa92a3188\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"git add .\\\\r\\\\ngit commit -m \\\\\\"add your commit message here\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"28df97f7-c998-448a-b430-8933542beb74\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8rtcl\\\\\\">Having pre-commit installed means that every time you commit code, the pre-commit hooks will run and check your code. </p><p data-block-key=\\\\\\"ab701\\\\\\">If there are any errors, the commit will fail and you&#x27;ll need to fix the errors before you can commit again.</p>\\", \\"id\\": \\"8086561b-96ef-4aa9-af7b-1e183724b7aa\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"eheut\\\\\\">Make sure you have stopped the npm server before you commit, the one you started with npm start.</p>\\", \\"id\\": \\"deb94668-1a23-41cc-9dac-8dba53864d74\\"}]", "live": true, "path": "00010001000100020002", "slug": "set-up-pre-commit", "depth": 5, "owner": 1, "title": "Set up pre-commit", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/set-up-pre-commit/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up pre-commit", "content_type": 28, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "867deb38-738b-45f0-9c88-095e745bc94a", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	28	1	28	1	Set up pre-commit
74	f	2023-08-30 16:52:23.033+00	{"pk": 26, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Part 2 of Deploy Wagtail CMS to PythonAnywhere\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"dafc466a-f9ef-4897-8682-0658c1f3c763\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 2, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"3a3994ae-acca-4c56-afe7-7389ae79a34a\\"}]", "date": "2023-08-30", "live": true, "path": "0001000100010002", "slug": "deploy-wagtail-cms-to-pythonanywhere-part-2", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere (part 2)", "locale": 1, "locked": false, "excerpt": "Setting up Webpack to compile styles and scripts ready for production.", "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/articles/webpack-to-compile-styles-and-javascript/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Webpack to compile styles and javascript", "content_type": 30, "live_revision": 69, "show_in_menus": false, "latest_revision": 69, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": "2023-08-30T16:20:39.368Z", "first_published_at": "2023-08-30T16:16:25.552Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:20:39.217Z"}	\N	26	1	30	1	Deploy Wagtail CMS to PythonAnywhere (part 2)
75	f	2023-09-01 14:49:04.579+00	{"pk": 3, "body": "[{\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# Hi I'm Nick Moreton\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7d5b1f49-7c6c-4cc6-8f72-48ec28825611\\"}]", "live": true, "path": "00010001", "slug": "home", "depth": 2, "owner": null, "title": "Home", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Home", "content_type": 3, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "6148f0ec-3761-4f52-b627-7895c99b3bea", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	3	1	3	1	Home
76	f	2023-09-01 14:52:00.76+00	{"pk": 3, "body": "[{\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# Hi I'm Nick Moreton\\\\r\\\\n\\\\r\\\\nclass WebDeveloper():\\\\r\\\\n    works_at = \\\\\\"https://torchbox.com\\\\\\"\\\\r\\\\n    github = \\\\\\"https://github.com/nickmoreton\\\\\\"\\\\r\\\\n    preferred_cms = \\\\\\"https://wagtail.org\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7d5b1f49-7c6c-4cc6-8f72-48ec28825611\\"}]", "live": true, "path": "00010001", "slug": "home", "depth": 2, "owner": null, "title": "Home", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Home", "content_type": 3, "live_revision": 75, "show_in_menus": false, "latest_revision": 75, "translation_key": "6148f0ec-3761-4f52-b627-7895c99b3bea", "last_published_at": "2023-09-01T14:49:04.759Z", "first_published_at": "2023-09-01T14:49:04.759Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T14:49:04.579Z"}	\N	3	1	3	1	Home
77	f	2023-09-01 14:58:47.543+00	{"pk": 3, "body": "[{\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"web_developer:\\\\r\\\\n  name: Nick Moreton\\\\r\\\\n  works_at: https://torchbox.com\\\\r\\\\n  preferred_cms: https://wagtail.org\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"7d5b1f49-7c6c-4cc6-8f72-48ec28825611\\"}]", "live": true, "path": "00010001", "slug": "home", "depth": 2, "owner": null, "title": "Home", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Home", "content_type": 3, "live_revision": 76, "show_in_menus": false, "latest_revision": 76, "translation_key": "6148f0ec-3761-4f52-b627-7895c99b3bea", "last_published_at": "2023-09-01T14:52:00.931Z", "first_published_at": "2023-09-01T14:49:04.759Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T14:52:00.760Z"}	\N	3	1	3	1	Home
78	f	2023-09-01 15:07:28.656+00	{"pk": 3, "body": "[{\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"who_am_i:\\\\r\\\\n  name: \\\\\\"Nick Moreton\\\\\\"\\\\r\\\\n  works_at: https://torchbox.com\\\\r\\\\n  preferred_cms: https://wagtail.org\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"7d5b1f49-7c6c-4cc6-8f72-48ec28825611\\"}]", "live": true, "path": "00010001", "slug": "home", "depth": 2, "owner": null, "title": "Home", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Home", "content_type": 3, "live_revision": 77, "show_in_menus": false, "latest_revision": 77, "translation_key": "6148f0ec-3761-4f52-b627-7895c99b3bea", "last_published_at": "2023-09-01T14:58:47.662Z", "first_published_at": "2023-09-01T14:49:04.759Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T14:58:47.543Z"}	\N	3	1	3	1	Home
79	f	2023-09-01 16:10:34.845+00	{"pk": 20, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Create a page in Wagtail CMS that has a corresponding QR Code.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"1acd834a-51ad-4914-9519-7e925d493f51\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h2><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 45, "show_in_menus": false, "latest_revision": 45, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-08-29T12:32:54.690Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-29T12:32:54.315Z"}	\N	20	1	32	1	Wagtail QR code
80	f	2023-09-01 16:11:05.397+00	{"pk": 20, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Create a page in Wagtail CMS that has a corresponding QR Code.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"1acd834a-51ad-4914-9519-7e925d493f51\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h3><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed. When scanned IT will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 79, "show_in_menus": false, "latest_revision": 79, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-09-01T16:10:35.036Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:10:34.845Z"}	\N	20	1	32	1	Wagtail QR code
81	f	2023-09-01 16:11:52.433+00	{"pk": 20, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Create a page in Wagtail CMS that has a corresponding QR Code.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"1acd834a-51ad-4914-9519-7e925d493f51\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h3><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed.</li><li data-block-key=\\\\\\"f8jq6\\\\\\">When scanned it will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><h2 data-block-key=\\\\\\"f6oh1\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS</p><h3 data-block-key=\\\\\\"3dhds\\\\\\">Install the package into your environment.</h3>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</h3><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"5rig1\\\\\\"><b>Add this setting to your Wagtail settings.</b></h3><p data-block-key=\\\\\\"e4aoc\\\\\\">It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h2><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h2><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "This package can be used to create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 80, "show_in_menus": false, "latest_revision": 80, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-09-01T16:11:05.568Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:11:05.397Z"}	\N	20	1	32	1	Wagtail QR code
82	f	2023-09-01 16:15:35.285+00	{"pk": 20, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Create a page in Wagtail CMS that has a corresponding QR Code.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"1acd834a-51ad-4914-9519-7e925d493f51\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h3><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed.</li><li data-block-key=\\\\\\"f8jq6\\\\\\">When scanned it will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><p data-block-key=\\\\\\"fc64u\\\\\\"></p>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"dijlj\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS, install the package into your environment.</p>\\", \\"id\\": \\"0838dd8f-4d04-4424-a092-4865e3ac866b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</p><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5rig1\\\\\\">Add this setting to your Wagtail settings. It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h3><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h3><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "Create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 81, "show_in_menus": false, "latest_revision": 81, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-09-01T16:11:52.568Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:11:52.433Z"}	\N	20	1	32	1	Wagtail QR code
83	f	2023-09-01 16:30:20.881+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot enable/disable field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h3 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h3><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><b>Test that the honey pot field works</b></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h3 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h3><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><b>Use CSS &amp; JS to hide the honeypot field</b></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some basic css and javascript you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ap5fd\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"a3uc4\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"3712cd8a-a95e-409c-bf11-e09209e1d019\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": null, "pypi_package_name": "wagtail-honeypot", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	29	1	32	1	Wagtail Honeypot
84	f	2023-09-01 16:31:59.461+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot enable/disable field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h3 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h3><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h3 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h3><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some basic css and javascript you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ap5fd\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"a3uc4\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"3712cd8a-a95e-409c-bf11-e09209e1d019\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 83, "show_in_menus": false, "latest_revision": 83, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:30:20.993Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:30:20.881Z"}	\N	29	1	32	1	Wagtail Honeypot
85	f	2023-09-01 16:33:52.737+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h3 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h3><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h3 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h3><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some basic css and javascript you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ap5fd\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"a3uc4\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"3712cd8a-a95e-409c-bf11-e09209e1d019\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 84, "show_in_menus": false, "latest_revision": 84, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:31:59.604Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:31:59.461Z"}	\N	29	1	32	1	Wagtail Honeypot
86	f	2023-09-01 16:35:59.915+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h2><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h2><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some basic css and javascript you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ap5fd\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"a3uc4\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"3712cd8a-a95e-409c-bf11-e09209e1d019\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 85, "show_in_menus": false, "latest_revision": 85, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:33:52.866Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:33:52.737Z"}	\N	29	1	32	1	Wagtail Honeypot
87	f	2023-09-01 16:37:31.365+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h2><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h2><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/tree/release/wagtail_honeypot/static\\\\\\">basic css and javascript</a> you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ap5fd\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"a3uc4\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"3712cd8a-a95e-409c-bf11-e09209e1d019\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 86, "show_in_menus": false, "latest_revision": 86, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:36:00.156Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:35:59.915Z"}	\N	29	1	32	1	Wagtail Honeypot
88	f	2023-09-01 16:38:31.653+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h2><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h2><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/tree/release/wagtail_honeypot/static\\\\\\">basic css and javascript</a> you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"kyjx1\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"fqqdi\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"2209fb70-5a1c-44a3-bcfe-7144afc899ba\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 87, "show_in_menus": false, "latest_revision": 87, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:37:31.488Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:37:31.365Z"}	\N	29	1	32	1	Wagtail Honeypot
89	f	2023-09-01 16:41:45.177+00	{"pk": 30, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">An alternative Wagtail richtext filter that can be configured in your apps settings.</p><p data-block-key=\\\\\\"pt8u\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such as:</p><ul><li data-block-key=\\\\\\"6up2n\\\\\\"><a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a></li><li data-block-key=\\\\\\"a457b\\\\\\"><a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a></li><li data-block-key=\\\\\\"an6p0\\\\\\"><a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a></li><li data-block-key=\\\\\\"a51d7\\\\\\"><a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a></li><li data-block-key=\\\\\\"3pb16\\\\\\">other frameworks are available :)</li></ul><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p><p data-block-key=\\\\\\"b17b1\\\\\\">pip install wagtail-f-richext</p><p data-block-key=\\\\\\"1bd0a\\\\\\">Add the package to your INSTALLED_APS</p><p data-block-key=\\\\\\"f8dtb\\\\\\">&quot;wagtail_f_richtext&quot;</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><h3 data-block-key=\\\\\\"cjkpb\\\\\\">with a RichText field</h3><ul><li data-block-key=\\\\\\"32v2n\\\\\\">{{ page.body|f_richtext:&quot;framework&quot; }} will add classes to the HTML tags</li><li data-block-key=\\\\\\"df8hu\\\\\\">{{ page.body|f_richtext:&quot;inline_styles&quot; }} will add inline styles to the HTML tags</li></ul><h3 data-block-key=\\\\\\"e209l\\\\\\">with a RichText block</h3><ul><li data-block-key=\\\\\\"4kmv6\\\\\\">{{ value|f_richtext:&quot;framework&quot; }} will add classes to the HTML tags</li><li data-block-key=\\\\\\"6cnk7\\\\\\">{{ value|f_richtext:&quot;inline_styles&quot; }} will add inline styles to the HTML tags</li></ul><p data-block-key=\\\\\\"5b189\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered</p><p data-block-key=\\\\\\"6irsk\\\\\\">&lt;div class=&quot;text-component&quot;&gt;<br/>    &lt;p data-block-key=&quot;92eli&quot;&gt;A paragraph &lt;b class=&quot;font-bold&quot;&gt;Vulputate Vestibulum&lt;/b&gt; &lt;i class=&quot;font-italic&quot;&gt;Commodo&lt;/i&gt;&lt;/p&gt;<br/>    &lt;h2 class=&quot;heading-2&quot; data-block-key=&quot;fkden&quot;&gt;Heading 2&lt;/h2&gt;<br/>    &lt;ul class=&quot;list list--ul&quot;&gt;<br/>        &lt;li data-block-key=&quot;fe5cv&quot;&gt;UL List Item 1&lt;/li&gt;<br/>        &lt;li data-block-key=&quot;6ort3&quot;&gt;UL List Item 2&lt;/li&gt;<br/>    &lt;/ul&gt;<br/>    &lt;ol class=&quot;list list--ol&quot;&gt;<br/>        &lt;li data-block-key=&quot;d5s3r&quot;&gt;OL List Item 1&lt;/li&gt;<br/>        &lt;li data-block-key=&quot;5l47j&quot;&gt;OL List Item 2&lt;/li&gt;<br/>    &lt;/ol&gt;<br/>    &lt;img alt=&quot;IMG_4511&quot; class=&quot;f-richtext-image f-richtext-image--right&quot; height=&quot;375&quot; src=&quot;/media/images/IMG_4511.width-500.jpg&quot; width=&quot;500&quot;&gt;<br/>    &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;<br/>&lt;/div&gt;</p><p data-block-key=\\\\\\"8jldl\\\\\\">Sample inline_styles rendered</p><p data-block-key=\\\\\\"4a50u\\\\\\">&lt;div style=&quot;overflow:hidden;&quot;&gt;<br/>    &lt;p data-block-key=&quot;92eli&quot; style=&quot;margin-bottom: 1em;&quot;&gt;A paragraph &lt;b style=&quot;font-weight: bold;&quot;&gt;Vulputate Vestibulum&lt;/b&gt; &lt;i style=&quot;font-style: italic;&quot;&gt;Commodo&lt;/i&gt;&lt;/p&gt;<br/>    &lt;h2 data-block-key=&quot;fkden&quot; style=&quot;margin-bottom: 1em;&quot;&gt;Heading 2&lt;/h2&gt;<br/>    &lt;ul style=&quot;float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;&quot;&gt;<br/>        &lt;li data-block-key=&quot;fe5cv&quot;&gt;UL List Item 1&lt;/li&gt;<br/>        &lt;li data-block-key=&quot;6ort3&quot;&gt;UL List Item 2&lt;/li&gt;<br/>    &lt;/ul&gt;<br/>    &lt;ol style=&quot;float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;&quot;&gt;<br/>        &lt;li data-block-key=&quot;d5s3r&quot;&gt;OL List Item 1&lt;/li&gt;<br/>        &lt;li data-block-key=&quot;5l47j&quot;&gt;OL List Item 2&lt;/li&gt;<br/>    &lt;/ol&gt;<br/>    &lt;img alt=&quot;IMG_4511&quot; class=&quot;richtext-image right&quot; height=&quot;375&quot; src=&quot;/media/images/IMG_4511.width-500.jpg&quot; style=&quot;float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;&quot; width=&quot;500&quot;&gt;<br/>    &lt;div style=&quot;clear: both;&quot;&gt;&lt;/div&gt;<br/>&lt;/div&gt;</p><h2 data-block-key=\\\\\\"3tb2h\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3><p data-block-key=\\\\\\"b7j1i\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG = {<br/>    # target html tags<br/>    &quot;classes&quot;: {<br/>        &quot;h1&quot;: &quot;heading-1&quot;,<br/>        &quot;h2&quot;: &quot;heading-2&quot;,<br/>        &quot;ul&quot;: &quot;list list--ul&quot;,<br/>        &quot;ol&quot;: &quot;list list--ol&quot;,<br/>        &quot;a&quot;: &quot;color-contrast-higher&quot;,<br/>        &quot;b&quot;: &quot;font-bold&quot;,<br/>        &quot;i&quot;: &quot;font-italic&quot;,<br/>    },<br/>    # wrap the richtext content with a class<br/>    &quot;wrapper_classes&quot;: [<br/>        &quot;text-component&quot;,<br/>    ],<br/>    # swap the richtext image alignment classes<br/>    &quot;alignment_classes&quot;: {<br/>        &quot;richtext-image left&quot;: &quot;f-richtext-image f-richtext-image--left&quot;,<br/>        &quot;richtext-image right&quot;: &quot;f-richtext-image f-richtext-image--right&quot;,<br/>        &quot;richtext-image full-width&quot;: &quot;margin: 1em 0; width: 100%; height: auto;&quot;,<br/>    },<br/>    # remove any empty HTML tags (blank lines in the richtext editor)<br/>    &quot;remove_empty_tags&quot;: [<br/>        &quot;p&quot;,<br/>    ],<br/>    # add a clearfix to the end of the content<br/>    &quot;append_clearfix&quot;: True,<br/>}</p><h3 data-block-key=\\\\\\"ese17\\\\\\">Example for adding inline styles</h3><p data-block-key=\\\\\\"dr3kd\\\\\\">F_RICHTEXT_INLINE_CONFIG = {<br/>    # target html tags<br/>     &quot;styles&quot;: {<br/>        &quot;h1&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;h2&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;h3&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;h4&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;h5&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;h6&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;p&quot;: &quot;margin-bottom: 1em;&quot;,<br/>        &quot;ul&quot;: &quot;float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;&quot;,<br/>        &quot;ol&quot;: &quot;float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;&quot;,<br/>        &quot;code&quot;: &quot;font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;&quot;,<br/>        &quot;sub&quot;: &quot;vertical-align: sub; font-size: smaller;&quot;,<br/>        &quot;sup&quot;: &quot;vertical-align: super; font-size: smaller;&quot;,<br/>        &quot;div&quot;: &quot;float: none; clear: both;&quot;,<br/>        &quot;iframe&quot;: &quot;max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;&quot;,<br/>        &quot;b&quot;: &quot;font-weight: bold;&quot;,<br/>        &quot;i&quot;: &quot;font-style: italic;&quot;,<br/>    },<br/>    # wrap the richtext content with a style<br/>    &quot;wrapper_styles&quot;: [<br/>        &quot;overflow:hidden;&quot;,<br/>    ],<br/>    # swap the richtext image alignment classes for an inline style<br/>    &quot;alignment_styles&quot;: {<br/>        &quot;richtext-image left&quot;: &quot;float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;&quot;,<br/>        &quot;richtext-image right&quot;: &quot;float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;&quot;,<br/>        &quot;richtext-image full-width&quot;: &quot;margin: 1em 0; width: 100%; height: auto;&quot;,<br/>    },<br/>    # remove any empty HTML tags (blank lines in the richtext editor)<br/>    &quot;remove_empty_tags&quot;: [<br/>        &quot;p&quot;,<br/>    ],<br/>    # add a clearfix to the end of the content<br/>    &quot;append_clearfix&quot;: True,<br/>}</p><h2 data-block-key=\\\\\\"7cdeq\\\\\\">Optional usage</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p><p data-block-key=\\\\\\"11vad\\\\\\">F_RICHTEXT_PARSER_CLASS=&quot;the.dotted.path.to.your.own.Class&quot;</p><h3 data-block-key=\\\\\\"8r179\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p><p data-block-key=\\\\\\"7gs10\\\\\\">F_RICHTEXT_PARSER_RUNNER=&quot;the.dotted.path.to.your.own.function&quot;</p><h2 data-block-key=\\\\\\"dt77o\\\\\\">Contributing</h2><p data-block-key=\\\\\\"4bkcb\\\\\\">The test app can be run to develop your contribution.</p><ol><li data-block-key=\\\\\\"5ufc0\\\\\\">Fork the repo and clone it to your computer.</li><li data-block-key=\\\\\\"9rgrj\\\\\\">Change to the folder where you cloned it to.</li></ol><p data-block-key=\\\\\\"c11lv\\\\\\">With <a href=\\\\\\"https://python-poetry.org/\\\\\\">poetry</a> installed run:</p><p data-block-key=\\\\\\"1rgag\\\\\\">poetry install<br/>poetry shell<br/># run the migrations, add an admin account and start the app<br/>python manage.py migrate<br/>python manage.py createsuperuser<br/>python manage.py runserver</p><p data-block-key=\\\\\\"7u21o\\\\\\">Then you can view the app at <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and login to the admin at <a href=\\\\\\"http://localhost:8000/admin\\\\\\">http://localhost:8000/admin</a></p><p data-block-key=\\\\\\"6v5ct\\\\\\">Run the tests:</p><p data-block-key=\\\\\\"711th\\\\\\">python manage.py test</p><p data-block-key=\\\\\\"26lh9\\\\\\">You can use shortcuts in the <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/Makefile\\\\\\">Makefile</a> to run the above commands.</p><p data-block-key=\\\\\\"6ltbq\\\\\\">make setup</p><p data-block-key=\\\\\\"f7q9i\\\\\\">will run all the above initial commands and creates a superuser with login credentials Username: admin Password: admin</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}]", "date": "2023-09-01", "live": false, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": null, "pypi_package_name": "wagtail-f-richtext", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	30	1	32	1	Wagtail (formatted) richtext
90	f	2023-09-01 16:49:23.937+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such as:</p><ul><li data-block-key=\\\\\\"6up2n\\\\\\"><a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a></li><li data-block-key=\\\\\\"a457b\\\\\\"><a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a></li><li data-block-key=\\\\\\"an6p0\\\\\\"><a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a></li><li data-block-key=\\\\\\"a51d7\\\\\\"><a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a></li><li data-block-key=\\\\\\"3pb16\\\\\\">other frameworks are available :)</li></ul><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"588ok\\\\\\"></p><p data-block-key=\\\\\\"b7j1i\\\\\\"></p><h3 data-block-key=\\\\\\"ese17\\\\\\">Example for adding inline styles</h3><p data-block-key=\\\\\\"dr3kd\\\\\\">F_RICHTEXT_INLINE_CONFIG = {<br/> # target html tags<br/> &quot;styles&quot;: {<br/> &quot;h1&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h2&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h3&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h4&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h5&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h6&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;p&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;ul&quot;: &quot;float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;&quot;,<br/> &quot;ol&quot;: &quot;float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;&quot;,<br/> &quot;code&quot;: &quot;font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;&quot;,<br/> &quot;sub&quot;: &quot;vertical-align: sub; font-size: smaller;&quot;,<br/> &quot;sup&quot;: &quot;vertical-align: super; font-size: smaller;&quot;,<br/> &quot;div&quot;: &quot;float: none; clear: both;&quot;,<br/> &quot;iframe&quot;: &quot;max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;&quot;,<br/> &quot;b&quot;: &quot;font-weight: bold;&quot;,<br/> &quot;i&quot;: &quot;font-style: italic;&quot;,<br/> },<br/> # wrap the richtext content with a style<br/> &quot;wrapper_styles&quot;: [<br/> &quot;overflow:hidden;&quot;,<br/> ],<br/> # swap the richtext image alignment classes for an inline style<br/> &quot;alignment_styles&quot;: {<br/> &quot;richtext-image left&quot;: &quot;float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;&quot;,<br/> &quot;richtext-image right&quot;: &quot;float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;&quot;,<br/> &quot;richtext-image full-width&quot;: &quot;margin: 1em 0; width: 100%; height: auto;&quot;,<br/> },<br/> # remove any empty HTML tags (blank lines in the richtext editor)<br/> &quot;remove_empty_tags&quot;: [<br/> &quot;p&quot;,<br/> ],<br/> # add a clearfix to the end of the content<br/> &quot;append_clearfix&quot;: True,<br/>}</p><h2 data-block-key=\\\\\\"7cdeq\\\\\\">Optional usage</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p><p data-block-key=\\\\\\"11vad\\\\\\">F_RICHTEXT_PARSER_CLASS=&quot;the.dotted.path.to.your.own.Class&quot;</p><h3 data-block-key=\\\\\\"8r179\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p><p data-block-key=\\\\\\"7gs10\\\\\\">F_RICHTEXT_PARSER_RUNNER=&quot;the.dotted.path.to.your.own.function&quot;</p><h2 data-block-key=\\\\\\"dt77o\\\\\\">Contributing</h2><p data-block-key=\\\\\\"4bkcb\\\\\\">The test app can be run to develop your contribution.</p><ol><li data-block-key=\\\\\\"5ufc0\\\\\\">Fork the repo and clone it to your computer.</li><li data-block-key=\\\\\\"9rgrj\\\\\\">Change to the folder where you cloned it to.</li></ol><p data-block-key=\\\\\\"c11lv\\\\\\">With <a href=\\\\\\"https://python-poetry.org/\\\\\\">poetry</a> installed run:</p><p data-block-key=\\\\\\"1rgag\\\\\\">poetry install<br/>poetry shell<br/># run the migrations, add an admin account and start the app<br/>python manage.py migrate<br/>python manage.py createsuperuser<br/>python manage.py runserver</p><p data-block-key=\\\\\\"7u21o\\\\\\">Then you can view the app at <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and login to the admin at <a href=\\\\\\"http://localhost:8000/admin\\\\\\">http://localhost:8000/admin</a></p><p data-block-key=\\\\\\"6v5ct\\\\\\">Run the tests:</p><p data-block-key=\\\\\\"711th\\\\\\">python manage.py test</p><p data-block-key=\\\\\\"26lh9\\\\\\">You can use shortcuts in the <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/Makefile\\\\\\">Makefile</a> to run the above commands.</p><p data-block-key=\\\\\\"6ltbq\\\\\\">make setup</p><p data-block-key=\\\\\\"f7q9i\\\\\\">will run all the above initial commands and creates a superuser with login credentials Username: admin Password: admin</p>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}]", "date": "2023-09-01", "live": false, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": 89, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": null, "pypi_package_name": "wagtail-f-richtext", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-01T16:41:45.177Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
91	f	2023-09-01 16:49:28.374+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such as:</p><ul><li data-block-key=\\\\\\"6up2n\\\\\\"><a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a></li><li data-block-key=\\\\\\"a457b\\\\\\"><a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a></li><li data-block-key=\\\\\\"an6p0\\\\\\"><a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a></li><li data-block-key=\\\\\\"a51d7\\\\\\"><a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a></li><li data-block-key=\\\\\\"3pb16\\\\\\">other frameworks are available :)</li></ul><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"588ok\\\\\\"></p><p data-block-key=\\\\\\"b7j1i\\\\\\"></p><h3 data-block-key=\\\\\\"ese17\\\\\\">Example for adding inline styles</h3><p data-block-key=\\\\\\"dr3kd\\\\\\">F_RICHTEXT_INLINE_CONFIG = {<br/> # target html tags<br/> &quot;styles&quot;: {<br/> &quot;h1&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h2&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h3&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h4&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h5&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;h6&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;p&quot;: &quot;margin-bottom: 1em;&quot;,<br/> &quot;ul&quot;: &quot;float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;&quot;,<br/> &quot;ol&quot;: &quot;float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;&quot;,<br/> &quot;code&quot;: &quot;font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;&quot;,<br/> &quot;sub&quot;: &quot;vertical-align: sub; font-size: smaller;&quot;,<br/> &quot;sup&quot;: &quot;vertical-align: super; font-size: smaller;&quot;,<br/> &quot;div&quot;: &quot;float: none; clear: both;&quot;,<br/> &quot;iframe&quot;: &quot;max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;&quot;,<br/> &quot;b&quot;: &quot;font-weight: bold;&quot;,<br/> &quot;i&quot;: &quot;font-style: italic;&quot;,<br/> },<br/> # wrap the richtext content with a style<br/> &quot;wrapper_styles&quot;: [<br/> &quot;overflow:hidden;&quot;,<br/> ],<br/> # swap the richtext image alignment classes for an inline style<br/> &quot;alignment_styles&quot;: {<br/> &quot;richtext-image left&quot;: &quot;float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;&quot;,<br/> &quot;richtext-image right&quot;: &quot;float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;&quot;,<br/> &quot;richtext-image full-width&quot;: &quot;margin: 1em 0; width: 100%; height: auto;&quot;,<br/> },<br/> # remove any empty HTML tags (blank lines in the richtext editor)<br/> &quot;remove_empty_tags&quot;: [<br/> &quot;p&quot;,<br/> ],<br/> # add a clearfix to the end of the content<br/> &quot;append_clearfix&quot;: True,<br/>}</p><h2 data-block-key=\\\\\\"7cdeq\\\\\\">Optional usage</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p><p data-block-key=\\\\\\"11vad\\\\\\">F_RICHTEXT_PARSER_CLASS=&quot;the.dotted.path.to.your.own.Class&quot;</p><h3 data-block-key=\\\\\\"8r179\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p><p data-block-key=\\\\\\"7gs10\\\\\\">F_RICHTEXT_PARSER_RUNNER=&quot;the.dotted.path.to.your.own.function&quot;</p><h2 data-block-key=\\\\\\"dt77o\\\\\\">Contributing</h2><p data-block-key=\\\\\\"4bkcb\\\\\\">The test app can be run to develop your contribution.</p><ol><li data-block-key=\\\\\\"5ufc0\\\\\\">Fork the repo and clone it to your computer.</li><li data-block-key=\\\\\\"9rgrj\\\\\\">Change to the folder where you cloned it to.</li></ol><p data-block-key=\\\\\\"c11lv\\\\\\">With <a href=\\\\\\"https://python-poetry.org/\\\\\\">poetry</a> installed run:</p><p data-block-key=\\\\\\"1rgag\\\\\\">poetry install<br/>poetry shell<br/># run the migrations, add an admin account and start the app<br/>python manage.py migrate<br/>python manage.py createsuperuser<br/>python manage.py runserver</p><p data-block-key=\\\\\\"7u21o\\\\\\">Then you can view the app at <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and login to the admin at <a href=\\\\\\"http://localhost:8000/admin\\\\\\">http://localhost:8000/admin</a></p><p data-block-key=\\\\\\"6v5ct\\\\\\">Run the tests:</p><p data-block-key=\\\\\\"711th\\\\\\">python manage.py test</p><p data-block-key=\\\\\\"26lh9\\\\\\">You can use shortcuts in the <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/Makefile\\\\\\">Makefile</a> to run the above commands.</p><p data-block-key=\\\\\\"6ltbq\\\\\\">make setup</p><p data-block-key=\\\\\\"f7q9i\\\\\\">will run all the above initial commands and creates a superuser with login credentials Username: admin Password: admin</p>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}]", "date": "2023-09-01", "live": false, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": 90, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": null, "pypi_package_name": "wagtail-f-richtext", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-01T16:49:23.937Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
92	f	2023-09-01 16:52:03.271+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such as:</p><ul><li data-block-key=\\\\\\"6up2n\\\\\\"><a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a></li><li data-block-key=\\\\\\"a457b\\\\\\"><a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a></li><li data-block-key=\\\\\\"an6p0\\\\\\"><a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a></li><li data-block-key=\\\\\\"a51d7\\\\\\"><a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a></li><li data-block-key=\\\\\\"3pb16\\\\\\">other frameworks are available :)</li></ul><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"588ok\\\\\\">Example for adding inline styles</h3>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_INLINE_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"styles\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h3\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h4\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h5\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h6\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"p\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ul\\\\\\": \\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"code\\\\\\": \\\\\\"font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;\\\\\\",\\\\r\\\\n   \\\\\\"sub\\\\\\": \\\\\\"vertical-align: sub; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"sup\\\\\\": \\\\\\"vertical-align: super; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"div\\\\\\": \\\\\\"float: none; clear: both;\\\\\\",\\\\r\\\\n   \\\\\\"iframe\\\\\\": \\\\\\"max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-weight: bold;\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-style: italic;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a style\\\\r\\\\n \\\\\\"wrapper_styles\\\\\\": [\\\\r\\\\n   \\\\\\"overflow:hidden;\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes for an inline style\\\\r\\\\n \\\\\\"alignment_styles\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n   \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f180ed1a-8d1b-4ebf-ac5f-972f8a961591\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9r5bk\\\\\\"></p><p data-block-key=\\\\\\"dr3kd\\\\\\"></p><h2 data-block-key=\\\\\\"7cdeq\\\\\\">Optional usage</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p><p data-block-key=\\\\\\"11vad\\\\\\">F_RICHTEXT_PARSER_CLASS=&quot;the.dotted.path.to.your.own.Class&quot;</p><h3 data-block-key=\\\\\\"8r179\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p><p data-block-key=\\\\\\"7gs10\\\\\\">F_RICHTEXT_PARSER_RUNNER=&quot;the.dotted.path.to.your.own.function&quot;</p><h2 data-block-key=\\\\\\"dt77o\\\\\\">Contributing</h2><p data-block-key=\\\\\\"4bkcb\\\\\\">The test app can be run to develop your contribution.</p><ol><li data-block-key=\\\\\\"5ufc0\\\\\\">Fork the repo and clone it to your computer.</li><li data-block-key=\\\\\\"9rgrj\\\\\\">Change to the folder where you cloned it to.</li></ol><p data-block-key=\\\\\\"c11lv\\\\\\">With <a href=\\\\\\"https://python-poetry.org/\\\\\\">poetry</a> installed run:</p><p data-block-key=\\\\\\"1rgag\\\\\\">poetry install<br/>poetry shell<br/># run the migrations, add an admin account and start the app<br/>python manage.py migrate<br/>python manage.py createsuperuser<br/>python manage.py runserver</p><p data-block-key=\\\\\\"7u21o\\\\\\">Then you can view the app at <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and login to the admin at <a href=\\\\\\"http://localhost:8000/admin\\\\\\">http://localhost:8000/admin</a></p><p data-block-key=\\\\\\"6v5ct\\\\\\">Run the tests:</p><p data-block-key=\\\\\\"711th\\\\\\">python manage.py test</p><p data-block-key=\\\\\\"26lh9\\\\\\">You can use shortcuts in the <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/Makefile\\\\\\">Makefile</a> to run the above commands.</p><p data-block-key=\\\\\\"6ltbq\\\\\\">make setup</p><p data-block-key=\\\\\\"f7q9i\\\\\\">will run all the above initial commands and creates a superuser with login credentials Username: admin Password: admin</p>\\", \\"id\\": \\"db18cca7-c24e-44b1-b743-f577cf44208e\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": 91, "show_in_menus": false, "latest_revision": 91, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": "2023-09-01T16:49:28.420Z", "pypi_package_name": "wagtail-f-richtext", "first_published_at": "2023-09-01T16:49:28.420Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:49:28.374Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
93	f	2023-09-01 16:54:32.009+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such as:</p><ul><li data-block-key=\\\\\\"6up2n\\\\\\"><a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a></li><li data-block-key=\\\\\\"a457b\\\\\\"><a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a></li><li data-block-key=\\\\\\"an6p0\\\\\\"><a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a></li><li data-block-key=\\\\\\"a51d7\\\\\\"><a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a></li><li data-block-key=\\\\\\"3pb16\\\\\\">other frameworks are available :)</li></ul><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"588ok\\\\\\">Example for adding inline styles</h3>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_INLINE_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"styles\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h3\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h4\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h5\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h6\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"p\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ul\\\\\\": \\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"code\\\\\\": \\\\\\"font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;\\\\\\",\\\\r\\\\n   \\\\\\"sub\\\\\\": \\\\\\"vertical-align: sub; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"sup\\\\\\": \\\\\\"vertical-align: super; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"div\\\\\\": \\\\\\"float: none; clear: both;\\\\\\",\\\\r\\\\n   \\\\\\"iframe\\\\\\": \\\\\\"max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-weight: bold;\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-style: italic;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a style\\\\r\\\\n \\\\\\"wrapper_styles\\\\\\": [\\\\r\\\\n   \\\\\\"overflow:hidden;\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes for an inline style\\\\r\\\\n \\\\\\"alignment_styles\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n   \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f180ed1a-8d1b-4ebf-ac5f-972f8a961591\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9r5bk\\\\\\">Optional</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p>\\", \\"id\\": \\"db18cca7-c24e-44b1-b743-f577cf44208e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_CLASS=\\\\\\"the.dotted.path.to.your.own.Class\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"25ff7112-2e8a-43de-8649-ca77d320c5de\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"h1i7\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p>\\", \\"id\\": \\"bef7429f-d079-4dbe-866a-6ed0b2496b2c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_RUNNER=\\\\\\"the.dotted.path.to.your.own.function\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"daebb110-677b-432b-be80-d7e1056b4896\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": 92, "show_in_menus": false, "latest_revision": 92, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": "2023-09-01T16:52:03.420Z", "pypi_package_name": "wagtail-f-richtext", "first_published_at": "2023-09-01T16:49:28.420Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:52:03.271Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
94	f	2023-09-01 16:56:10.662+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such <a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a>, <a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a>, <a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a>, <a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a> other frameworks are available :)</p><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"588ok\\\\\\">Example for adding inline styles</h3>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_INLINE_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"styles\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h3\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h4\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h5\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h6\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"p\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ul\\\\\\": \\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"code\\\\\\": \\\\\\"font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;\\\\\\",\\\\r\\\\n   \\\\\\"sub\\\\\\": \\\\\\"vertical-align: sub; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"sup\\\\\\": \\\\\\"vertical-align: super; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"div\\\\\\": \\\\\\"float: none; clear: both;\\\\\\",\\\\r\\\\n   \\\\\\"iframe\\\\\\": \\\\\\"max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-weight: bold;\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-style: italic;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a style\\\\r\\\\n \\\\\\"wrapper_styles\\\\\\": [\\\\r\\\\n   \\\\\\"overflow:hidden;\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes for an inline style\\\\r\\\\n \\\\\\"alignment_styles\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n   \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f180ed1a-8d1b-4ebf-ac5f-972f8a961591\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9r5bk\\\\\\">Optional</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p>\\", \\"id\\": \\"db18cca7-c24e-44b1-b743-f577cf44208e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_CLASS=\\\\\\"the.dotted.path.to.your.own.Class\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"25ff7112-2e8a-43de-8649-ca77d320c5de\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"h1i7\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p>\\", \\"id\\": \\"bef7429f-d079-4dbe-866a-6ed0b2496b2c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_RUNNER=\\\\\\"the.dotted.path.to.your.own.function\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"daebb110-677b-432b-be80-d7e1056b4896\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": 93, "show_in_menus": false, "latest_revision": 93, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": "2023-09-01T16:54:32.136Z", "pypi_package_name": "wagtail-f-richtext", "first_published_at": "2023-09-01T16:49:28.420Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:54:32.009Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
96	f	2023-09-02 09:45:05.173+00	{"pk": 32, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"pltev\\\\\\"><b><i>Under development</i></b></p><p data-block-key=\\\\\\"ev492\\\\\\">An admin interface to choose google street view imagery and display an embedded virtual tour.</p><p data-block-key=\\\\\\"213od\\\\\\">Powered by <a href=\\\\\\"https://developers.google.com/maps/documentation/javascript\\\\\\">google maps Javascript API</a> and <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail CMS</a></p>\\", \\"id\\": \\"a1707bb3-8296-427d-b96d-89f481a11947\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"pltev\\\\\\">Installation</h2><p data-block-key=\\\\\\"9bm0b\\\\\\">Install the package:</p>\\", \\"id\\": \\"1f4b1b74-f34e-49e7-ae0e-45a46a063f9f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install git+https://github.com/wagtail-packages/wagtail-360@main\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"57b1b85c-4822-49d4-bdf0-fc955d92f3f9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"636lp\\\\\\">Then add wagtail_360 to your installed apps:</p>\\", \\"id\\": \\"cdb7a7d6-e0ea-4af8-81d7-429a5eaac8be\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_360\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"46b922b5-b607-45d7-806c-babd27cf1480\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"6r6sm\\\\\\">Usage</h2><p data-block-key=\\\\\\"91v4c\\\\\\">Add 2 page models.</p><h3 data-block-key=\\\\\\"6l22k\\\\\\">The Tour Index Page</h3><p data-block-key=\\\\\\"b61t1\\\\\\">This represents a virtual tour and is the parent page for each Panorama in this tour.</p>\\", \\"id\\": \\"aa17ec4d-d7dd-4b4b-90c9-61e64c61869f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_360.abstract_models import AbstractTour\\\\r\\\\n\\\\r\\\\nclass TourPage(AbstractTour, Page):\\\\r\\\\n    subpage_types = [\\\\\\"PanoramaPage\\\\\\"]\\\\r\\\\n    content_panels = Page.content_panels + [AbstractTour.panels]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"47777891-2de4-4df2-b28a-2d129ba19b2b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"89pct\\\\\\">The Panorama Page Model</h3><p data-block-key=\\\\\\"1ukmu\\\\\\">This represents a single panorama and is used as a child page of a TourPage.</p>\\", \\"id\\": \\"d3cd0b74-383b-4641-9029-aa2df7090c6e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_360.abstract_models import AbstractPanorama\\\\r\\\\n\\\\r\\\\nclass PanoramaPage(AbstractPanorama):\\\\r\\\\n    parent_page_types = [\\\\\\"TourPage\\\\\\"]\\\\r\\\\n    content_panels = Page.content_panels + AbstractPanorama.panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"282cb24f-4bfc-41dd-bdc4-8fb456f1a82b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"a40qq\\\\\\">Then run:</p>\\", \\"id\\": \\"b59cbf0f-a2d1-4283-ad7a-10d493b13897\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py makemigrations\\\\r\\\\npython manage.py migrate\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35ca38e5-500a-431c-b4ba-07bd3aadb8f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"ftgtp\\\\\\">Configuration</h2><p data-block-key=\\\\\\"2ue3t\\\\\\">Set the configuration in your settings.py file</p><p data-block-key=\\\\\\"19i8j\\\\\\">A google maps API key is required. You can generate one at <a href=\\\\\\"https://developers.google.com/maps/documentation/javascript\\\\\\">https://developers.google.com/maps/documentation/javascript</a></p><p data-block-key=\\\\\\"9na3m\\\\\\">The service isn&#x27;t free but there&#x27;s a generous free tier available.</p>\\", \\"id\\": \\"f540159a-11a4-4ea8-b8e0-bbad6cce120a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"GOOGLE_MAPS_API_KEY = \\\\\\"your-google-maps-api-key\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"d7a2b052-a318-4e10-9944-8797238c4fdf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8jqns\\\\\\"><i>If you don&#x27;t set the key the panorama images will still display but will be in developer mode.</i></p>\\", \\"id\\": \\"66f354d3-b300-4933-a583-3b854da20713\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100020004", "slug": "wagtail-360-virtual-tours", "depth": 4, "owner": 1, "title": "Wagtail 360° virtual tours", "locale": 1, "locked": false, "excerpt": "An admin interface to choose google street view imagery and display an embedded virtual tour.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-360-virtual-tours/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail 360° virtual tours", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "94aa45e4-807f-4e3a-aaaf-f025713d7c59", "last_published_at": null, "pypi_package_name": "", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	32	1	32	1	Wagtail 360° virtual tours
141	f	2023-09-22 22:04:43.145+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><p data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your preferred method of setting up a virtual environment.</p><p data-block-key=\\\\\\"1tfq5\\\\\\">Run</p>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\\\r\\\\npython manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"47bbfb2b-7ff1-40be-8724-5d9f67b4de13\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"55fr7\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: (<i>nvm</i> use if you have nvm installed) and <i>npm install</i>.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9716eba7-6964-442c-86b9-1312399aea2b\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 140, "show_in_menus": false, "latest_revision": 140, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T22:03:48.104Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T22:03:47.977Z"}	\N	36	1	30	1	Wagtail Start CLI
97	f	2023-09-02 09:46:22.839+00	{"pk": 4, "body": "[]", "live": true, "path": "000100010001", "slug": "articles", "depth": 3, "owner": 1, "title": "Articles", "locale": 1, "locked": false, "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/articles/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Articles", "content_type": 29, "live_revision": 5, "show_in_menus": false, "latest_revision": 5, "translation_key": "d7209bd3-4d98-424b-9925-54b52d457cb2", "last_published_at": "2023-08-28T15:26:32.243Z", "first_published_at": "2023-08-28T15:23:14.678Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-28T15:26:31.980Z"}	\N	4	1	29	1	Articles
98	f	2023-09-02 10:02:58.651+00	{"pk": 33, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"rh3yc\\\\\\">Installation</h2><p data-block-key=\\\\\\"d293b\\\\\\">Clone this repository: <a href=\\\\\\"https://github.com/wagtail-examples/dependency-checker\\\\\\">https://github.com/wagtail-examples/dependency-checker</a> to a suitable location on your computer.</p><h2 data-block-key=\\\\\\"3h5sl\\\\\\">Limitations</h2><ul><li data-block-key=\\\\\\"asmf9\\\\\\">Only works if the app is using a Dockerfile that uses poetry to manage dependencies.</li></ul><h2 data-block-key=\\\\\\"6ptoc\\\\\\">Requirements</h2><ul><li data-block-key=\\\\\\"boq2l\\\\\\">Docker installed and running. Try: <a href=\\\\\\"https://orbstack.dev\\\\\\">https://orbstack.dev</a></li><li data-block-key=\\\\\\"8o8ht\\\\\\">Python 3.9+</li></ul><h2 data-block-key=\\\\\\"9jbe8\\\\\\">Usage</h2>\\", \\"id\\": \\"3a729ba6-61a8-46a6-9ef7-f7ba5ec36419\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\\\r\\\\npoetry run start\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"30c2b8b0-a82a-43f0-8f03-f793d1c21a19\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5sduo\\\\\\">Enter the url for your repository and set any options where the default isn&#x27;t right for your app.</p><h3 data-block-key=\\\\\\"rpi6\\\\\\">Options</h3><p data-block-key=\\\\\\"dr14q\\\\\\">Options can be passed in as command line arguments or enter them when prompted.</p>\\", \\"id\\": \\"0768b9fe-a3d8-44ad-9d90-c50fa5f72e13\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run start --help\\\\r\\\\n\\\\r\\\\n--repo-url - The URL of the repository to clone/check\\\\r\\\\n--branch-name - The branch to checkout [master]\\\\r\\\\n--docker-file-name - The name of the Dockerfile to inspect/use [Dockerfile]\\\\r\\\\n--docker-file-location - The location of the Dockerfile to inspect/use relative to the repository root [./]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f03d885-a91e-4e2c-b181-2ee5f76d3ff2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7fa6n\\\\\\">How it works</h2><ul><li data-block-key=\\\\\\"96ecr\\\\\\">It will clone the repository and checkout the specified branch</li><li data-block-key=\\\\\\"eqmr2\\\\\\">It will then inspect the Dockerfile to find the python image version and poetry version used</li><li data-block-key=\\\\\\"aqlre\\\\\\">It will then build a new image based on the Dockerfile image and export the dependency list using poetry export -&gt; requirements-frozen.txt</li><li data-block-key=\\\\\\"8g5os\\\\\\">It will then compare each dependency version in requirements-frozen.txt with the latest version on PyPi</li><li data-block-key=\\\\\\"fdhei\\\\\\">It will then output the results in the console and indicate if there are any outdated dependencies and/or manual checks required</li></ul>\\", \\"id\\": \\"9e2a50e0-a3f5-4eec-bdd1-e0ce8893416f\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 4, \\"alignment\\": \\"center\\", \\"content\\": \\"<h3 data-block-key=\\\\\\"3lip4\\\\\\">Example console output</h3>\\"}, \\"id\\": \\"1cbc99d9-dd32-4469-81fc-901cd028744e\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010003", "slug": "dependency-version-checker-for-python", "depth": 4, "owner": 1, "title": "Dependency version checker for Python", "locale": 1, "locked": false, "excerpt": "Output a report of outdated dependencies for your python app", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/dependency-version-checker-for-python/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Dependency version checker for Python", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "1ee1aaa6-28fb-430b-a407-9dc1c07af0aa", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	33	1	30	1	Dependency version checker for Python
99	f	2023-09-02 10:03:35.169+00	{"pk": 33, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"rh3yc\\\\\\">Installation</h2><p data-block-key=\\\\\\"d293b\\\\\\">Clone this repository: <a href=\\\\\\"https://github.com/wagtail-examples/dependency-checker\\\\\\">https://github.com/wagtail-examples/dependency-checker</a> to a suitable location on your computer.</p><h2 data-block-key=\\\\\\"3h5sl\\\\\\">Limitations</h2><ul><li data-block-key=\\\\\\"asmf9\\\\\\">Only works if the app is using a Dockerfile that uses poetry to manage dependencies.</li></ul><h2 data-block-key=\\\\\\"6ptoc\\\\\\">Requirements</h2><ul><li data-block-key=\\\\\\"boq2l\\\\\\">Docker installed and running. Try: <a href=\\\\\\"https://orbstack.dev\\\\\\">https://orbstack.dev</a></li><li data-block-key=\\\\\\"8o8ht\\\\\\">Python 3.9+</li></ul><h2 data-block-key=\\\\\\"9jbe8\\\\\\">Usage</h2>\\", \\"id\\": \\"3a729ba6-61a8-46a6-9ef7-f7ba5ec36419\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\\\r\\\\npoetry run start\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"30c2b8b0-a82a-43f0-8f03-f793d1c21a19\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5sduo\\\\\\">Enter the url for your repository and set any options where the default isn&#x27;t right for your app.</p><h3 data-block-key=\\\\\\"rpi6\\\\\\">Options</h3><p data-block-key=\\\\\\"dr14q\\\\\\">Options can be passed in as command line arguments or enter them when prompted.</p>\\", \\"id\\": \\"0768b9fe-a3d8-44ad-9d90-c50fa5f72e13\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run start --help\\\\r\\\\n\\\\r\\\\n--repo-url - The URL of the repository to clone/check\\\\r\\\\n--branch-name - The branch to checkout [master]\\\\r\\\\n--docker-file-name - The name of the Dockerfile to inspect/use [Dockerfile]\\\\r\\\\n--docker-file-location - The location of the Dockerfile to inspect/use relative to the repository root [./]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f03d885-a91e-4e2c-b181-2ee5f76d3ff2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7fa6n\\\\\\">How it works</h2><ul><li data-block-key=\\\\\\"96ecr\\\\\\">It will clone the repository and checkout the specified branch</li><li data-block-key=\\\\\\"eqmr2\\\\\\">It will then inspect the Dockerfile to find the python image version and poetry version used</li><li data-block-key=\\\\\\"aqlre\\\\\\">It will then build a new image based on the Dockerfile image and export the dependency list using poetry export -&gt; requirements-frozen.txt</li><li data-block-key=\\\\\\"8g5os\\\\\\">It will then compare each dependency version in requirements-frozen.txt with the latest version on PyPi</li><li data-block-key=\\\\\\"fdhei\\\\\\">It will then output the results in the console and indicate if there are any outdated dependencies and/or manual checks required</li></ul>\\", \\"id\\": \\"9e2a50e0-a3f5-4eec-bdd1-e0ce8893416f\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 4, \\"alignment\\": \\"center\\", \\"content\\": \\"<h3 data-block-key=\\\\\\"3lip4\\\\\\">Example console output</h3>\\"}, \\"id\\": \\"1cbc99d9-dd32-4469-81fc-901cd028744e\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010003", "slug": "python-dependency-version-checker", "depth": 4, "owner": 1, "title": "Python dependency version checker", "locale": 1, "locked": false, "excerpt": "Output a report of outdated dependencies for your python app", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/dependency-version-checker-for-python/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Dependency version checker for Python", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 98, "translation_key": "1ee1aaa6-28fb-430b-a407-9dc1c07af0aa", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T10:02:58.651Z"}	\N	33	1	30	1	Python dependency version checker
100	f	2023-09-02 10:03:51.612+00	{"pk": 33, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"rh3yc\\\\\\">Installation</h2><p data-block-key=\\\\\\"d293b\\\\\\">Clone this repository: <a href=\\\\\\"https://github.com/wagtail-examples/dependency-checker\\\\\\">https://github.com/wagtail-examples/dependency-checker</a> to a suitable location on your computer.</p><h2 data-block-key=\\\\\\"3h5sl\\\\\\">Limitations</h2><ul><li data-block-key=\\\\\\"asmf9\\\\\\">Only works if the app is using a Dockerfile that uses poetry to manage dependencies.</li></ul><h2 data-block-key=\\\\\\"6ptoc\\\\\\">Requirements</h2><ul><li data-block-key=\\\\\\"boq2l\\\\\\">Docker installed and running. Try: <a href=\\\\\\"https://orbstack.dev\\\\\\">https://orbstack.dev</a></li><li data-block-key=\\\\\\"8o8ht\\\\\\">Python 3.9+</li></ul><h2 data-block-key=\\\\\\"9jbe8\\\\\\">Usage</h2>\\", \\"id\\": \\"3a729ba6-61a8-46a6-9ef7-f7ba5ec36419\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\\\r\\\\npoetry run start\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"30c2b8b0-a82a-43f0-8f03-f793d1c21a19\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5sduo\\\\\\">Enter the url for your repository and set any options where the default isn&#x27;t right for your app.</p><h3 data-block-key=\\\\\\"rpi6\\\\\\">Options</h3><p data-block-key=\\\\\\"dr14q\\\\\\">Options can be passed in as command line arguments or enter them when prompted.</p>\\", \\"id\\": \\"0768b9fe-a3d8-44ad-9d90-c50fa5f72e13\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run start --help\\\\r\\\\n\\\\r\\\\n--repo-url - The URL of the repository to clone/check\\\\r\\\\n--branch-name - The branch to checkout [master]\\\\r\\\\n--docker-file-name - The name of the Dockerfile to inspect/use [Dockerfile]\\\\r\\\\n--docker-file-location - The location of the Dockerfile to inspect/use relative to the repository root [./]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9f03d885-a91e-4e2c-b181-2ee5f76d3ff2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7fa6n\\\\\\">How it works</h2><ul><li data-block-key=\\\\\\"96ecr\\\\\\">It will clone the repository and checkout the specified branch</li><li data-block-key=\\\\\\"eqmr2\\\\\\">It will then inspect the Dockerfile to find the python image version and poetry version used</li><li data-block-key=\\\\\\"aqlre\\\\\\">It will then build a new image based on the Dockerfile image and export the dependency list using poetry export -&gt; requirements-frozen.txt</li><li data-block-key=\\\\\\"8g5os\\\\\\">It will then compare each dependency version in requirements-frozen.txt with the latest version on PyPi</li><li data-block-key=\\\\\\"fdhei\\\\\\">It will then output the results in the console and indicate if there are any outdated dependencies and/or manual checks required</li></ul>\\", \\"id\\": \\"9e2a50e0-a3f5-4eec-bdd1-e0ce8893416f\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 4, \\"alignment\\": \\"center\\", \\"content\\": \\"<h3 data-block-key=\\\\\\"3lip4\\\\\\">Example console output</h3>\\"}, \\"id\\": \\"1cbc99d9-dd32-4469-81fc-901cd028744e\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010003", "slug": "python-dependency-version-checker", "depth": 4, "owner": 1, "title": "Python dependency version checker", "locale": 1, "locked": false, "excerpt": "Output a report of outdated dependencies for your python app", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/python-dependency-version-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Python dependency version checker", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 99, "translation_key": "1ee1aaa6-28fb-430b-a407-9dc1c07af0aa", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T10:03:35.169Z"}	\N	33	1	30	1	Python dependency version checker
101	f	2023-09-02 10:19:27.428+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development. It will find all content types (Pages, Snippets, </p><p data-block-key=\\\\\\"451fl\\\\\\">Wagtail -&gt; Response Checker</p><p data-block-key=\\\\\\"fh0g7\\\\\\">Admin and frontend page response checker</p><ul><li data-block-key=\\\\\\"9rn6e\\\\\\"><a href=\\\\\\"https://github.com/nickmoreton/wagtail-response-checker/tree/216\\\\\\">branch 216 is the original v2.16.2 site</a></li><li data-block-key=\\\\\\"37r9k\\\\\\"><a href=\\\\\\"https://github.com/nickmoreton/wagtail-response-checker/tree/300\\\\\\">branch 300 is the site convered to v3.0.3</a> But a required change was missed</li></ul><h2 data-block-key=\\\\\\"aj61t\\\\\\">Live testing scenario</h2><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot. E.G.</p><p data-block-key=\\\\\\"80kuu\\\\\\">class CustomHelpPanel(EditHandler):<br/>  template = &#x27;toolkits/custom_help_panel.html&#x27;<br/><br/>  def render(self):<br/>    return mark_safe(render_to_string(self.template, {<br/>      &#x27;self&#x27;: self,<br/>        &#x27;title&#x27;: self.form.parent_page.title<br/>    }))</p><p data-block-key=\\\\\\"83ihg\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"6ng7b\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p><p data-block-key=\\\\\\"9dh14\\\\\\">content_panels = [CustomHelpPanel()] + Page.content_panels + [<br/>    ...<br/>]</p><p data-block-key=\\\\\\"c98\\\\\\">I dare say you will spot it quickly. But you might just have 1000&#x27;s of pages to potentially check across 10&#x27;s of different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">Check Responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">check_responses.py can be dropped into any app folder as per the django management command folder stucture and run with ./manage.py check_responses</p><p data-block-key=\\\\\\"2l89i\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running: python manage.py runserver</p><h2 data-block-key=\\\\\\"1qqkb\\\\\\">Don&#x27;t commit the check_responses file and end up deploying it! (suggestion)</h2><p data-block-key=\\\\\\"dtd94\\\\\\">It&#x27;s really only useful during development and testing.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010004", "slug": "wagtail-development-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Development Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	34	1	30	1	Wagtail Development Response Checker
102	f	2023-09-02 10:33:55.532+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development. It will find all content types (Pages, Snippets, Settings and ModelAdmin)</p><h2 data-block-key=\\\\\\"aj61t\\\\\\">Example upgrade scenario</h2><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010004", "slug": "wagtail-development-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Development Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 101, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T10:19:27.428Z"}	\N	34	1	30	1	Wagtail Development Response Checker
103	f	2023-09-02 10:36:58.096+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development. It will find all content types (Pages, Snippets, Settings and ModelAdmin)</p><p data-block-key=\\\\\\"cdiat\\\\\\"></p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-development-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Development Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": 102, "show_in_menus": false, "latest_revision": 102, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:33:55.592Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:33:55.532Z"}	\N	34	1	30	1	Wagtail Development Response Checker
104	f	2023-09-02 10:41:52.008+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development.</p><p data-block-key=\\\\\\"ben5k\\\\\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-development-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Development Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": 103, "show_in_menus": false, "latest_revision": 103, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:36:58.255Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:36:58.096Z"}	\N	34	1	30	1	Wagtail Development Response Checker
105	f	2023-09-02 10:47:52.9+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development.</p><p data-block-key=\\\\\\"ben5k\\\\\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p><p data-block-key=\\\\\\"4hq02\\\\\\">When running the command you&#x27;ll need to specify 2 params (a username and a password), create this with python manage.py createsuperuser</p><p data-block-key=\\\\\\"1i72s\\\\\\">The report will assume http://localhost:8000 is to be used in the report. If you see an error the url for the error should be available to copy and paste into a browser for further investigation. You can override the url value to use in the console by passing in --report-url option.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-development-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Development Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": 104, "show_in_menus": false, "latest_revision": 104, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:41:52.092Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:41:52.008Z"}	\N	34	1	30	1	Wagtail Development Response Checker
106	f	2023-09-02 10:55:26.884+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development.</p><p data-block-key=\\\\\\"ben5k\\\\\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p><p data-block-key=\\\\\\"4hq02\\\\\\">When running the command you&#x27;ll need to specify 2 params (a username and a password), create this with python manage.py createsuperuser</p><p data-block-key=\\\\\\"1i72s\\\\\\">The report will assume http://localhost:8000 is to be used in the report. If you see an error the url for the error should be available to copy and paste into a browser for further investigation. You can override the url value to use in the console by passing in --report-url option.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Response Checker", "locale": 1, "locked": false, "excerpt": "After working on a Wagtail upgrade - check the admin site and frontend for page view errors", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-development-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Development Response Checker", "content_type": 30, "live_revision": 105, "show_in_menus": false, "latest_revision": 105, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:47:53.040Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:47:52.900Z"}	\N	34	1	30	1	Wagtail Response Checker
107	f	2023-09-02 10:56:19.065+00	{"pk": 35, "body": "[]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	35	1	30	1	Wagtail content types reporter
108	f	2023-09-02 10:57:45.324+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development.</p><p data-block-key=\\\\\\"ben5k\\\\\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p><p data-block-key=\\\\\\"4hq02\\\\\\">When running the command you&#x27;ll need to specify 2 params (a username and a password), create this with python manage.py createsuperuser</p><p data-block-key=\\\\\\"1i72s\\\\\\">The report will assume http://localhost:8000 is to be used in the report. If you see an error the url for the error should be available to copy and paste into a browser for further investigation. You can override the url value to use in the console by passing in --report-url option.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Response Checker", "locale": 1, "locked": false, "excerpt": "This command will find content types and check the response code each of them.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Response Checker", "content_type": 30, "live_revision": 106, "show_in_menus": false, "latest_revision": 106, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:55:27.017Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:55:26.884Z"}	\N	34	1	30	1	Wagtail Response Checker
109	f	2023-09-02 10:59:17.836+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dats\\\\\\"><b>Report content types</b> <br/> </h2><p data-block-key=\\\\\\"as6ff\\\\\\"><br/><br/>The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages. </p><p data-block-key=\\\\\\"15s1v\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"9s7qa\\\\\\"><br/><br/>The `report_types` command generates a report that is output in the console. </p><p data-block-key=\\\\\\"d3s5v\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"7261m\\\\\\"><br/><br/>```bash </p><p data-block-key=\\\\\\"2gjtt\\\\\\"><br/><br/>python manage.py report_types </p><p data-block-key=\\\\\\"cssrb\\\\\\"><br/><br/>``` </p><p data-block-key=\\\\\\"7ttvd\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"2dqk8\\\\\\"><br/><br/><b>### Usage suggestion for report types</b> </p><p data-block-key=\\\\\\"8gqq4\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"ftqig\\\\\\"><br/><br/>The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database) </p><p data-block-key=\\\\\\"9hu7\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"caq4q\\\\\\"><br/><br/>It is recommended that you run the command with a superuser account. </p><p data-block-key=\\\\\\"5n41d\\\\\\"><br/><br/> </p><p data-block-key=\\\\\\"548p3\\\\\\"><br/><br/><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"wagtailkit_repo_name\\\\\\"\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 107, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T10:56:19.065Z"}	\N	35	1	30	1	Wagtail content types reporter
110	f	2023-09-02 11:41:27.7+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7dats\\\\\\"><b>Report content types</b><br/></h2><p data-block-key=\\\\\\"as6ff\\\\\\"><br/><br/>The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><p data-block-key=\\\\\\"15s1v\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"9s7qa\\\\\\"><br/><br/>The `report_types` command generates a report that is output in the console.</p><p data-block-key=\\\\\\"d3s5v\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"7261m\\\\\\"><br/><br/>```bash</p><p data-block-key=\\\\\\"2gjtt\\\\\\"><br/><br/>python manage.py report_types</p><p data-block-key=\\\\\\"cssrb\\\\\\"><br/><br/>```</p><p data-block-key=\\\\\\"7ttvd\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"2dqk8\\\\\\"><br/><br/><b>### Usage suggestion for report types</b></p><p data-block-key=\\\\\\"8gqq4\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"ftqig\\\\\\"><br/><br/>The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"9hu7\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"caq4q\\\\\\"><br/><br/>It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"5n41d\\\\\\"><br/><br/></p><p data-block-key=\\\\\\"548p3\\\\\\"><br/><br/><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"wagtailkit_repo_name\\\\\\"\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 109, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T10:59:17.836Z"}	\N	35	1	30	1	Wagtail content types reporter
111	f	2023-09-02 11:45:21.872+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3t62c\\\\\\"></p><p data-block-key=\\\\\\"dmhum\\\\\\"></p><p data-block-key=\\\\\\"cssrb\\\\\\"><b>Usage suggestion for report types</b></p><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"wagtailkit_repo_name\\\\\\"\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n        \\\\\\"news.NewsType\\\\\\",\\\\r\\\\n        \\\\\\"people.PersonType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 110, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T11:41:27.700Z"}	\N	35	1	30	1	Wagtail content types reporter
112	f	2023-09-02 11:49:32.545+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3t62c\\\\\\"></p><p data-block-key=\\\\\\"dmhum\\\\\\"></p><p data-block-key=\\\\\\"cssrb\\\\\\"><b>Usage suggestion for report types</b></p><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 111, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T11:45:21.872Z"}	\N	35	1	30	1	Wagtail content types reporter
113	f	2023-09-02 11:49:38.462+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3t62c\\\\\\"></p><p data-block-key=\\\\\\"dmhum\\\\\\"></p><p data-block-key=\\\\\\"cssrb\\\\\\"><b>Usage suggestion for report types</b></p><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": false, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail content types reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 112, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-02T11:49:32.545Z"}	\N	35	1	30	1	Wagtail content types reporter
114	f	2023-09-02 11:50:30.445+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"3t62c\\\\\\"></p><p data-block-key=\\\\\\"dmhum\\\\\\"></p><p data-block-key=\\\\\\"cssrb\\\\\\"><b>Usage suggestion for report types</b></p><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><b>**One way to use it:**</b> A client has reported a particular page type is not working as expected. Run the command and use the contenttype ID to list admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail Content Types Reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail content types reporter", "content_type": 30, "live_revision": 113, "show_in_menus": false, "latest_revision": 113, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": "2023-09-02T11:49:38.673Z", "first_published_at": "2023-09-02T11:49:38.673Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T11:49:38.462Z"}	\N	35	1	30	1	Wagtail Content Types Reporter
115	f	2023-09-02 11:56:42.371+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3t62c\\\\\\">Usage suggestion for report types</h3><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><i>One way to use it:</i> A client has reported a particular page type is not working as expected in the admin interface. Let&#x27;s assume they mention it&#x27;s a custom page type called FeaturedPage that potentially could only ever be added as a child of a specific page type. It could be time consuming to browse through pages and find a page to test.</p><p data-block-key=\\\\\\"5hd98\\\\\\">Just run the command to see all content types and then enter the contenttype ID from the list to show admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail Content Types Reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Content Types Reporter", "content_type": 30, "live_revision": 114, "show_in_menus": false, "latest_revision": 114, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": "2023-09-02T11:50:30.588Z", "first_published_at": "2023-09-02T11:49:38.673Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T11:50:30.445Z"}	\N	35	1	30	1	Wagtail Content Types Reporter
116	f	2023-09-02 11:57:11.136+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3t62c\\\\\\">Usage suggestion:</h3><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><i>One way to use it:</i> A client has reported a particular page type is not working as expected in the admin interface. Let&#x27;s assume they mention it&#x27;s a custom page type called FeaturedPage that potentially could only ever be added as a child of a specific page type. It could be time consuming to browse through pages and find a page to test.</p><p data-block-key=\\\\\\"5hd98\\\\\\">Just run the command to see all content types and then enter the contenttype ID from the list to show admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail Content Types Reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Content Types Reporter", "content_type": 30, "live_revision": 115, "show_in_menus": false, "latest_revision": 115, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": "2023-09-02T11:56:42.516Z", "first_published_at": "2023-09-02T11:49:38.673Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T11:56:42.371Z"}	\N	35	1	30	1	Wagtail Content Types Reporter
117	f	2023-09-02 11:59:03.836+00	{"pk": 35, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7dats\\\\\\">This command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.</p><h2 data-block-key=\\\\\\"5dksi\\\\\\">Usage</h2><p data-block-key=\\\\\\"1rfac\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"4b71a3c5-383c-4f67-9e49-67c7d14494c2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py report_types\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"de2daa46-6eb0-4023-93ad-6eac732869f6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3t62c\\\\\\">How it might be useful:</h3><p data-block-key=\\\\\\"8gqq4\\\\\\">The command is designed to be used locally, during development and will require a good dataset to be most useful (e.g. a copy of the staging/production database)</p><p data-block-key=\\\\\\"fv78q\\\\\\">It is recommended that you run the command with a superuser account.</p><p data-block-key=\\\\\\"3kl0i\\\\\\"><i>Scenario:</i> A client has reported a particular page type is not working as expected in the admin interface. Let&#x27;s assume they mention it&#x27;s a custom page type called FeaturedPage that potentially could only ever be added as a child of a specific page type. It could be time consuming to browse through pages and find a page to test.</p><p data-block-key=\\\\\\"5hd98\\\\\\"><i>Usage: </i>Just run the command to see all content types and then enter the contenttype ID from the list to show admin edit urls for all objects of that type.</p>\\", \\"id\\": \\"b8d8e6fb-d0ca-42ce-aaaa-c6ad470f71a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_types.py\\\\r\\\\n\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.contrib.contenttypes.models import ContentType\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Report on content types in the project.\\\\r\\\\n\\\\r\\\\n    This command will generate a list of all the content types in the project\\\\r\\\\n    along with their contenttype ID. The contenttype ID can be entered to generate a report of all\\\\r\\\\n    the admin edit pages of that type.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Usage:\\\\r\\\\n        python manage.py report_types\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    excluded_apps = []\\\\r\\\\n\\\\r\\\\n    apps_prefix = \\\\\\"\\\\\\" # optional [your-project-directory]\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Report on content types in the project.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_warning(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_message_warning(\\\\\\"\\\\\\\\nUsing this command:\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"Enter a C-Type ID from the list below\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"to view a report of all the admin edit pages of that type.\\\\\\")\\\\r\\\\n\\\\r\\\\n        content_types = ContentType.objects.filter(\\\\r\\\\n            app_label__in=self.get_apps_for_report(self.apps_prefix, self.excluded_apps)\\\\r\\\\n        ).order_by(\\\\\\"model\\\\\\", \\\\\\"app_label\\\\\\")\\\\r\\\\n\\\\r\\\\n        if not content_types:\\\\r\\\\n            self.out_message_warning(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        # Generate the index\\\\r\\\\n        content_type_pages = self.get_contenttype_for_pages(content_types)\\\\r\\\\n        content_type_snippets = self.get_contenttype_for_snippets(content_types)\\\\r\\\\n        content_type_modeladmin = self.get_contenttypes_for_modeladmin(content_types)\\\\r\\\\n        content_type_settings = self.get_contenttypes_for_settings(content_types)\\\\r\\\\n\\\\r\\\\n        all_content_types = {\\\\r\\\\n            **content_type_pages,\\\\r\\\\n            **content_type_snippets,\\\\r\\\\n            **content_type_modeladmin,\\\\r\\\\n            **content_type_settings,\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        if not all(all_content_types):\\\\r\\\\n            self.out_message_error(\\\\\\"No content types found.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_table(content_type_pages, \\\\\\"Page\\\\\\")\\\\r\\\\n        self.out_table(content_type_snippets, \\\\\\"Snippet\\\\\\")\\\\r\\\\n        self.out_table(content_type_modeladmin, \\\\\\"ModelAdmin\\\\\\")\\\\r\\\\n        self.out_table(content_type_settings, \\\\\\"Settings\\\\\\")\\\\r\\\\n\\\\r\\\\n        # Get the index and generate the report\\\\r\\\\n        try:\\\\r\\\\n            index = int(input(\\\\\\"\\\\\\\\nC-Type ID: \\\\\\"))\\\\r\\\\n        except ValueError:\\\\r\\\\n            self.out_message_error(\\\\\\"Value must be an integer.\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        if index not in all_content_types:\\\\r\\\\n            self.out_message_error(f\\\\\\"Invalid C-Type ID: {index}\\\\\\")\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.out_edit_links(options, all_content_types[index])\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_settings(self, content_types):\\\\r\\\\n        content_type_settings = dict()\\\\r\\\\n        settings_models = []\\\\r\\\\n        for model in settings_registry:\\\\r\\\\n            settings_models.append(\\\\r\\\\n                f\\\\\\"{model._meta.app_label}.{model._meta.model_name}\\\\\\".lower()\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in settings_models:\\\\r\\\\n                content_type_settings[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_settings\\\\r\\\\n\\\\r\\\\n    def get_contenttypes_for_modeladmin(self, content_types):\\\\r\\\\n        content_type_modeladmin = dict()\\\\r\\\\n        modeladmin_models = [model.lower() for model in self.registered_modeladmin]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            model_str = f\\\\\\"{content_type.app_label}.{content_type.model}\\\\\\"\\\\r\\\\n            if model_str in modeladmin_models:\\\\r\\\\n                content_type_modeladmin[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_modeladmin\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_snippets(self, content_types):\\\\r\\\\n        content_type_snippets = dict()\\\\r\\\\n        snippet_models = [model.__name__.lower() for model in get_snippet_models()]\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if content_type.model in snippet_models:\\\\r\\\\n                content_type_snippets[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_snippets\\\\r\\\\n\\\\r\\\\n    def get_contenttype_for_pages(self, content_types):\\\\r\\\\n        content_type_pages = dict()\\\\r\\\\n\\\\r\\\\n        for content_type in content_types:\\\\r\\\\n            if issubclass(content_type.model_class(), Page):\\\\r\\\\n                content_type_pages[content_type.id] = [\\\\r\\\\n                    content_type.model_class().__name__,\\\\r\\\\n                    content_type.app_label,\\\\r\\\\n                ]\\\\r\\\\n\\\\r\\\\n        return content_type_pages\\\\r\\\\n\\\\r\\\\n    def out_table(self, data, model_type=None):\\\\r\\\\n        self.out_message_info(f\\\\\\"\\\\\\\\nIndex of {model_type} Types\\\\\\")\\\\r\\\\n\\\\r\\\\n        headers = [\\\\\\"Model\\\\\\", \\\\\\"App\\\\\\", \\\\\\"C-Type ID\\\\\\"]\\\\r\\\\n        max_col_width = self.calc_col_width(data)\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n        self.out_message(\\\\r\\\\n            \\\\\\" \\\\\\".join([f\\\\\\"{header: <{max_col_width}}\\\\\\" for header in headers])\\\\r\\\\n        )\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n        for key, row in data.items():\\\\r\\\\n            self.out_message(\\\\r\\\\n                \\\\\\" \\\\\\".join([f\\\\\\"{col: <{max_col_width}}\\\\\\" for col in row]) + f\\\\\\" {key}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * max_col_width * len(headers))\\\\r\\\\n\\\\r\\\\n    def calc_col_width(self, data):\\\\r\\\\n        max_col_width = 0\\\\r\\\\n        for row in data.values():\\\\r\\\\n            for col in row:\\\\r\\\\n                if len(col) > max_col_width:\\\\r\\\\n                    max_col_width = len(col)\\\\r\\\\n\\\\r\\\\n        max_col_width += 2  # add some right padding\\\\r\\\\n        return max_col_width\\\\r\\\\n\\\\r\\\\n    def out_edit_links(self, options, data):\\\\r\\\\n        model = apps.get_model(data[1], data[0])\\\\r\\\\n        objects = model.objects.all()\\\\r\\\\n\\\\r\\\\n        self.out_message_success(f\\\\\\"\\\\\\\\nEdit Links for {data[0]}\\\\\\")\\\\r\\\\n        self.out_message(\\\\\\"-\\\\\\" * 70)\\\\r\\\\n\\\\r\\\\n        title_field = None\\\\r\\\\n\\\\r\\\\n        if hasattr(model, \\\\\\"title\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"title\\\\\\"\\\\r\\\\n        elif hasattr(model, \\\\\\"name\\\\\\"):\\\\r\\\\n            title_field = \\\\\\"name\\\\\\"\\\\r\\\\n\\\\r\\\\n        for obj in objects:\\\\r\\\\n            if title_field:\\\\r\\\\n                t = getattr(obj, title_field)\\\\r\\\\n                title = t[:30] + \\\\\\"...\\\\\\" if len(t) > 30 else t\\\\r\\\\n                self.out_message(f\\\\\\"{title}\\\\\\")\\\\r\\\\n            self.out_message(f\\\\\\"{self.get_admin_edit_url(options, obj)}\\\\\\\\n\\\\\\\\n\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        self.stdout.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_apps_for_report(apps_prefix=None, excluded_apps=[]):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Return a list of apps we care about for the page types report.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        if not apps_prefix:\\\\r\\\\n            apps = [\\\\r\\\\n                app\\\\r\\\\n                for app in settings.INSTALLED_APPS\\\\r\\\\n                if not app.split(\\\\\\".\\\\\\")[0] in excluded_apps\\\\r\\\\n            ]\\\\r\\\\n            return apps\\\\r\\\\n\\\\r\\\\n        return [\\\\r\\\\n            app.split(\\\\\\".\\\\\\")[1]\\\\r\\\\n            for app in settings.INSTALLED_APPS\\\\r\\\\n            if app.startswith(apps_prefix)\\\\r\\\\n        ]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4414623a-cca3-4896-834d-8f5903b7f84c\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010005", "slug": "wagtail-content-types-reporter", "depth": 4, "owner": 1, "title": "Wagtail Content Types Reporter", "locale": 1, "locked": false, "excerpt": "The command will find all objects of a specific content type (limited by configuration) and output a report of links to the admin edit pages.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-content-types-reporter/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Content Types Reporter", "content_type": 30, "live_revision": 116, "show_in_menus": false, "latest_revision": 116, "translation_key": "3e5679b7-3a95-42b8-917c-af1f834b3be6", "last_published_at": "2023-09-02T11:57:11.284Z", "first_published_at": "2023-09-02T11:49:38.673Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T11:57:11.136Z"}	\N	35	1	30	1	Wagtail Content Types Reporter
118	f	2023-09-02 12:00:18.62+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql:5.7 (this is a limitation of my PythonAnywhere account)</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\"><a id=\\\\\\"26\\\\\\" linktype=\\\\\\"page\\\\\\">Part 2</a> - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 67, "show_in_menus": false, "latest_revision": 67, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-08-30T16:17:49.416Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:17:49.229Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
119	f	2023-09-02 12:00:27.94+00	{"pk": 26, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Part 2 of Deploy Wagtail CMS to PythonAnywhere\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"dafc466a-f9ef-4897-8682-0658c1f3c763\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b4w8n\\\\\\">Following on from <a id=\\\\\\"6\\\\\\" linktype=\\\\\\"page\\\\\\">Deploy Wagtail CMS to PythonAnywhere</a> the chapters here add some basic frontend styles and scripts.</p><p data-block-key=\\\\\\"7mhb9\\\\\\">The main purpose is to show how to setup Webpack to compile styles and scripts ready for production.</p>\\", \\"id\\": \\"13ba48fb-8a72-4539-ad54-0339d1bafe75\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 2, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"3a3994ae-acca-4c56-afe7-7389ae79a34a\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010002", "slug": "deploy-wagtail-cms-to-pythonanywhere-part-2", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere (part 2)", "locale": 1, "locked": false, "excerpt": "Setting up Webpack to compile styles and scripts ready for production.", "expired": false, "alias_of": null, "numchild": 2, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere-part-2/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere (part 2)", "content_type": 30, "live_revision": 74, "show_in_menus": false, "latest_revision": 74, "translation_key": "e86d3215-6054-4473-a232-ecb59f5c2b82", "last_published_at": "2023-08-30T16:52:23.199Z", "first_published_at": "2023-08-30T16:16:25.552Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:52:23.033Z"}	\N	26	1	30	1	Deploy Wagtail CMS to PythonAnywhere (part 2)
120	f	2023-09-03 10:23:13.766+00	{"pk": 30, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"An alternative Wagtail richtext filter that can be configured in your apps settings.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"367a7ef0-7148-4343-a455-0c27c9c3ae98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ks518\\\\\\">It can parse the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.</p><p data-block-key=\\\\\\"bcu68\\\\\\">Once the package is added to your Wagtail site, add one or two pieces of configuration to your settings then use the f_richtext template tag where you want the css classes or inline styles added to the HTML content.</p><p data-block-key=\\\\\\"egaag\\\\\\">It&#x27;s especially useful if you are including a CSS framework such <a href=\\\\\\"https://bulma.io/\\\\\\">Bulma</a>, <a href=\\\\\\"https://codyhouse.co/\\\\\\">CodyHouse</a>, <a href=\\\\\\"https://tachyons.io/\\\\\\">Tachyons</a>, <a href=\\\\\\"https://tailwindcss.com/\\\\\\">Tailwind</a> other frameworks are available :)</p><p data-block-key=\\\\\\"3lo1p\\\\\\">Source code: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext\\\\\\">https://github.com/wagtail-packages/wagtail-f-richtext</a></p><h2 data-block-key=\\\\\\"d0n2d\\\\\\">Installation</h2><p data-block-key=\\\\\\"39oaa\\\\\\">Install the package into your python environment.</p>\\", \\"id\\": \\"a6f1f355-2a6f-4130-b51e-dc210edb16ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-f-richext\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"554ef76d-adb3-40c8-be28-f61507e709b3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1gvir\\\\\\">Add the package &quot;wagtail_f_richtext&quot; to your INSTALLED_APS</p><p data-block-key=\\\\\\"ff2m2\\\\\\">Any css framework styles will need to be installed before you will see any style changes for richtext content. If you are using only the inline styles you should see the effect of them applied when a page is viewed.</p><h2 data-block-key=\\\\\\"1l769\\\\\\">Using the f_richtext filter</h2><p data-block-key=\\\\\\"cjkpb\\\\\\"><b>with a RichText field</b></p>\\", \\"id\\": \\"e61a59e0-3e26-4341-944e-65b6498abfe5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ page.body|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9e4a6af-67b3-41ff-993d-6444f135435b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"25bo7\\\\\\"><b>with a RichText block</b></p>\\", \\"id\\": \\"9ea6842b-bb65-4c4b-9b44-42d9d96e9706\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- will add classes to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"framework\\\\\\" }}\\\\r\\\\n\\\\r\\\\n<!-- will add inline styles to the HTML tags -->\\\\r\\\\n{{ value|f_richtext:\\\\\\"inline_styles\\\\\\" }}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"9123d45e-8d11-455c-891b-ad7e72088c8e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6f5gl\\\\\\"><i>You can use it without a parameter</i> <i>{{ page.body|f_richtext }}</i> <i>and it will work just like the Wagtail core provided filter (not required)</i></p><p data-block-key=\\\\\\"4v2l1\\\\\\">Sample framework rendered:</p>\\", \\"id\\": \\"27fe4916-521a-4b1c-a267-34027fd55033\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div class=\\\\\\"text-component\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\">A paragraph <b class=\\\\\\"font-bold\\\\\\">Vulputate Vestibulum</b> <i class=\\\\\\"font-italic\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 class=\\\\\\"heading-2\\\\\\" data-block-key=\\\\\\"fkden\\\\\\">Heading 2</h2>\\\\r\\\\n <ul class=\\\\\\"list list--ul\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol class=\\\\\\"list list--ol\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"f-richtext-image f-richtext-image--right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"5e59332b-563e-41ce-ba8b-847a7fad6485\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"938os\\\\\\">Sample inline styles rendered</p>\\", \\"id\\": \\"d8781440-cf57-4bd7-91fe-52107d1740da\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<div style=\\\\\\"overflow:hidden;\\\\\\">\\\\r\\\\n <p data-block-key=\\\\\\"92eli\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">A paragraph <b style=\\\\\\"font-weight: bold;\\\\\\">Vulputate Vestibulum</b> <i style=\\\\\\"font-style: italic;\\\\\\">Commodo</i></p>\\\\r\\\\n <h2 data-block-key=\\\\\\"fkden\\\\\\" style=\\\\\\"margin-bottom: 1em;\\\\\\">Heading 2</h2>\\\\r\\\\n <ul style=\\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"fe5cv\\\\\\">UL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"6ort3\\\\\\">UL List Item 2</li>\\\\r\\\\n </ul>\\\\r\\\\n <ol style=\\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\">\\\\r\\\\n <li data-block-key=\\\\\\"d5s3r\\\\\\">OL List Item 1</li>\\\\r\\\\n <li data-block-key=\\\\\\"5l47j\\\\\\">OL List Item 2</li>\\\\r\\\\n </ol>\\\\r\\\\n <img alt=\\\\\\"IMG_4511\\\\\\" class=\\\\\\"richtext-image right\\\\\\" height=\\\\\\"375\\\\\\" src=\\\\\\"/media/images/IMG_4511.width-500.jpg\\\\\\" style=\\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\" width=\\\\\\"500\\\\\\">\\\\r\\\\n <div style=\\\\\\"clear: both;\\\\\\"></div>\\\\r\\\\n</div>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"b904ea93-47cc-49a4-a9d6-3a439cd1e90a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"b9vdu\\\\\\">Configuration</h2><p data-block-key=\\\\\\"dn5vr\\\\\\">You need to add one or both of these settings to your apps settings.</p><ul><li data-block-key=\\\\\\"3iv53\\\\\\">F_RICHTEXT_FRAMEWORK_CONFIG</li><li data-block-key=\\\\\\"2755j\\\\\\">F_RICHTEXT_INLINE_CONFIG</li></ul><h3 data-block-key=\\\\\\"9ovvc\\\\\\">Example for adding classes to HTML tags</h3>\\", \\"id\\": \\"648be6f5-e862-4a5d-9eb3-50a5bccaed6c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_FRAMEWORK_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"classes\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"heading-1\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"heading-2\\\\\\",\\\\r\\\\n    \\\\\\"ul\\\\\\": \\\\\\"list list--ul\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"list list--ol\\\\\\",\\\\r\\\\n   \\\\\\"a\\\\\\": \\\\\\"color-contrast-higher\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-bold\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-italic\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a class\\\\r\\\\n \\\\\\"wrapper_classes\\\\\\": [\\\\r\\\\n   \\\\\\"text-component\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes\\\\r\\\\n \\\\\\"alignment_classes\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"f-richtext-image f-richtext-image--left\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"f-richtext-image f-richtext-image--right\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n  \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"c228fdb7-a942-4b10-a137-d7fc3a6a71d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"588ok\\\\\\">Example for adding inline styles</h3>\\", \\"id\\": \\"0823824f-5900-4d66-aa72-97e27ac7ea2e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_INLINE_CONFIG = {\\\\r\\\\n # target html tags\\\\r\\\\n \\\\\\"styles\\\\\\": {\\\\r\\\\n   \\\\\\"h1\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h2\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h3\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h4\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h5\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"h6\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"p\\\\\\": \\\\\\"margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ul\\\\\\": \\\\\\"float: none; clear: both; list-style: disc; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"ol\\\\\\": \\\\\\"float: none; clear: both; list-style: decimal; margin-left: 2em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"code\\\\\\": \\\\\\"font-family: monospace; background-color: #f5f5f5; padding: 0.25rem 0.5rem;\\\\\\",\\\\r\\\\n   \\\\\\"sub\\\\\\": \\\\\\"vertical-align: sub; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"sup\\\\\\": \\\\\\"vertical-align: super; font-size: smaller;\\\\\\",\\\\r\\\\n   \\\\\\"div\\\\\\": \\\\\\"float: none; clear: both;\\\\\\",\\\\r\\\\n   \\\\\\"iframe\\\\\\": \\\\\\"max-width: 100%; width: 720px; height: 400px; margin-top: 1em; margin-bottom: 1em;\\\\\\",\\\\r\\\\n   \\\\\\"b\\\\\\": \\\\\\"font-weight: bold;\\\\\\",\\\\r\\\\n   \\\\\\"i\\\\\\": \\\\\\"font-style: italic;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # wrap the richtext content with a style\\\\r\\\\n \\\\\\"wrapper_styles\\\\\\": [\\\\r\\\\n   \\\\\\"overflow:hidden;\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # swap the richtext image alignment classes for an inline style\\\\r\\\\n \\\\\\"alignment_styles\\\\\\": {\\\\r\\\\n   \\\\\\"richtext-image left\\\\\\": \\\\\\"float: left; margin-right: 1rem; margin-left: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image right\\\\\\": \\\\\\"float: right; margin-left: 1rem; margin-right: 0; margin-bottom: 1rem; height: auto;\\\\\\",\\\\r\\\\n   \\\\\\"richtext-image full-width\\\\\\": \\\\\\"margin: 1em 0; width: 100%; height: auto;\\\\\\",\\\\r\\\\n },\\\\r\\\\n # remove any empty HTML tags (blank lines in the richtext editor)\\\\r\\\\n \\\\\\"remove_empty_tags\\\\\\": [\\\\r\\\\n   \\\\\\"p\\\\\\",\\\\r\\\\n ],\\\\r\\\\n # add a clearfix to the end of the content\\\\r\\\\n \\\\\\"append_clearfix\\\\\\": True,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f180ed1a-8d1b-4ebf-ac5f-972f8a961591\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9r5bk\\\\\\">Optional</h2><h3 data-block-key=\\\\\\"1a1b1\\\\\\">Use your own parser class</h3><p data-block-key=\\\\\\"umdb\\\\\\">The parser class can be extended to add your own parsing requirements.</p><p data-block-key=\\\\\\"bf3q1\\\\\\">Create your own class that inherits from <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py\\\\\\">fRichTextParser</a> and add the following to your apps settings.</p>\\", \\"id\\": \\"db18cca7-c24e-44b1-b743-f577cf44208e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_CLASS=\\\\\\"the.dotted.path.to.your.own.Class\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"25ff7112-2e8a-43de-8649-ca77d320c5de\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"h1i7\\\\\\">Use your own runner function</h3><p data-block-key=\\\\\\"btaqf\\\\\\">The order of the parsing and loading of your configuration is done in the runner method that is called by the f_richtext filter.</p><p data-block-key=\\\\\\"1ouii\\\\\\">Create your own <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-f-richtext/blob/release/wagtail_f_richtext/parser.py#L102\\\\\\">runner function</a> in a suitable place and add the following settings to your app.</p>\\", \\"id\\": \\"bef7429f-d079-4dbe-866a-6ed0b2496b2c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"F_RICHTEXT_PARSER_RUNNER=\\\\\\"the.dotted.path.to.your.own.function\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"daebb110-677b-432b-be80-d7e1056b4896\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020003", "slug": "wagtail-formatted-richtext", "depth": 4, "owner": 1, "title": "Wagtail (formatted) richtext", "locale": 1, "locked": false, "excerpt": "Parses the content in a RichText field in the same way the Wagtail richtext filter works and add classes or inline styles to the HTML.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-formatted-richtext/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail (formatted) richtext", "content_type": 32, "live_revision": 94, "show_in_menus": false, "latest_revision": 94, "translation_key": "a547de4d-f2ad-441f-b4b5-7de9a2746eb9", "last_published_at": "2023-09-01T16:56:10.788Z", "pypi_package_name": "wagtail-f-richtext", "first_published_at": "2023-09-01T16:49:28.420Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:56:10.662Z"}	\N	30	1	32	1	Wagtail (formatted) richtext
121	f	2023-09-03 10:24:08.089+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><p data-block-key=\\\\\\"4lpfj\\\\\\">Source code: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot\\\\\\">https://github.com/wagtail-packages/wagtail-honeypot</a></p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h2><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h2><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible to when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/tree/release/wagtail_honeypot/static\\\\\\">basic css and javascript</a> you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"kyjx1\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"fqqdi\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"2209fb70-5a1c-44a3-bcfe-7144afc899ba\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 88, "show_in_menus": false, "latest_revision": 88, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-01T16:38:31.807Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:38:31.653Z"}	\N	29	1	32	1	Wagtail Honeypot
122	f	2023-09-03 10:24:35.927+00	{"pk": 20, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Create a page in Wagtail CMS that has a corresponding QR Code.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"1acd834a-51ad-4914-9519-7e925d493f51\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"4t6t8\\\\\\">Features</h3><ul><li data-block-key=\\\\\\"2jrqb\\\\\\">The generated QR Code is saved as an EPS document that can be printed.</li><li data-block-key=\\\\\\"f8jq6\\\\\\">When scanned it will link to the page via a redirect using the page ID</li><li data-block-key=\\\\\\"7bu10\\\\\\">You can download the generated QR code and use it in printed advertising like posters, postcards, banners, beer mats and more.</li><li data-block-key=\\\\\\"7dpo\\\\\\">When saving a draft or publishing a page you can add a one-time email address to send the qr-code to as an attachment.</li></ul><p data-block-key=\\\\\\"fc64u\\\\\\">Source code: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-qrcode\\\\\\">https://github.com/wagtail-packages/wagtail-qrcode</a></p>\\", \\"id\\": \\"fe13f435-0cc5-48a2-9ea7-cfa2a33b6f85\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 1, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"85b81f54-c6a2-4cd3-b14a-e53c2196ca0f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"dijlj\\\\\\">Installation</h2><p data-block-key=\\\\\\"7u34j\\\\\\">To add the package to your own Wagtail CMS, install the package into your environment.</p>\\", \\"id\\": \\"0838dd8f-4d04-4424-a092-4865e3ac866b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-qrcode\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0575ffba-407d-4467-bbce-ab04de4249a4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b7qjn\\\\\\">Add the package to your site settings.</p><p data-block-key=\\\\\\"6sdfi\\\\\\"></p>\\", \\"id\\": \\"25c415dd-bc44-42fa-8484-8788fc9339f1\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    # ...\\\\r\\\\n    \\\\\\"wagtail_qrcode\\\\\\",\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ee4f6415-64ee-43a4-b0fd-cc8622fb4b7a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"5rig1\\\\\\">Add this setting to your Wagtail settings. It is used to generate the base url for the QR code</p>\\", \\"id\\": \\"92963930-c29c-4dfb-9e5f-11130950484e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE_BASE_URL = \\\\\\"your-site-url\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ebdbf23e-1ed4-4cb6-b5c7-3141237d324c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">You&#x27;ll likely want to test the QRcode using another device. Your device will need to be able to resolve your testing domain and localhost probably won&#x27;t work.</p><p data-block-key=\\\\\\"6rr4a\\\\\\">Try using a service like <a href=\\\\\\"https://ngrok.com/\\\\\\">ngrok</a> to set up a url to your localhost and use that domain name as in the WAGTAIL_QR_CODE_BASE_URL setting.</p><p data-block-key=\\\\\\"c36lb\\\\\\">This is the command I use to start ngrok.</p><p data-block-key=\\\\\\"9k5fk\\\\\\">./ngrok http 8000 --scheme=http</p>\\", \\"id\\": \\"b59d09ba-5c3b-40cf-a8e5-7283a16803cd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"77a9u\\\\\\">Using the QRCode page model mixin</h3><p data-block-key=\\\\\\"1hl5j\\\\\\">Use the model mixin in a new or an existing page model.</p>\\", \\"id\\": \\"0524fecb-d08a-4459-ad59-0644c0887a23\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.admin_forms import QrCodeEmailForm\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels + [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldPanel(\\\\\\"email_address\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_subject\\\\\\"),\\\\r\\\\n                FieldPanel(\\\\\\"email_body\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            heading=\\\\\\"Send QR code via email\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n    base_form_class = QrCodeEmailForm\\", \\"language\\": \\"python\\"}, \\"id\\": \\"87ad9df2-7f84-4044-8207-3c224b8f7b54\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"csma4\\\\\\">This will add a new tab in the page editor QR Code where you can preview the generated QR code and access the downloadable print ready EPS file. (the file can also be found in the documents app)</p><p data-block-key=\\\\\\"2p8mn\\\\\\"><b>If you don&#x27;t need to be able to send the qrcode via email your page model can be</b></p>\\", \\"id\\": \\"efc26582-c6a7-49b1-b466-547090468a8a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# models.py\\\\r\\\\n\\\\r\\\\nfrom wagtail.admin.panels import (\\\\r\\\\n    FieldPanel,\\\\r\\\\n    MultiFieldPanel,\\\\r\\\\n    ObjectList,\\\\r\\\\n    TabbedInterface,\\\\r\\\\n)\\\\r\\\\nfrom wagtail.models import Page\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.models import QRCodeMixin\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass QRCodePage(QRCodeMixin, Page):\\\\r\\\\n    qrcode_panels = QRCodeMixin.panels\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(Page.content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n            ObjectList(qrcode_panels, heading=\\\\\\"QR Code\\\\\\", classname=\\\\\\"qr-code\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"800416ee-4feb-4003-a88d-c043f8b3c1e0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"bemqp\\\\\\">URLS</h3><p data-block-key=\\\\\\"7jbb4\\\\\\">Include the wagtail-qrcode urls in your site urls before wagtail_urls.</p>\\", \\"id\\": \\"f4859a40-34fe-4677-8c64-aa073affa6e3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"3huyc\\\\\\">The url provides the redirect endpoint when the qr-code is scanned and viewed in a browser.</p>\\", \\"id\\": \\"ea569665-2e5e-4418-894c-156d79694ff0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"urlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", include(\\\\\\"wagtail_qrcode.urls\\\\\\")),\\\\r\\\\n    # ...\\\\r\\\\n]\\\\r\\\\n\\\\r\\\\n# or import the view and pass the view in the path function\\\\r\\\\n\\\\r\\\\nfrom wagtail_qrcode.views import qr_code_page_view\\\\r\\\\n\\\\r\\\\nurlpatterns = [\\\\r\\\\n    # ...\\\\r\\\\n    path(\\\\\\"qr-code/\\\\\\", qr_code_page_view, name=\\\\\\"qr-code-view\\\\\\"),\\\\r\\\\n    # ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"585deb63-f3a4-44a3-b51e-e2f63b50546c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"9gkkh\\\\\\">Configuration</h2><p data-block-key=\\\\\\"18c5k\\\\\\">Set the configuration (optional, these are the defaults)</p><ul><li data-block-key=\\\\\\"8p35o\\\\\\">collection_name: is automatically created and used as the collection for all generated QR codes</li><li data-block-key=\\\\\\"9cqgq\\\\\\">scale: the size of the dots in the QR code</li><li data-block-key=\\\\\\"29rgi\\\\\\">quiet_zone: the plain border around the QR code</li><li data-block-key=\\\\\\"4q1ts\\\\\\">svg_has_xml_declaration: does the QR code SVG have an XML declaration</li><li data-block-key=\\\\\\"62mh8\\\\\\">svg_has_doc_type_declaration: does the QR code SVG have an HTML doc-type</li></ul>\\", \\"id\\": \\"f35dd9a1-d9e7-4fa7-8e32-460f9ac598ef\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_QR_CODE = {\\\\r\\\\n    \\\\\\"collection_name\\\\\\": \\\\\\"QR Codes\\\\\\",\\\\r\\\\n    \\\\\\"scale\\\\\\": 3,\\\\r\\\\n    \\\\\\"quiet_zone\\\\\\": 6,\\\\r\\\\n    \\\\\\"svg_has_xml_declaration\\\\\\": False,\\\\r\\\\n    \\\\\\"svg_has_doc_type_declaration\\\\\\": False,\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4d904202-2c05-467a-92cd-fad0619a3435\\"}]", "date": "2023-08-29", "live": true, "path": "0001000100020001", "slug": "wagtail-qr-code", "depth": 4, "owner": 1, "title": "Wagtail QR code", "locale": 1, "locked": false, "excerpt": "Create a page in Wagtail CMS that has a corresponding QR Code.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-qr-code/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail QR code", "content_type": 32, "live_revision": 82, "show_in_menus": false, "latest_revision": 82, "translation_key": "040dc038-f341-426e-b654-559598abdc1d", "last_published_at": "2023-09-01T16:15:35.401Z", "pypi_package_name": "wagtail-qrcode", "first_published_at": "2023-08-29T12:27:18.553Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-01T16:15:35.285Z"}	\N	20	1	32	1	Wagtail QR code
123	f	2023-09-03 21:22:33.45+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 51, "show_in_menus": false, "latest_revision": 51, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-08-30T16:05:07.870Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T15:22:59.418Z"}	\N	22	1	28	1	Setup to use Mysql
124	f	2023-09-03 21:23:29.866+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</p><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><p data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</p>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 123, "show_in_menus": false, "latest_revision": 123, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:22:33.764Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:22:33.450Z"}	\N	22	1	28	1	Setup to use Mysql
125	f	2023-09-03 21:23:52.732+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</p><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><p data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</p>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 123, "show_in_menus": false, "latest_revision": 124, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:22:33.764Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-03T21:23:29.866Z"}	\N	22	1	28	1	Setup to use Mysql
126	f	2023-09-03 21:24:09.665+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 123, "show_in_menus": false, "latest_revision": 125, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:22:33.764Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-03T21:23:52.732Z"}	\N	22	1	28	1	Setup to use Mysql
127	f	2023-09-03 21:24:16.921+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 123, "show_in_menus": false, "latest_revision": 126, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:22:33.764Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-03T21:24:09.665Z"}	\N	22	1	28	1	Setup to use Mysql
128	f	2023-09-03 21:26:52.529+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h2><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 127, "show_in_menus": false, "latest_revision": 127, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:24:17.060Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:24:16.921Z"}	\N	22	1	28	1	Setup to use Mysql
129	f	2023-09-03 21:27:39.617+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h3><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup will be added that can be used to spin up the database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 127, "show_in_menus": false, "latest_revision": 128, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:24:17.060Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-03T21:26:52.529Z"}	\N	22	1	28	1	Setup to use Mysql
130	f	2023-09-03 21:29:05.845+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h3><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup that can be used to run up the Mysql database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 129, "show_in_menus": false, "latest_revision": 129, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:27:39.756Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:27:39.617Z"}	\N	22	1	28	1	Setup to use Mysql
131	f	2023-09-03 21:31:03.957+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h3><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup that can be used to run up the Mysql database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find and update the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change is to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file/</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 130, "show_in_menus": false, "latest_revision": 130, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:29:06.024Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:29:05.845Z"}	\N	22	1	28	1	Setup to use Mysql
132	f	2023-09-03 21:32:57.987+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h3><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST='127.0.0.1'\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup that can be used to run up the Mysql database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:5.7 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find and update the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change it to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 131, "show_in_menus": false, "latest_revision": 131, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:31:04.136Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:31:03.957Z"}	\N	22	1	28	1	Setup to use Mysql
142	f	2023-09-24 16:44:25.443+00	{"pk": 34, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"7d51r\\\\\\">Why?</h2><p data-block-key=\\\\\\"c6ujj\\\\\\">As with any software It&#x27;s a good idea to keep the version you are using as up to date as possible. Wagtail has a frequent release policy in place: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/upgrading.html#\\\\\\">https://docs.wagtail.org/en/stable/releases/upgrading.html#</a> Some releases change how features you may already be using should be implemented. <i>Always follow the upgrading documentation for the release you are upgrading to.</i></p><p data-block-key=\\\\\\"cdra3\\\\\\">However, confirming all is well can be a challenge and finding pieces of a site that aren&#x27;t working is hard. For example checking every content type in the admin and frontend still works as expected can be very time consuming.</p><p data-block-key=\\\\\\"djpli\\\\\\">I created this management command that can be run in development.</p><p data-block-key=\\\\\\"ben5k\\\\\\">It will find all content types (Pages, Snippets, Settings, Images, Documents) and output a report in the console for each content type. You will need to update <i>registered_modeladmin</i> to suit your own app.</p><p data-block-key=\\\\\\"4hq02\\\\\\">When running the command you&#x27;ll need to specify 2 params (a username and a password), create this with python manage.py createsuperuser</p><p data-block-key=\\\\\\"1i72s\\\\\\">The report will assume http://localhost:8000 is to be used in the report. If you see an error the url for the error should be available to copy and paste into a browser for further investigation. You can override the url value to use in the console by passing in --report-url option.</p>\\", \\"id\\": \\"63f26538-d5ea-4b24-9d19-8430f8386d4c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# app-name/management/commands/report_responses.py\\\\r\\\\n\\\\r\\\\nimport requests\\\\r\\\\nfrom django.apps import apps\\\\r\\\\nfrom django.conf import settings\\\\r\\\\nfrom django.core.management.base import BaseCommand\\\\r\\\\nfrom wagtail.admin.admin_url_finder import AdminURLFinder\\\\r\\\\nfrom wagtail.admin.utils import get_admin_base_url\\\\r\\\\nfrom wagtail.contrib.settings.registry import registry as settings_registry\\\\r\\\\nfrom wagtail.documents import get_document_model\\\\r\\\\nfrom wagtail.images import get_image_model\\\\r\\\\nfrom wagtail.models import get_page_models\\\\r\\\\nfrom wagtail.snippets.models import get_snippet_models\\\\r\\\\n\\\\r\\\\n\\\\r\\\\nclass Command(BaseCommand):\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    Checks the admin and frontend responses for models incl pages, snippets, settings and modeladmin.\\\\r\\\\n\\\\r\\\\n    The command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\r\\\\n\\\\r\\\\n    Basic usage:\\\\r\\\\n        python manage.py report_responses <username> <password>\\\\r\\\\n\\\\r\\\\n    Options:\\\\r\\\\n\\\\r\\\\n        --host\\\\r\\\\n            The URL to check. Defaults to the value of ADMIN_BASE_URL in settings.\\\\r\\\\n\\\\r\\\\n        --report-url\\\\r\\\\n            The URL to use for the report. e.g. http://staging.example.com\\\\r\\\\n\\\\r\\\\n    Example:\\\\r\\\\n        python manage.py report_responses <username> <password> \\\\\\\\\\\\r\\\\n            --report-url http://staging.example.com\\\\r\\\\n\\\\r\\\\n        This will alter the displayed URLs in the report but the tested URL will still\\\\r\\\\n        use the --host option.\\\\r\\\\n    \\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    help = \\\\\\"Checks the admin and frontend responses for models including pages, snippets, settings and modeladmin.\\\\\\"\\\\r\\\\n\\\\r\\\\n    checked_url = None\\\\r\\\\n    report_url = None\\\\r\\\\n    report_lines = []\\\\r\\\\n\\\\r\\\\n    registered_modeladmin = [\\\\r\\\\n        # add model admin models as they cannot be auto detected. For example ...\\\\r\\\\n        \\\\\\"events.EventType\\\\\\",\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    def add_arguments(self, parser):\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"username\\\\\\",\\\\r\\\\n            help=\\\\\\"The username to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"password\\\\\\",\\\\r\\\\n            help=\\\\\\"The password to use for login\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--host\\\\\\",\\\\r\\\\n            default=get_admin_base_url(),\\\\r\\\\n            help=\\\\\\"The URL to check\\\\\\",\\\\r\\\\n        )\\\\r\\\\n        parser.add_argument(\\\\r\\\\n            \\\\\\"--report-url\\\\\\",\\\\r\\\\n            help=\\\\\\"The URL to use for the report. e.g. http://staging.example.com\\\\\\",\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n    def handle(self, *args, **options):\\\\r\\\\n        # Check if the command is enabled in settings\\\\r\\\\n        if not settings.DEBUG:\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                \\\\\\"Command is only available in DEBUG mode. Set DEBUG=True in your settings to enable it.\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            return\\\\r\\\\n\\\\r\\\\n        self.checked_url = options[\\\\\\"host\\\\\\"]\\\\r\\\\n        self.report_url = (\\\\r\\\\n            options[\\\\\\"report_url\\\\\\"].strip(\\\\\\"/\\\\\\") if options[\\\\\\"report_url\\\\\\"] else None\\\\r\\\\n        )\\\\r\\\\n\\\\r\\\\n        with requests.Session() as session:\\\\r\\\\n            url = f\\\\\\"{options['host']}/admin/login/\\\\\\"\\\\r\\\\n\\\\r\\\\n            try:\\\\r\\\\n                session.get(url)\\\\r\\\\n            except requests.exceptions.ConnectionError:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Is the server running?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.InvalidSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Invalid schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n            except requests.exceptions.MissingSchema:\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not connect to {options['host']}. Missing schema\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Attempt to log in\\\\r\\\\n            logged_in = session.post(\\\\r\\\\n                url,\\\\r\\\\n                data=dict(\\\\r\\\\n                    username=options[\\\\\\"username\\\\\\"],\\\\r\\\\n                    password=options[\\\\\\"password\\\\\\"],\\\\r\\\\n                    csrfmiddlewaretoken=session.cookies[\\\\\\"csrftoken\\\\\\"],\\\\r\\\\n                    next=\\\\\\"/admin/\\\\\\",\\\\r\\\\n                ),\\\\r\\\\n            ).content\\\\r\\\\n\\\\r\\\\n            if \\\\\\"Forgotten password?\\\\\\" in logged_in.decode(\\\\\\"utf-8\\\\\\"):\\\\r\\\\n                # Login failed because the response isn't the Dashboard page\\\\r\\\\n                self.out_message_error(\\\\r\\\\n                    f\\\\\\"Could not log in to {options['host']}. Is the username and password correct?\\\\\\"\\\\r\\\\n                )\\\\r\\\\n                return\\\\r\\\\n\\\\r\\\\n            # Reports\\\\r\\\\n            self.report_admin_home(session, options)\\\\r\\\\n            self.report_page(session, options)\\\\r\\\\n            self.report_snippets(session, options)\\\\r\\\\n            self.report_modeladmin(session, options)\\\\r\\\\n            self.report_settings_models(session, options)\\\\r\\\\n            self.report_documents(session, options)\\\\r\\\\n            self.report_images(session, options)\\\\r\\\\n\\\\r\\\\n    def report_admin_home(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the admin home page (Dashboard) ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        admin_home_resp = session.get(f\\\\\\"{options['host']}/admin/\\\\\\")\\\\r\\\\n\\\\r\\\\n        if admin_home_resp.status_code == 200:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_success(f\\\\\\"{options['host']}/admin/ \\\\u2190 200\\\\\\")\\\\r\\\\n        else:\\\\r\\\\n            message = \\\\\\"\\\\\\\\nAdmin home page \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n            self.out_message_error(\\\\r\\\\n                f\\\\\\"{options['host']}/admin/ \\\\u2190 {admin_home_resp.status_code}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n\\\\r\\\\n    def report_page(self, session, options):\\\\r\\\\n        page_models = self.filter_page_models(get_page_models())\\\\r\\\\n\\\\r\\\\n        model_index = []\\\\r\\\\n        results = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if item := page_model.objects.first():\\\\r\\\\n                model_index.append(item.__class__.__name__)\\\\r\\\\n                results.append(\\\\r\\\\n                    {\\\\r\\\\n                        \\\\\\"title\\\\\\": item.title,\\\\r\\\\n                        \\\\\\"url\\\\\\": f\\\\\\"{options['host']}{item.url}\\\\\\",\\\\r\\\\n                        \\\\\\"id\\\\\\": item.id,\\\\r\\\\n                        \\\\\\"editor_url\\\\\\": f\\\\\\"{self.get_admin_edit_url(options, item)}\\\\\\",\\\\r\\\\n                        \\\\\\"class_name\\\\\\": item.__class__.__name__,\\\\r\\\\n                    }\\\\r\\\\n                )\\\\r\\\\n\\\\r\\\\n        # Print the index\\\\r\\\\n        message = f\\\\\\"\\\\\\\\nChecking the admin and frontend responses of {len(results)} page types ...\\\\\\"\\\\r\\\\n        self.out_message_info(message)\\\\r\\\\n\\\\r\\\\n        for count, content_type in enumerate(sorted(model_index)):\\\\r\\\\n            message = (\\\\r\\\\n                f\\\\\\" {count + 1}. {content_type}\\\\\\"\\\\r\\\\n                if count <= 8  # Fixup the index number alignment\\\\r\\\\n                else f\\\\\\"{count + 1}. {content_type}\\\\\\"\\\\r\\\\n            )\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n        # Print the results\\\\r\\\\n        for page in results:\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{page['title']} ( {page['class_name']} ) \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            # Check the admin response\\\\r\\\\n            response = session.get(page[\\\\\\"editor_url\\\\\\"])\\\\r\\\\n            if response.status_code != 200:\\\\r\\\\n                self.out_message_error(f\\\\\\"{page['editor_url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['editor_url']} \\\\u2190 200\\\\\\")\\\\r\\\\n\\\\r\\\\n            # Check the frontend response\\\\r\\\\n            response = session.get(page[\\\\\\"url\\\\\\"])\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{page['url']} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                if response.status_code == 404:\\\\r\\\\n                    message = (\\\\r\\\\n                        f\\\\\\"{page['url']} \\\\u2190 {response.status_code} probably a draft page\\\\\\"\\\\r\\\\n                    )\\\\r\\\\n                    self.out_message_warning(message)\\\\r\\\\n                else:\\\\r\\\\n                    self.out_message_error(f\\\\\\"{page['url']} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def report_snippets(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SNIPPETS models edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        snippet_models = get_snippet_models()\\\\r\\\\n        self.out_models(session, options, snippet_models)\\\\r\\\\n\\\\r\\\\n    def report_modeladmin(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all MODELADMIN edit pages ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        modeladmin_models = []\\\\r\\\\n        for model in apps.get_models():\\\\r\\\\n            app = model._meta.app_label\\\\r\\\\n            name = model.__name__\\\\r\\\\n            if f\\\\\\"{app}.{name}\\\\\\" in self.registered_modeladmin:\\\\r\\\\n                modeladmin_models.append(apps.get_model(app, name))\\\\r\\\\n\\\\r\\\\n        self.out_models(session, options, modeladmin_models)\\\\r\\\\n\\\\r\\\\n    def report_settings_models(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking all SETTINGS edit pages ...\\\\\\")\\\\r\\\\n        self.out_models(session, options, settings_registry)\\\\r\\\\n\\\\r\\\\n    def report_documents(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the DOCUMENTS edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        document_model = get_document_model()\\\\r\\\\n        self.out_models(session, options, [document_model])\\\\r\\\\n\\\\r\\\\n    def report_images(self, session, options):\\\\r\\\\n        self.out_message_info(\\\\\\"\\\\\\\\nChecking the IMAGES edit page ...\\\\\\")\\\\r\\\\n\\\\r\\\\n        image_model = get_image_model()\\\\r\\\\n        self.out_models(session, options, [image_model])\\\\r\\\\n\\\\r\\\\n    def out_models(self, session, options, models):\\\\r\\\\n        for model in models:\\\\r\\\\n            obj = model.objects.first()\\\\r\\\\n            if not obj:\\\\r\\\\n                # settings model has no objects\\\\r\\\\n                continue\\\\r\\\\n\\\\r\\\\n            url = self.get_admin_edit_url(options, obj)\\\\r\\\\n\\\\r\\\\n            message = f\\\\\\"\\\\\\\\n{model._meta.verbose_name.capitalize()} \\\\u2193\\\\\\"\\\\r\\\\n            self.out_message(message)\\\\r\\\\n\\\\r\\\\n            response = session.get(url)\\\\r\\\\n\\\\r\\\\n            if response.status_code == 200:\\\\r\\\\n                self.out_message_success(f\\\\\\"{url} \\\\u2190 200\\\\\\")\\\\r\\\\n            else:\\\\r\\\\n                self.out_message_error(f\\\\\\"{url} \\\\u2190 {response.status_code}\\\\\\")\\\\r\\\\n\\\\r\\\\n    def out_message(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(message)\\\\r\\\\n\\\\r\\\\n    def out_message_info(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.HTTP_INFO(message))\\\\r\\\\n        self.stdout.write(\\\\\\"=\\\\\\" * len(message))\\\\r\\\\n\\\\r\\\\n    def out_message_error(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stderr.write(self.style.ERROR(message))\\\\r\\\\n\\\\r\\\\n    def out_message_success(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.SUCCESS(message))\\\\r\\\\n\\\\r\\\\n    def out_message_warning(self, message):\\\\r\\\\n        if self.report_url:\\\\r\\\\n            message = message.replace(self.checked_url, self.report_url)\\\\r\\\\n        if message not in self.report_lines:\\\\r\\\\n            self.report_lines.append(message)\\\\r\\\\n        self.stdout.write(self.style.WARNING(message))\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def filter_page_models(page_models):\\\\r\\\\n        \\\\\\"\\\\\\"\\\\\\"Filter out page models that are not creatable or are in the core apps.\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n        filtered_page_models = []\\\\r\\\\n\\\\r\\\\n        for page_model in page_models:\\\\r\\\\n            if page_model._meta.app_label == \\\\\\"wagtailcore\\\\\\":\\\\r\\\\n                # Skip the core apps\\\\r\\\\n                continue\\\\r\\\\n            if not page_model.is_creatable:\\\\r\\\\n                # Skip pages that can't be created\\\\r\\\\n                continue\\\\r\\\\n            filtered_page_models.append(page_model)\\\\r\\\\n\\\\r\\\\n        return filtered_page_models\\\\r\\\\n\\\\r\\\\n    @staticmethod\\\\r\\\\n    def get_admin_edit_url(options, obj):\\\\r\\\\n        admin_url_finder = AdminURLFinder()\\\\r\\\\n        return f\\\\\\"{options['host']}{admin_url_finder.get_edit_url(obj)}\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"baf91b69-5a98-4466-8e2c-8433ce540ef3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"50jrp\\\\\\">Example usage scenario</h3><p data-block-key=\\\\\\"2s9fs\\\\\\">Wagtail 3 has had some extensive changes over previous verions: <a href=\\\\\\"https://docs.wagtail.org/en/stable/releases/3.0.html\\\\\\">Documentation</a></p><p data-block-key=\\\\\\"dgoit\\\\\\">Mostly, if you miss renaming an import it can be seen quite quickly when running the site. But some other changes can be hard to spot.</p><p data-block-key=\\\\\\"76nhi\\\\\\">For example:</p>\\", \\"id\\": \\"ddeac16a-f4cd-4083-bcb2-c2cab7ba3a51\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class CustomHelpPanel(EditHandler):\\\\r\\\\n  template = 'toolkits/custom_help_panel.html'\\\\r\\\\n\\\\r\\\\n  def render(self):\\\\r\\\\n    return mark_safe(render_to_string(self.template, {\\\\r\\\\n        'self': self,\\\\r\\\\n        'title': self.form.parent_page.title\\\\r\\\\n      }))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"8bf2e368-8f65-43d3-8bdb-09ce40e3c952\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9t6o\\\\\\">If you have one page model that all pages use/inherit from where the above is used like so:</p>\\", \\"id\\": \\"4db9f387-d4f5-46a5-afb7-fff178aed232\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"content_panels = [\\\\r\\\\n  CustomHelpPanel()\\\\r\\\\n] + Page.content_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"2daa955c-a034-40a4-ac52-1a5952226e7e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bskjj\\\\\\">Won&#x27;t show up as an error until you try to edit the page it&#x27;s used on.</p><p data-block-key=\\\\\\"9dh14\\\\\\">But you might just have 1000&#x27;s of pages to potentially check across many different page models.</p><h3 data-block-key=\\\\\\"epk7l\\\\\\">report_responses Command</h3><p data-block-key=\\\\\\"461n7\\\\\\">The command can be dropped into any app folder as per the django management command folder structure and run with:</p>\\", \\"id\\": \\"6c605956-d9c0-4da9-9aec-d31d35f866fc\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"./manage.py report_responses\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"5e229ad6-ccf7-4326-a520-d8ee10743f6c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6ge1o\\\\\\">Your site will need some content, preferably close to the same content as your live or staging site and will need to be running on your development machine (DEBUG = True)</p>\\", \\"id\\": \\"76dc5779-bf9e-4e84-92e5-04e36a197a01\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010004", "slug": "wagtail-response-checker", "depth": 4, "owner": 1, "title": "Wagtail Response Checker", "locale": 1, "locked": false, "excerpt": "This command will find content types and check the response code each of them.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-response-checker/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Response Checker", "content_type": 30, "live_revision": 108, "show_in_menus": false, "latest_revision": 108, "translation_key": "41860149-0f71-4079-992d-b871ab2a64fd", "last_published_at": "2023-09-02T10:57:45.483Z", "first_published_at": "2023-09-02T10:33:55.592Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T10:57:45.324Z"}	\N	34	1	30	1	Wagtail Response Checker
143	f	2023-09-24 16:48:54.532+00	{"pk": 29, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Helps to reduce form spam by tricking bots into submitting data in fields that should remain empty.\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"5d91ff48-40e1-4fc0-9ac9-e7981a4abae7\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 3, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"a530905c-e74f-4dc8-9e2a-404b2a774e21\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"jtc07\\\\\\">The package provides validation that a hidden text field that should remain empty and checks a time interval between the form being displayed and submitted.</p><p data-block-key=\\\\\\"4lpfj\\\\\\">Source code: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot\\\\\\">https://github.com/wagtail-packages/wagtail-honeypot</a></p><h2 data-block-key=\\\\\\"3hoo7\\\\\\">How it works</h2><p data-block-key=\\\\\\"cs1bi\\\\\\">When the Wagtail Form is submitted and the honeypot protection is enabled, the honeypot fields &amp; values are available in the POST data.</p><p data-block-key=\\\\\\"f1oqi\\\\\\">If the form is submitted with content in the hidden field or before the interval expires the submission is ignored.</p><ul><li data-block-key=\\\\\\"dsumk\\\\\\">No email is sent</li><li data-block-key=\\\\\\"88avq\\\\\\">No submission is stored</li><li data-block-key=\\\\\\"3t5ui\\\\\\">The thank you page is always shown if available.</li></ul><h2 data-block-key=\\\\\\"43lmu\\\\\\">Installation and setup</h2><p data-block-key=\\\\\\"1ug8g\\\\\\">Add the package to your python environment.</p>\\", \\"id\\": \\"13954ef4-099d-481a-af95-f9e512580539\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pip install wagtail-honeypot\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c69e143f-cfa6-4f4d-8104-309e7d3c498d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7drfi\\\\\\">Add the package to your settings</p>\\", \\"id\\": \\"d6460773-b718-4a40-ad42-f88d30a801a5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n    ...\\\\r\\\\n    \\\\\\"wagtail_honeypot\\\\\\",\\\\r\\\\n    ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"694c8e33-827b-49ae-a6d3-c6445ba0ffca\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"3o35n\\\\\\">The HoneypotFormMixin &amp; HoneypotFormSubmissionMixin</h3><p data-block-key=\\\\\\"88b3t\\\\\\">They will add a honeypot <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/blob/release/wagtail_honeypot/models.py#L13\\\\\\">enable/disable</a> field to your form page model and custom form submission method.</p><p data-block-key=\\\\\\"1164n\\\\\\">If you follow the official Wagtail docs for the <a href=\\\\\\"https://docs.wagtail.org/en/stable/reference/contrib/forms/index.html\\\\\\">Form Builder</a> your form should look something like this...</p>\\", \\"id\\": \\"f9631a20-249e-4848-8124-aca8afe7b327\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from wagtail_honeypot.models import (\\\\r\\\\n    HoneypotFormMixin, HoneypotFormSubmissionMixin\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nclass FormField(AbstractFormField):\\\\r\\\\n    page = ParentalKey(\\\\\\"FormPage\\\\\\", related_name=\\\\\\"form_fields\\\\\\")\\\\r\\\\n\\\\r\\\\nclass FormPage(HoneypotFormMixin, HoneypotFormSubmissionMixin):\\\\r\\\\n    intro = RichTextField(blank=True)\\\\r\\\\n    thank_you_text = RichTextField(blank=True)\\\\r\\\\n\\\\r\\\\n    content_panels = AbstractEmailForm.content_panels + [\\\\r\\\\n        FieldPanel(\\\\\\"intro\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        InlinePanel(\\\\\\"form_fields\\\\\\", label=\\\\\\"Form fields\\\\\\"),\\\\r\\\\n        FieldPanel(\\\\\\"thank_you_text\\\\\\", classname=\\\\\\"full\\\\\\"),\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [\\\\r\\\\n                FieldRowPanel(\\\\r\\\\n                    [\\\\r\\\\n                        FieldPanel(\\\\\\"from_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                        FieldPanel(\\\\\\"to_address\\\\\\", classname=\\\\\\"col6\\\\\\"),\\\\r\\\\n                    ]\\\\r\\\\n                ),\\\\r\\\\n                FieldPanel(\\\\\\"subject\\\\\\"),\\\\r\\\\n            ],\\\\r\\\\n            \\\\\\"Email\\\\\\",\\\\r\\\\n        ),\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    honeypot_panels = [\\\\r\\\\n        MultiFieldPanel(\\\\r\\\\n            [FieldPanel(\\\\\\"honeypot\\\\\\")],\\\\r\\\\n            heading=\\\\\\"Reduce Form Spam\\\\\\",\\\\r\\\\n        )\\\\r\\\\n    ]\\\\r\\\\n\\\\r\\\\n    edit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\", \\"language\\": \\"python\\"}, \\"id\\": \\"21772e85-31ad-4999-882e-0deab81d2895\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c43eh\\\\\\">If you prefer you could add the honeypot field to the content_panels rather than a new Tab</p>\\", \\"id\\": \\"d5f27ff2-b05b-4635-8a1b-dcc532e3800f\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"# replace\\\\r\\\\nedit_handler = TabbedInterface(\\\\r\\\\n        [\\\\r\\\\n            ObjectList(content_panels, heading=\\\\\\"Content\\\\\\"),\\\\r\\\\n            ObjectList(honeypot_panels, heading=\\\\\\"Honeypot\\\\\\"),\\\\r\\\\n            ObjectList(Page.promote_panels, heading=\\\\\\"Promote\\\\\\"),\\\\r\\\\n            ObjectList(Page.settings_panels, heading=\\\\\\"Settings\\\\\\", classname=\\\\\\"settings\\\\\\"),\\\\r\\\\n        ]\\\\r\\\\n    )\\\\r\\\\n\\\\r\\\\n# with\\\\r\\\\ncontent_panels = content_panels + honeypot_panels\\", \\"language\\": \\"python\\"}, \\"id\\": \\"45d77a8b-a52c-4e6f-be15-c372d92f1da3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4paen\\\\\\">Run <i>python manage.py makemigrations</i> and <i>python manage.py migrate</i> here</p><h2 data-block-key=\\\\\\"dutho\\\\\\">Honeypot Template Tag</h2><p data-block-key=\\\\\\"2fdvg\\\\\\">Add the following template tag loader to your form page.</p>\\", \\"id\\": \\"d476e66b-de89-4677-bf2c-cf508811a046\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% load honeypot_tags %}\\\\r\\\\n\\\\r\\\\n<!-- Add the Honeypot fields template tag anywhere inside the form -->\\\\r\\\\n<form>\\\\r\\\\n...\\\\r\\\\n{% honeypot_fields page.honeypot %}\\\\r\\\\n...\\\\r\\\\n</form>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"d35ebdbc-5f6e-4f32-b269-7b3a9f45ebd0\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8nah2\\\\\\">In your Wagtail site you should now be able to add a new form page and <i>enable the honeypot field</i>.</p><p data-block-key=\\\\\\"2o1oa\\\\\\"><i>Test that the honey pot field works</i></p><p data-block-key=\\\\\\"c34si\\\\\\">View the newly created form page. The honeypot field is visible and could be submitted with any value. Test it out by submitting the form with the honeypot field set to any value.</p><p data-block-key=\\\\\\"5bqe8\\\\\\">It won&#x27;t save the form submission or send an email if you have enabled that in your form page.</p><h2 data-block-key=\\\\\\"504k0\\\\\\">Hide the Honeypot field</h2><p data-block-key=\\\\\\"4a9pm\\\\\\">The honeypot field should be invisible when viewed in a browser.</p><p data-block-key=\\\\\\"9ke2a\\\\\\"><i>Use CSS &amp; JS to hide the honeypot field</i></p><p data-block-key=\\\\\\"2kddo\\\\\\">The package has some <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-honeypot/tree/release/wagtail_honeypot/static\\\\\\">basic css and javascript</a> you can use to hide the field.</p><p data-block-key=\\\\\\"76bqd\\\\\\">Example: add the following to your form template.</p>\\", \\"id\\": \\"0b9d8803-afcf-422d-a3c8-3677fe180d90\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- recommended: to add both but you can use one or the other -->\\\\r\\\\n\\\\r\\\\n{% block extra_css %}\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" href=\\\\\\"{% static 'css/honeypot.css' %}\\\\\\">\\\\r\\\\n{% endblock extra_css %}\\\\r\\\\n\\\\r\\\\n<!-- alternative: but without the css above loaded first the field could be seen for a flash while the page loads -->\\\\r\\\\n\\\\r\\\\n{% block extra_js %}\\\\r\\\\n<script src=\\\\\\"{% static 'js/honeypot.js' %}\\\\\\"></script>\\\\r\\\\n{% endblock extra_js %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"f9169682-ecfd-44f5-ab6a-57fd2e971bbc\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"kyjx1\\\\\\">The field should be visibly hidden and not be available to receive any value from a site visitor.</p><p data-block-key=\\\\\\"fqqdi\\\\\\">When rendered, the fields will have the HTML attributes tabindex=&quot;-1&quot; autocomplete=&quot;off&quot; to prevent a site visitor from using the tab key to move to the field and disable any autocomplete browser functions.</p>\\", \\"id\\": \\"2209fb70-5a1c-44a3-bcfe-7144afc899ba\\"}]", "date": "2023-09-01", "live": true, "path": "0001000100020002", "slug": "wagtail-honeypot", "depth": 4, "owner": 1, "title": "Wagtail Honeypot", "locale": 1, "locked": false, "excerpt": "Add optional honeypot protection to your Wagtail forms", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-honeypot/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Honeypot", "content_type": 32, "live_revision": 121, "show_in_menus": false, "latest_revision": 121, "translation_key": "c4ade89a-781d-401e-8784-8d6ba78a8964", "last_published_at": "2023-09-03T10:24:08.292Z", "pypi_package_name": "wagtail-honeypot", "first_published_at": "2023-09-01T16:30:20.993Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T10:24:08.089Z"}	\N	29	1	32	1	Wagtail Honeypot
133	f	2023-09-22 21:45:31.494+00	{"pk": 36, "body": "[]", "date": "2023-09-22", "live": false, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	36	1	30	1	Wagtail Start CLI
134	f	2023-09-22 21:47:36.774+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}]", "date": "2023-09-22", "live": false, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 133, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-22T21:45:31.494Z"}	\N	36	1	30	1	Wagtail Start CLI
135	f	2023-09-22 21:50:35.297+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}]", "date": "2023-09-22", "live": false, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 134, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-22T21:47:36.774Z"}	\N	36	1	30	1	Wagtail Start CLI
136	f	2023-09-22 21:51:14.254+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}]", "date": "2023-09-22", "live": false, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 135, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-22T21:50:35.297Z"}	\N	36	1	30	1	Wagtail Start CLI
137	f	2023-09-22 21:58:24.141+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><ol><li data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your method of setting up a virtual environment.</li><li data-block-key=\\\\\\"4mvo5\\\\\\">Run the migrations: python manage.py migrate</li><li data-block-key=\\\\\\"7sc1s\\\\\\">Create a superuser: python manage.py createsuperuser</li><li data-block-key=\\\\\\"45r7f\\\\\\">Run the server: python manage.py runserver</li></ol><h3 data-block-key=\\\\\\"28i81\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: nvm use if you have nvm installed and npm install.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 136, "show_in_menus": false, "latest_revision": 136, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T21:51:14.400Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T21:51:14.254Z"}	\N	36	1	30	1	Wagtail Start CLI
138	f	2023-09-22 22:01:08.361+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><ol><li data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your method of setting up a virtual environment.</li><li data-block-key=\\\\\\"4mvo5\\\\\\">Run the migrations: <b><i>python manage.py migrate</i></b></li><li data-block-key=\\\\\\"7sc1s\\\\\\">Create a superuser: <b><i>python manage.py createsuperuser</i></b></li><li data-block-key=\\\\\\"45r7f\\\\\\">Run the server: <b><i>python manage.py runserver</i></b></li></ol><h3 data-block-key=\\\\\\"28i81\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: nvm use if you have nvm installed and npm install.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 137, "show_in_menus": false, "latest_revision": 137, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T21:58:24.280Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T21:58:24.141Z"}	\N	36	1	30	1	Wagtail Start CLI
139	f	2023-09-22 22:02:53.88+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><ol><li data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your method of setting up a virtual environment.</li></ol><p data-block-key=\\\\\\"1tfq5\\\\\\">Run</p><p data-block-key=\\\\\\"4d452\\\\\\"></p>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\\\r\\\\npython manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"47bbfb2b-7ff1-40be-8724-5d9f67b4de13\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"55fr7\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: <i>nvm</i> use if you have nvm installed and <i>npm install</i>.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9716eba7-6964-442c-86b9-1312399aea2b\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 138, "show_in_menus": false, "latest_revision": 138, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T22:01:08.552Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T22:01:08.361Z"}	\N	36	1	30	1	Wagtail Start CLI
140	f	2023-09-22 22:03:47.977+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><p data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your method of setting up a virtual environment.</p><p data-block-key=\\\\\\"1tfq5\\\\\\">Run</p>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\\\r\\\\npython manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"47bbfb2b-7ff1-40be-8724-5d9f67b4de13\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"55fr7\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: (<i>nvm</i> use if you have nvm installed) and <i>npm install</i>.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9716eba7-6964-442c-86b9-1312399aea2b\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 139, "show_in_menus": false, "latest_revision": 139, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T22:02:54.092Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T22:02:53.880Z"}	\N	36	1	30	1	Wagtail Start CLI
144	f	2023-09-26 12:28:33.573+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql Database</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.1 (Mysql 5.7 requires Django &lt; 4.2)</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\"><a id=\\\\\\"26\\\\\\" linktype=\\\\\\"page\\\\\\">Part 2</a> - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 118, "show_in_menus": false, "latest_revision": 118, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-09-02T12:00:18.764Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-02T12:00:18.620Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
145	f	2023-09-26 12:29:28.761+00	{"pk": 6, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"j4opv\\\\\\">This is a tutorial about one way to build and deploy a Wagtail CMS site to <a href=\\\\\\"https://www.pythonanywhere.com/\\\\\\">PythonAnywhere</a>.</h2><p data-block-key=\\\\\\"5kmsd\\\\\\">It&#x27;s a <i>starting point</i> that has most of the elements one might need (backend and frontend) to build a Wagtail site and deploy it live. It&#x27;s by no means a complete site, in fact I&#x27;ve intentionally left out a lot of the things that make a site unique, such as the design, content, and custom code so that you can use this as a starting point for your own site.</p><p data-block-key=\\\\\\"3lj8u\\\\\\">I recommend you read:</p><p data-block-key=\\\\\\"17t6h\\\\\\">The official <a href=\\\\\\"https://wagtail.org/\\\\\\">Wagtail documentation</a> and <a href=\\\\\\"https://docs.wagtail.org/en/stable/\\\\\\">Developer Documentation</a>, specifically <a href=\\\\\\"https://docs.wagtail.org/en/stable/getting_started/tutorial.html\\\\\\">Your first wagtail site</a></p><p data-block-key=\\\\\\"42jc7\\\\\\">I wanted to document the process I go through. I&#x27;ve actually built and deployed a fair few Wagtail sites over the last decade using various hosting platforms, as a freelancer. I now work for <a href=\\\\\\"https://torchbox.com/\\\\\\">Torchbox</a> as a developer.</p><ul><li data-block-key=\\\\\\"6ftgk\\\\\\">\\\\u2705 Python:3.10</li><li data-block-key=\\\\\\"5qi52\\\\\\">\\\\u2705 Mysql Database</li><li data-block-key=\\\\\\"9pjvi\\\\\\">\\\\u2705 Node / webpack to build the frontend</li><li data-block-key=\\\\\\"9kbos\\\\\\">\\\\u2705 CI actions for code checks</li><li data-block-key=\\\\\\"fq2sv\\\\\\">\\\\u2705 Pre-commit to run git hooks</li><li data-block-key=\\\\\\"7iett\\\\\\">\\\\u2705 Wagtail CMS v5.1.1</li><li data-block-key=\\\\\\"3rl1v\\\\\\">\\\\u2705 Django 4.2</li></ul><p data-block-key=\\\\\\"9oh7i\\\\\\">The code <a href=\\\\\\"https://github.com/wagtail-examples/tutorial-deploy-pythonanywhere-paid\\\\\\">here</a> is the complete source code after following the tutorial.</p><p data-block-key=\\\\\\"4k8jo\\\\\\"><a id=\\\\\\"26\\\\\\" linktype=\\\\\\"page\\\\\\">Part 2</a> - Has optional steps to add front end code, code quality checks and CI checks.</p>\\", \\"id\\": \\"d716dbed-7f85-4593-9232-2fa4388092dd\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"407ux\\\\\\">Because I&#x27;m using git push to deploy the webapp and that requires SSH access, I am using a paid account on PythonAnywhere, which starts at \\\\u20ac5/month.</p>\\", \\"id\\": \\"0d206651-7ee3-49fa-be07-c432c966b7cb\\"}]", "date": "2023-09-02", "live": true, "path": "0001000100010001", "slug": "deploy-wagtail-cms-to-pythonanywhere", "depth": 4, "owner": 1, "title": "Deploy Wagtail CMS to PythonAnywhere", "locale": 1, "locked": false, "excerpt": "A guide to building a basic Wagtail CMS and deploying it to PythonAnywhere", "expired": false, "alias_of": null, "numchild": 18, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Deploy Wagtail CMS to PythonAnywhere", "content_type": 30, "live_revision": 144, "show_in_menus": false, "latest_revision": 144, "translation_key": "2dcfe825-8716-4d1e-868d-6a97fbc7e8e2", "last_published_at": "2023-09-26T12:28:33.831Z", "first_published_at": "2023-08-28T15:25:09.097Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-26T12:28:33.573Z"}	\N	6	1	30	1	Deploy Wagtail CMS to PythonAnywhere
146	f	2023-09-26 12:30:34.848+00	{"pk": 21, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xz8um\\\\\\">Create a new repo on your preferred provider. Github can add some files for you when starting a new project, I decided to add a README file and a gitignore file for Python.</p><p data-block-key=\\\\\\"c7ibd\\\\\\">Clone the newly created repo to your local development machine. It will have a remote called origin.</p>\\", \\"id\\": \\"a3d3f767-6c3f-47ae-aa47-f1e196d45d55\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"cf5l9\\\\\\">Later on I&#x27;ll create a remote called production which I&#x27;ll use to deploy the site to PythonAnywhere.</p>\\", \\"id\\": \\"d3bafac7-3d27-4293-84f8-800dcde3ece7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"4t1it\\\\\\">Python dependencies</h2><p data-block-key=\\\\\\"f9vg9\\\\\\">There are a few ways to manage python dependencies, I&#x27;m using <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> but you can use your preferred method. The only caveat is that the production dependencies ideally need to be in a requirements.txt file when deploying to PythonAnywhere.</p><p data-block-key=\\\\\\"eqmpg\\\\\\">With <a href=\\\\\\"https://pipenv.pypa.io/en/latest/\\\\\\">Pipenv</a> installed run:</p>\\", \\"id\\": \\"dabe2227-282f-4551-96d4-9799b9f73440\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv install \\\\\\"wagtail>=5.1,<5.2\\\\\\" \\\\\\"mysqlclient>=2.2,<2.3\\\\\\" \\\\\\"python-dotenv>=1.0,<1.1\\\\\\" \\\\\\"django>=4.2,<5.0\\\\\\"\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"aaaaf3a3-fde2-4ed3-809f-02eb61989519\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"68evn\\\\\\">Then create an initial requirements file with:</p>\\", \\"id\\": \\"0b2ce765-ae0a-4dda-8921-fdb6219b45a2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv requirements > requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"ebebc2c6-44a9-4514-9e83-d43422879065\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"cruch\\\\\\">Start a Wagtail site</h2><p data-block-key=\\\\\\"3p6cn\\\\\\">If you don&#x27;t have one already, add a .gitignore file so we don&#x27;t commit anything we shouldn&#x27;t.</p><p data-block-key=\\\\\\"8ggpc\\\\\\">A good example of a python .gitignore file is <a href=\\\\\\"https://github.com/github/gitignore/blob/main/Python.gitignore\\\\\\">https://github.com/github/gitignore/blob/main/Python.gitignore</a></p><p data-block-key=\\\\\\"2cafs\\\\\\">The .gitignore file should also contain the following at this stage.</p><p data-block-key=\\\\\\"f9pg4\\\\\\">/media</p><p data-block-key=\\\\\\"eimv5\\\\\\">Now create the initial Wagtail site called webapp or use your preferred name.</p>\\", \\"id\\": \\"6e4a9814-54b3-4f2f-844a-1a386b64fc7b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"pipenv run wagtail start webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bee4b813-919b-46ab-881b-9cfc8fbe8f09\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"bbgsl\\\\\\">Modify the file and folder layout a little</h2>\\", \\"id\\": \\"82d8c374-0f10-4465-aa89-25b799558f94\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"dz51h\\\\\\">I like to alter the layout of the files and folders a little to suit my preferences. It&#x27;s not necessary but I find it easier to work with. You can skip this step if you prefer but make sure you adjust any paths in the following steps.</p>\\", \\"id\\": \\"a769e132-aedf-45f4-8134-383c654203db\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6loua\\\\\\">Inside the webapp directory you can delete the following files as they are not used on PythonAnywhere:</p><ul><li data-block-key=\\\\\\"er7es\\\\\\">.dockerignore</li><li data-block-key=\\\\\\"4f9cn\\\\\\">Dockefile</li><li data-block-key=\\\\\\"59iul\\\\\\">requirements.txt</li></ul>\\", \\"id\\": \\"446e29ec-2e34-4bde-a3c1-119b47a8cfe3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm webapp/.dockerignore webapp/Dockerfile webapp/requirements.txt\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1e52eb8f-810e-4d59-9fcb-94178e201a9e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"aoqr7\\\\\\">Move the manage.py file to the root of the project:</p>\\", \\"id\\": \\"e8e66774-9343-4864-a8d5-5da96bbb5e72\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/manage.py .\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"939fafb7-bb46-4171-9118-45109c42bd63\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7mb3j\\\\\\">Move the all the files and folders from the webapp/webapp directory up one level to the webapp directory:</p>\\", \\"id\\": \\"83d06159-e072-443d-bc42-091f93051ece\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mv webapp/webapp/* webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"7da877a9-8758-465f-992b-f5a3e4266181\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"e3u3g\\\\\\">Delete the empty webapp/webapp directory:</p>\\", \\"id\\": \\"55c1c87f-7ed2-4600-8082-ac0dd47d7f88\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"rm -rf webapp/webapp\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"549d87c8-fe78-46ba-95fd-4026b91dc627\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"a1hca\\\\\\">Alter import paths and settings</h2><p data-block-key=\\\\\\"3t20p\\\\\\">Open webapp/urls.py and change the import path for:</p>\\", \\"id\\": \\"554f25d8-acce-4e09-8bc9-a702353d9a21\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from search import views as search_views\\\\r\\\\n# to\\\\r\\\\nfrom webapp.search import views as search_views\\", \\"language\\": \\"python\\"}, \\"id\\": \\"ff16aeb4-1d06-4520-80ce-02331b449285\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ak7j1\\\\\\">Open webapp/settings/base.py and change the app names for home and search in INSTALLED_APPS to:</p>\\", \\"id\\": \\"b0389d29-7509-42c1-8985-8a55477da00a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"INSTALLED_APPS = [\\\\r\\\\n \\\\\\"webapp.home\\\\\\",\\\\r\\\\n \\\\\\"webapp.search\\\\\\",\\\\r\\\\n ...\\\\r\\\\n]\\", \\"language\\": \\"python\\"}, \\"id\\": \\"a91cfbfb-5411-4356-bea2-2293c80ead1f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"e1vsi\\\\\\">The project file structure should look like this:</p><p data-block-key=\\\\\\"aptt2\\\\\\">.<br/>\\\\u251c\\\\u2500\\\\u2500 venv<br/>\\\\u251c\\\\u2500\\\\u2500 webapp<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 home<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 search<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 settings<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 static<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 templates<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 __init__.py<br/>\\\\u2502 \\\\u251c\\\\u2500\\\\u2500 urls.py<br/>\\\\u2502 \\\\u2514\\\\u2500\\\\u2500 wsgi.py<br/>\\\\u251c\\\\u2500\\\\u2500 .gitignore<br/>\\\\u251c\\\\u2500\\\\u2500 manage.py<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile<br/>\\\\u251c\\\\u2500\\\\u2500 Pipfile.lock<br/>\\\\u251c\\\\u2500\\\\u2500 README.md<br/>\\\\u251c\\\\u2500\\\\u2500 requirements.txt<br/></p>\\", \\"id\\": \\"02954837-c7c6-40d1-aa3c-f4188ffc24b2\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"54iip\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"76o2f\\\\\\">Run the Wagtail project locally to check that everything is working as expected, activate the virtual environment e.g. pipenv shell and run the following commands:</p>\\", \\"id\\": \\"41087582-e4d4-4488-85e2-ab3a7abc90ed\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"f0b39fd3-9433-4c4d-bc3e-324048c329ba\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2ddes\\\\\\">Then run the local development server:</p>\\", \\"id\\": \\"c5dd5815-4a17-45ce-a7ee-1174d505ac4e\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"916254e0-c8e1-4b63-97d1-d87c0aa1334d\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"al79g\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"ajs9p\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"3958791c-b6c4-419c-b511-ee64129c05f3\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"dz51h\\\\\\">The site is currently using sqlite3 database but later on it will be swapped out for a Mysql database.</p>\\", \\"id\\": \\"694b227d-a9d5-4f16-aac1-388b990a1513\\"}]", "live": true, "path": "00010001000100010001", "slug": "initial-repo-and-starting-a-new-wagtail-project", "depth": 5, "owner": 1, "title": "Initial repo and starting a new Wagtail project", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/initial-repo-and-starting-a-new-wagtail-project/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Initial repo and starting a new Wagtail project", "content_type": 28, "live_revision": 49, "show_in_menus": false, "latest_revision": 49, "translation_key": "da0a702c-52e0-4199-a7b9-dc9fa0312509", "last_published_at": "2023-08-30T16:05:07.581Z", "first_published_at": "2023-08-30T15:10:48.532Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T15:10:48.405Z"}	\N	21	1	28	1	Initial repo and starting a new Wagtail project
147	f	2023-09-26 12:32:06.572+00	{"pk": 22, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"hmtol\\\\\\">Setup environment variables</h3><p data-block-key=\\\\\\"8og6\\\\\\">To handle the configuration of the Wagtail app to use mysql and later other settings I&#x27;ll set up some environment variables.</p><h3 data-block-key=\\\\\\"nve9\\\\\\">Add a file to store the environment variables</h3>\\", \\"id\\": \\"52b20549-481d-43f8-870e-74d1e2cd68ad\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"touch .env\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"10ddfdd8-5a73-4198-9993-18e0db7f3046\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2e27i\\\\\\">and add the following content</p>\\", \\"id\\": \\"e7429ee7-29c3-4150-9b1f-c4ce5cd15f3c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"MYSQL_ROOT_PASSWORD=webapp\\\\r\\\\nMYSQL_DATABASE=webapp\\\\r\\\\nMYSQL_USER=webapp\\\\r\\\\nMYSQL_PASSWORD=webapp\\\\r\\\\nMYSQL_ROOT_HOST='%'\\\\r\\\\nMYSQL_HOST=127.0.0.1\\\\r\\\\nMYSQL_PORT=3306\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"9a17ef1e-cd46-4387-9847-522c48c20ed6\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"28u1u\\\\\\">Although these variables aren&#x27;t secret, later on we may add some that are and use it a template to create a .env file next.</p><p data-block-key=\\\\\\"ansh7\\\\\\">To make sure the .env file doesn&#x27;t get committed add the .env file to the .gitignore file:</p>\\", \\"id\\": \\"667a6590-07d3-47f8-933d-3d3e2c714bba\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\".env\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"39c53f44-4cb6-4cbf-a35a-3e071c69a316\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"adq13\\\\\\">These are development variables and to save having to set them every time I create a .env.example file to use as a template which can be committed to git (make sure there are no real secrets in this file). Then next time I need to set up for development I can just copy the .env.example file to .env and edit the values there.</p>\\", \\"id\\": \\"cc33a2ae-ad8f-463a-aaf7-7aaeff55cd46\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"cp .env .env.example\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"35953bb9-5ef4-46cd-885e-95bbd5964074\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78ku\\\\\\">Add a mysql docker container for development</h2><p data-block-key=\\\\\\"3l274\\\\\\">You will need docker installed to run the compose file: try <a href=\\\\\\"https://orbstack.dev/\\\\\\">Orbstack</a></p><p data-block-key=\\\\\\"1uluh\\\\\\">This is a docker-compose setup that can be used to run up the Mysql database locally for development. If you already have Mysql running locally you can probably skip this step and use that instead.</p><p data-block-key=\\\\\\"8d4vj\\\\\\">Create a docker-compose.yml file in the root of the project and add the following content:</p>\\", \\"id\\": \\"1fee3dcb-7a5b-4fb1-8478-229244b82cb9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"services:\\\\r\\\\n  db:\\\\r\\\\n    image: mysql:8.0.29 # version in use on pythonanywhere\\\\r\\\\n    command: --default-authentication-plugin=mysql_native_password\\\\r\\\\n    env_file:\\\\r\\\\n      - .env\\\\r\\\\n    ports:\\\\r\\\\n      - \\\\\\"3306:3306\\\\\\"\\\\r\\\\n    volumes:\\\\r\\\\n      - dbdata:/var/lib/mysql\\\\r\\\\n    container_name: mysql\\\\r\\\\n    healthcheck:\\\\r\\\\n      test: [ \\\\\\"CMD\\\\\\", \\\\\\"mysqladmin\\\\\\", \\\\\\"ping\\\\\\", \\\\\\"-h\\\\\\", \\\\\\"localhost\\\\\\" ]\\\\r\\\\n      interval: 10s\\\\r\\\\n      timeout: 20s\\\\r\\\\n      retries: 5\\\\r\\\\n\\\\r\\\\n  adminer:\\\\r\\\\n    image: adminer\\\\r\\\\n    ports:\\\\r\\\\n      - 8080:8080\\\\r\\\\n    depends_on:\\\\r\\\\n      db:\\\\r\\\\n        condition: service_healthy\\\\r\\\\n\\\\r\\\\nvolumes:\\\\r\\\\n  dbdata:\\", \\"language\\": \\"yaml\\"}, \\"id\\": \\"6ed2e237-bc63-463c-97cc-bd1df83bcd98\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eeclo\\\\\\">Then from the root of your project run:</p>\\", \\"id\\": \\"bc27bea0-b544-43c3-80eb-1f9d6c00d720\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"docker-compose up -d\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"b9b4f7c1-4d7e-4813-a990-40069e73ee94\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"4r1nn\\\\\\">Because the .env file is available the running db container will use the MYSQL_... env vars. Therefore the username, password and database name are initialized to webapp</p><p data-block-key=\\\\\\"c9m87\\\\\\">The adminer service is a web interface to the database.</p><p data-block-key=\\\\\\"erpi9\\\\\\">To check the database is running, open a web browser and go to <a href=\\\\\\"http://localhost:8080/\\\\\\">http://localhost:8080</a> and login with webapp as the username and password. You should see the database named webapp has been created.</p><h2 data-block-key=\\\\\\"6l2i7\\\\\\">Configure Wagtail to use the Mysql database</h2><p data-block-key=\\\\\\"706hu\\\\\\">Open webapp/settings/base.py and find:</p>\\", \\"id\\": \\"81cd005c-33cf-4e41-a52f-6a8b48a22d4a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.sqlite3\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": os.path.join(BASE_DIR, \\\\\\"db.sqlite3\\\\\\"),\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"513c091e-94b2-4562-aa70-d75078e30a57\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cqh80\\\\\\">and replace it with:</p>\\", \\"id\\": \\"36eea068-6b4f-47be-80fd-0cef073fcdd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"DATABASES = {\\\\r\\\\n    \\\\\\"default\\\\\\": {\\\\r\\\\n        \\\\\\"ENGINE\\\\\\": \\\\\\"django.db.backends.mysql\\\\\\",\\\\r\\\\n        \\\\\\"NAME\\\\\\": env_vars[\\\\\\"MYSQL_DATABASE\\\\\\"] if \\\\\\"MYSQL_DATABASE\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"USER\\\\\\": env_vars[\\\\\\"MYSQL_USER\\\\\\"] if \\\\\\"MYSQL_USER\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PASSWORD\\\\\\": env_vars[\\\\\\"MYSQL_PASSWORD\\\\\\"] if \\\\\\"MYSQL_PASSWORD\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"HOST\\\\\\": env_vars[\\\\\\"MYSQL_HOST\\\\\\"] if \\\\\\"MYSQL_HOST\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n        \\\\\\"PORT\\\\\\": env_vars[\\\\\\"MYSQL_PORT\\\\\\"] if \\\\\\"MYSQL_PORT\\\\\\" in env_vars else \\\\\\"\\\\\\",\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"f865e427-7ed7-494b-8b23-b034fe62d631\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6g7uo\\\\\\">Somewhere near the top of base.py add the following:</p>\\", \\"id\\": \\"ec4a144f-c34b-434c-9ea3-506d3c0da578\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nimport os\\\\r\\\\n\\\\r\\\\nPROJECT_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\\\\r\\\\nBASE_DIR = os.path.dirname(PROJECT_DIR)\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\nenv_vars = os.environ.copy() ### add this line\\", \\"language\\": \\"python\\"}, \\"id\\": \\"5564d4e1-5a13-4b5d-9809-778a3faa8136\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">env_vars will hold all the environment variables and we can use them to connect to the local mysql database. In PythonAnywhere those environment variables will be available but that still needs to be setup.</p>\\", \\"id\\": \\"8d1b3b99-090d-4642-8cd9-35f56a0dc151\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"78bcg\\\\\\">Other Wagtail settings from environment variables</h2><p data-block-key=\\\\\\"fe4ol\\\\\\">Still in base.py find and update the following lines:</p>\\", \\"id\\": \\"9e5c054e-93ec-4899-abda-afa4b0c65ff5\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"### existing code\\\\r\\\\nenv_vars = os.environ.copy()\\\\r\\\\n### end existing code\\\\r\\\\n\\\\r\\\\n### add this code block\\\\r\\\\nif \\\\\\"DJANGO_SECRET_KEY\\\\\\" in env_vars:\\\\r\\\\n    SECRET_KEY = env_vars[\\\\\\"DJANGO_SECRET_KEY\\\\\\"]\\\\r\\\\n\\\\r\\\\nif \\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\" in env_vars:\\\\r\\\\n    ALLOWED_HOSTS = env_vars[\\\\\\"DJANGO_ALLOWED_HOSTS\\\\\\"].split(\\\\\\",\\\\\\")\\\\r\\\\n    \\\\r\\\\n### Find WAGTAIL_SITE_NAME = \\\\\\"webapp\\\\\\" and change it to...\\\\r\\\\nWAGTAIL_SITE_NAME = env_vars[\\\\\\"WAGTAIL_SITE_NAME\\\\\\"] if \\\\\\"WAGTAIL_SITE_NAME\\\\\\" in env_vars else \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n### WAGTAILADMIN_BASE_URL = \\\\\\"http://example.com\\\\\\" and change it to ...\\\\r\\\\nWAGTAILADMIN_BASE_URL = env_vars[\\\\\\"BASE_URL\\\\\\"] if \\\\\\"BASE_URL\\\\\\" in env_vars else \\\\\\"\\\\\\"\\", \\"language\\": \\"python\\"}, \\"id\\": \\"867664b2-80bf-46e3-a8e2-23c24be34e80\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">When running in production, the environments variables will be loaded from that environment.</p>\\", \\"id\\": \\"3ddb5cfb-f8ff-40b9-b668-2010d7a0e61f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"f0344\\\\\\">Open your local .env file and add these new environment variables and alter the values, also make sure they are available in the .env.example file</p>\\", \\"id\\": \\"bda219eb-e65f-471e-ab01-1394148cb33b\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"WAGTAIL_SITE_NAME=site-name\\\\r\\\\nBASE_URL=http://localhost:8000\\\\r\\\\nDJANGO_SECRET_KEY=not-so-secret_key\\\\r\\\\nDJANGO_ALLOWED_HOSTS=localhost\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"e3c9e210-6534-4972-a41f-c297fd1006b8\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"meu37\\\\\\">In local development they will be picked up by Pipenv and passed to the webapp when it&#x27;s run.</p><p data-block-key=\\\\\\"dtr9s\\\\\\">Try out the webapp locally to make sure all is working OK.</p><p data-block-key=\\\\\\"40ccf\\\\\\">Most of these settings will be overridden in dev.py when using runserver so probably won&#x27;t make any difference.</p>\\", \\"id\\": \\"3c64dfa0-6c52-4b60-aa41-11b59c5e21d7\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"11d4b\\\\\\">Run the Wagtail project locally</h2><p data-block-key=\\\\\\"dchje\\\\\\">Run the Wagtail project locally to check that everything is working as expected. <b>With the virtual environment re-activated</b> to load the environment variables e.g. `pipenv shell` and run the following commands:</p>\\", \\"id\\": \\"b9eb0fef-bf4a-40b7-8d73-722e26330467\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"92fbf620-c838-470a-820c-041533668b78\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"8in2p\\\\\\">and</p>\\", \\"id\\": \\"31c777c9-07ad-451e-82cf-c07798eff738\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"71c3e095-5ca0-4ef5-be78-518712380c3a\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"cfr1\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/\\\\\\">http://localhost:8000</a> and you should see the default Wagtail home page.</p><p data-block-key=\\\\\\"cuttc\\\\\\">Open a browser and go to <a href=\\\\\\"http://localhost:8000/admin/\\\\\\">http://localhost:8000/admin/</a> and login with the superuser credentials you just created.</p>\\", \\"id\\": \\"5639f392-7837-4a88-b6ea-8e5498253b3d\\"}]", "live": true, "path": "00010001000100010002", "slug": "setup-to-use-mysql", "depth": 5, "owner": 1, "title": "Setup to use Mysql", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere/setup-to-use-mysql/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Setup to use Mysql", "content_type": 28, "live_revision": 132, "show_in_menus": false, "latest_revision": 132, "translation_key": "d7e1a292-936e-44f2-ab26-3c492352ea83", "last_published_at": "2023-09-03T21:32:58.144Z", "first_published_at": "2023-08-30T15:22:59.493Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-03T21:32:57.987Z"}	\N	22	1	28	1	Setup to use Mysql
148	f	2023-09-30 22:24:35.608+00	{"pk": 37, "body": "[]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	37	1	30	1	Click to Edit Template Tags
149	f	2023-09-30 22:34:55.818+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"left\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 148, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:24:35.608Z"}	\N	37	1	30	1	Click to Edit Template Tags
150	f	2023-09-30 22:35:16.06+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 149, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:34:55.818Z"}	\N	37	1	30	1	Click to Edit Template Tags
151	f	2023-09-30 22:37:55.196+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 150, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:35:16.060Z"}	\N	37	1	30	1	Click to Edit Template Tags
152	f	2023-09-30 22:42:12.563+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1> {# editable_field template tag #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p> {# editable_section template tag #}\\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %} {# editable_section template tag #}\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %} {# editable_section template tag #}\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %} {# editable_streamfield template tag #}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 151, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:37:55.196Z"}	\N	37	1	30	1	Click to Edit Template Tags
153	f	2023-09-30 22:43:19.956+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1> {# editable_field template tag #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p> {# editable_section template tag #}\\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n                        {# editable_streamfield template tag #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 152, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:42:12.563Z"}	\N	37	1	30	1	Click to Edit Template Tags
154	f	2023-09-30 22:44:13.613+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n                        {# editable_field template tag #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        {# editable_section template tag #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n                        {# editable_streamfield template tag #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 153, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:43:19.956Z"}	\N	37	1	30	1	Click to Edit Template Tags
155	f	2023-09-30 22:45:18.141+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# editable_field template tag #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# editable_section template tag #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# editable_section template tag #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# editable_streamfield template tag #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n                        \\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 154, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:44:13.613Z"}	\N	37	1	30	1	Click to Edit Template Tags
156	f	2023-09-30 22:47:04.612+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 155, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:45:18.141Z"}	\N	37	1	30	1	Click to Edit Template Tags
157	f	2023-09-30 22:50:37.743+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"k269j\\\\\\">There&#x27;s some basic styling and javascript required to layout the edit button elements and you can add your own custom styles to suit your own frontend.</p>\\", \\"id\\": \\"ded0904d-4497-4971-86c7-b011329ca52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".c2e-editable {\\\\r\\\\n    display: inline-block;\\\\r\\\\n    opacity: 0.5;\\\\r\\\\n    margin: 10px;\\\\r\\\\n    transition: opacity 0.2s ease-in-out;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.absolute {\\\\r\\\\n    position: absolute;\\\\r\\\\n    margin: 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.pull-up {\\\\r\\\\n    transform: translateY(-30px);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable:hover {\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.editable-icon:hover{\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"ef44311e-6d5c-4fc8-af89-88480f53735a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"var relativeParents = document.querySelectorAll(\\\\\\"[data-relative-parent]\\\\\\")\\\\r\\\\nfor (var i = 0; i < relativeParents.length; i++) {\\\\r\\\\n    if (relativeParents[i].dataset.relativeParent == \\\\\\"true\\\\\\" && relativeParents[i].parentElement.style.position != \\\\\\"relative\\\\\\") {\\\\r\\\\n        relativeParents[i].parentElement.style.position = \\\\\\"relative\\\\\\"\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"4237c298-4514-453f-9d70-bc532606387c\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 156, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:47:04.612Z"}	\N	37	1	30	1	Click to Edit Template Tags
158	f	2023-09-30 22:50:55.563+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"k269j\\\\\\">There&#x27;s some basic styling and javascript required to layout the edit button elements and you can add your own custom styles to suit your own frontend.</p>\\", \\"id\\": \\"ded0904d-4497-4971-86c7-b011329ca52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".c2e-editable {\\\\r\\\\n    display: inline-block;\\\\r\\\\n    opacity: 0.5;\\\\r\\\\n    margin: 10px;\\\\r\\\\n    transition: opacity 0.2s ease-in-out;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.absolute {\\\\r\\\\n    position: absolute;\\\\r\\\\n    margin: 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.pull-up {\\\\r\\\\n    transform: translateY(-30px);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable:hover {\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.editable-icon:hover{\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"ef44311e-6d5c-4fc8-af89-88480f53735a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"var relativeParents = document.querySelectorAll(\\\\\\"[data-relative-parent]\\\\\\")\\\\r\\\\nfor (var i = 0; i < relativeParents.length; i++) {\\\\r\\\\n    if (relativeParents[i].dataset.relativeParent == \\\\\\"true\\\\\\" && relativeParents[i].parentElement.style.position != \\\\\\"relative\\\\\\") {\\\\r\\\\n        relativeParents[i].parentElement.style.position = \\\\\\"relative\\\\\\"\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"4237c298-4514-453f-9d70-bc532606387c\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 157, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:50:37.743Z"}	\N	37	1	30	1	Click to Edit Template Tags
159	f	2023-09-30 22:52:07.494+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"k269j\\\\\\">There&#x27;s some basic styling and javascript required to layout the edit button elements and you can add your own custom styles to suit your own frontend.</p>\\", \\"id\\": \\"ded0904d-4497-4971-86c7-b011329ca52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".c2e-editable {\\\\r\\\\n    display: inline-block;\\\\r\\\\n    opacity: 0.5;\\\\r\\\\n    margin: 10px;\\\\r\\\\n    transition: opacity 0.2s ease-in-out;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.absolute {\\\\r\\\\n    position: absolute;\\\\r\\\\n    margin: 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.pull-up {\\\\r\\\\n    transform: translateY(-30px);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable:hover {\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.editable-icon:hover{\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"ef44311e-6d5c-4fc8-af89-88480f53735a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"var relativeParents = document.querySelectorAll(\\\\\\"[data-relative-parent]\\\\\\")\\\\r\\\\nfor (var i = 0; i < relativeParents.length; i++) {\\\\r\\\\n    if (relativeParents[i].dataset.relativeParent == \\\\\\"true\\\\\\" && relativeParents[i].parentElement.style.position != \\\\\\"relative\\\\\\") {\\\\r\\\\n        relativeParents[i].parentElement.style.position = \\\\\\"relative\\\\\\"\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"4237c298-4514-453f-9d70-bc532606387c\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 158, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:50:55.563Z"}	\N	37	1	30	1	Click to Edit Template Tags
160	f	2023-09-30 22:53:29.373+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"k269j\\\\\\">There&#x27;s some basic styling and javascript required to layout the edit button elements nicely and you can add your own custom styles to suit your own frontend either via settings of edit the first section of the template tag file.</p>\\", \\"id\\": \\"ded0904d-4497-4971-86c7-b011329ca52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".c2e-editable {\\\\r\\\\n    display: inline-block;\\\\r\\\\n    opacity: 0.5;\\\\r\\\\n    margin: 10px;\\\\r\\\\n    transition: opacity 0.2s ease-in-out;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.absolute {\\\\r\\\\n    position: absolute;\\\\r\\\\n    margin: 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.pull-up {\\\\r\\\\n    transform: translateY(-30px);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable:hover {\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.editable-icon:hover{\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"ef44311e-6d5c-4fc8-af89-88480f53735a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"var relativeParents = document.querySelectorAll(\\\\\\"[data-relative-parent]\\\\\\")\\\\r\\\\nfor (var i = 0; i < relativeParents.length; i++) {\\\\r\\\\n    if (relativeParents[i].dataset.relativeParent == \\\\\\"true\\\\\\" && relativeParents[i].parentElement.style.position != \\\\\\"relative\\\\\\") {\\\\r\\\\n        relativeParents[i].parentElement.style.position = \\\\\\"relative\\\\\\"\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"4237c298-4514-453f-9d70-bc532606387c\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 159, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:52:07.494Z"}	\N	37	1	30	1	Click to Edit Template Tags
161	f	2023-09-30 22:54:41.632+00	{"pk": 37, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"o6eom\\\\\\">If you have content heavy pages in your Wagtail CMS and need to edit a piece of content after spotting a required change, it would be nice to be able to click a button next to the content and jump straight to it in the admin interface.</p>\\", \\"id\\": \\"76ec7179-bdf8-4cca-a5f9-0b1ec913842c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"gu8ce\\\\\\">It&#x27;s similar to clicking &#x27;edit this page&#x27; in the user bar but acts more like &#x27;edit this content&#x27;</p>\\", \\"id\\": \\"3e6003cd-f9bf-44ef-afe8-5021b40da1da\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 5, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"ol6q1\\\\\\">Checkout the pencil icons</p>\\"}, \\"id\\": \\"d3025120-7968-474e-a40c-d0d6062f18fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"sjbf3\\\\\\">I&#x27;ve achieved this with a template tag (simple tag) that append an edit link to a piece of content. It can be a field, streamfield or section.</p>\\", \\"id\\": \\"e6dd2287-c03a-43b8-b2e1-83599ddfa8bf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from django import template\\\\r\\\\nfrom django.utils.safestring import mark_safe\\\\r\\\\nfrom django.conf import settings\\\\r\\\\n\\\\r\\\\ndefault_css_field = (\\\\r\\\\n    settings.C2E_CSS_FIELD if hasattr(settings, \\\\\\"C2E_CSS_FIELD\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_section = (\\\\r\\\\n    settings.C2E_CSS_SECTION if hasattr(settings, \\\\\\"C2E_CSS_SECTION\\\\\\") else \\\\\\"c2e-editable\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_css_streamfield = (\\\\r\\\\n    settings.C2E_CSS_STREAMFIELD\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_CSS_STREAMFIELD\\\\\\")\\\\r\\\\n    else \\\\\\"c2e-editable absolute pull-up\\\\\\"\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\nsvg_colors = (\\\\r\\\\n    settings.C2E_COLORS\\\\r\\\\n    if hasattr(settings, \\\\\\"C2E_COLORS\\\\\\")\\\\r\\\\n    else {\\\\r\\\\n        \\\\\\"black\\\\\\": \\\\\\"#000000\\\\\\",\\\\r\\\\n        \\\\\\"white\\\\\\": \\\\\\"#ffffff\\\\\\",\\\\r\\\\n        \\\\\\"silver\\\\\\": \\\\\\"#c0c0c0\\\\\\",\\\\r\\\\n        \\\\\\"red\\\\\\": \\\\\\"#ff0000\\\\\\",\\\\r\\\\n        \\\\\\"green\\\\\\": \\\\\\"#00ff00\\\\\\",\\\\r\\\\n        \\\\\\"blue\\\\\\": \\\\\\"#0000ff\\\\\\",\\\\r\\\\n        \\\\\\"cyan\\\\\\": \\\\\\"#00ffff\\\\\\",\\\\r\\\\n        \\\\\\"magenta\\\\\\": \\\\\\"#ff00ff\\\\\\",\\\\r\\\\n        \\\\\\"yellow\\\\\\": \\\\\\"#ffff00\\\\\\",\\\\r\\\\n    }\\\\r\\\\n)\\\\r\\\\n\\\\r\\\\ndefault_svg_color = svg_colors.get(\\\\\\"white\\\\\\")\\\\r\\\\n\\\\r\\\\nsizes = {\\\\r\\\\n    \\\\\\"minature\\\\\\": 16,\\\\r\\\\n    \\\\\\"small\\\\\\": 32,\\\\r\\\\n    \\\\\\"medium\\\\\\": 48,\\\\r\\\\n    \\\\\\"large\\\\\\": 64,\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\ndefault_size = \\\\\\"small\\\\\\"\\\\r\\\\n\\\\r\\\\ndefault_relative_parent = \\\\\\"true\\\\\\"\\\\r\\\\n\\\\r\\\\nregister = template.Library()\\\\r\\\\n\\\\r\\\\n\\\\r\\\\ndef pencil_icon(color, size):\\\\r\\\\n    return f\\\\\\"\\\\\\"\\\\\\"<svg xmlns=\\\\\\"http://www.w3.org/2000/svg\\\\\\" height=\\\\\\"{sizes[size]}\\\\\\" width=\\\\\\"{sizes[size]}\\\\\\" viewBox=\\\\\\"0 0 64 64\\\\\\">\\\\r\\\\n    <title>pencil</title>\\\\r\\\\n    <g stroke-linecap=\\\\\\"square\\\\\\" stroke-width=\\\\\\"2\\\\\\" fill=\\\\\\"none\\\\\\" stroke=\\\\\\"{color}\\\\\\" stroke-linejoin=\\\\\\"miter\\\\\\"\\\\r\\\\n        class=\\\\\\"nc-icon-wrapper\\\\\\" stroke-miterlimit=\\\\\\"10\\\\\\">\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"9\\\\\\" y1=\\\\\\"43\\\\\\" x2=\\\\\\"21\\\\\\" y2=\\\\\\"55\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"42\\\\\\" y1=\\\\\\"10\\\\\\" x2=\\\\\\"54\\\\\\" y2=\\\\\\"22\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <line data-cap=\\\\\\"butt\\\\\\" x1=\\\\\\"15\\\\\\" y1=\\\\\\"49\\\\\\" x2=\\\\\\"48\\\\\\" y2=\\\\\\"16\\\\\\" stroke-linecap=\\\\\\"butt\\\\\\" stroke=\\\\\\"{color}\\\\\\"></line>\\\\r\\\\n        <path d=\\\\\\"M21,55,4,60,9,43,46.828,5.172a4,4,0,0,1,5.657,0l6.343,6.343a4,4,0,0,1,0,5.657Z\\\\\\"></path>\\\\r\\\\n    </g>\\\\r\\\\n</svg>\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_field(context, value, id, field, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"after\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{field}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    if placement == \\\\\\"after\\\\\\":\\\\r\\\\n        return mark_safe(str(value) + button)\\\\r\\\\n\\\\r\\\\n    return mark_safe(button + str(value))\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_section(context, section_name, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return \\\\\\"\\\\\\"\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_field)\\\\r\\\\n\\\\r\\\\n    start_link = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#panel-child-content-{section_name}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n    end_link = \\\\\\"</a>\\\\\\"\\\\r\\\\n\\\\r\\\\n    button = start_link + link_content + end_link\\\\r\\\\n\\\\r\\\\n    return mark_safe(button)\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n@register.simple_tag(takes_context=True)\\\\r\\\\ndef editable_streamfield(context, value, id, **kwargs):\\\\r\\\\n    if not context[\\\\\\"request\\\\\\"].user.is_authenticated:\\\\r\\\\n        return value\\\\r\\\\n\\\\r\\\\n    color = kwargs.get(\\\\\\"color\\\\\\", default_svg_color)\\\\r\\\\n    size = kwargs.get(\\\\\\"size\\\\\\", default_size)\\\\r\\\\n    placement = kwargs.get(\\\\\\"placement\\\\\\", \\\\\\"before\\\\\\")\\\\r\\\\n    relative_parent = kwargs.get(\\\\\\"relative_parent\\\\\\", default_relative_parent)\\\\r\\\\n    classes = kwargs.get(\\\\\\"classes\\\\\\", default_css_streamfield)\\\\r\\\\n\\\\r\\\\n    ret = \\\\\\"\\\\\\"\\\\r\\\\n    for block in value:\\\\r\\\\n        link_start = f\\\\\\"\\\\\\"\\\\\\"<a href=\\\\\\"/admin/pages/{id}/edit/#block-{block.id}-section\\\\\\" class=\\\\\\"{classes}\\\\\\" data-relative-parent=\\\\\\"{relative_parent}\\\\\\">\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_content = f\\\\\\"\\\\\\"\\\\\\"{pencil_icon(color, size)}\\\\\\"\\\\\\"\\\\\\"\\\\r\\\\n        link_end = \\\\\\"</a>\\\\\\"\\\\r\\\\n        button = link_start + link_content + link_end\\\\r\\\\n\\\\r\\\\n        if placement == \\\\\\"after\\\\\\":\\\\r\\\\n            ret += str(block) + button\\\\r\\\\n        else:\\\\r\\\\n            ret += button + str(block)\\\\r\\\\n\\\\r\\\\n    return mark_safe(str(ret))\\", \\"language\\": \\"python\\"}, \\"id\\": \\"bf70e0b3-f8bd-48e1-8a2b-63fbc12ec889\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"9wupc\\\\\\">Then in the template add the template tags in place of the regular {{ page.field_name }} tags</p>\\", \\"id\\": \\"640819cd-26ef-41f9-a509-fe33ba130cce\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"{% extends \\\\\\"base.html\\\\\\" %}\\\\r\\\\n{% load wagtailimages_tags wagtailcore_tags click2edit_tags %}\\\\r\\\\n\\\\r\\\\n{% block content %}\\\\r\\\\n    <div class=\\\\\\"homepage\\\\\\">\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container-fluid hero\\\\\\">\\\\r\\\\n            {% image page.image fill-1920x600 class=\\\\\\"hero-image\\\\\\" alt=\\\\\\"\\\\\\" %}\\\\r\\\\n            <div class=\\\\\\"hero-gradient-mask\\\\\\"></div>\\\\r\\\\n            <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-md-6 col-md-offset-1 col-lg-5 home-hero\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_field template tag -- #}\\\\r\\\\n                        <h1>{% editable_field page.title page.id \\\\\\"title\\\\\\" size=\\\\\\"medium\\\\\\" %}</h1>\\\\r\\\\n                        \\\\r\\\\n                        {# -- editable_section template tag -- #}\\\\r\\\\n                        <p class=\\\\\\"lead\\\\\\">{{ page.hero_text }}{% editable_section \\\\\\"hero_section\\\\\\" page.id %}</p>\\\\r\\\\n                        \\\\r\\\\n                        {% if page.hero_cta_link %}\\\\r\\\\n                        <a href=\\\\\\"{% pageurl page.hero_cta_link %}\\\\\\" class=\\\\\\"hero-cta-link\\\\\\">\\\\r\\\\n                            {{ page.hero_cta }}\\\\r\\\\n                        </a>\\\\r\\\\n                        {% else %}\\\\r\\\\n                        {{ page.hero_cta }}\\\\r\\\\n                        {% endif %}\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row promo-row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"featured-cards col-sm-5 col-sm-offset-1\\\\\\">\\\\r\\\\n                    {% if page.featured_section_1 %}\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"featured_homepage_sections\\\\\\" page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    <h2 class=\\\\\\"featured-cards__title\\\\\\">{{ page.featured_section_1_title }}</h2>\\\\r\\\\n                    <ul class=\\\\\\"featured-cards__list\\\\\\">\\\\r\\\\n                        {% for childpage in page.featured_section_1.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                        <li>\\\\r\\\\n                            {% include \\\\\\"includes/card/listing-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        </li>\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    </ul>\\\\r\\\\n                    <a class=\\\\\\"featured-cards__link\\\\\\" href=\\\\\\"/breads\\\\\\">\\\\r\\\\n                        <span>View more of our breads</span>\\\\r\\\\n                        {% include \\\\\\"includes/chevron-icon.html\\\\\\" with class=\\\\\\"featured-cards__chevron-icon\\\\\\" %}\\\\r\\\\n                    </a>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n\\\\r\\\\n                <div class=\\\\\\"col-sm-6 promo\\\\\\">\\\\r\\\\n\\\\r\\\\n                    {# -- editable_section template tag -- #}\\\\r\\\\n                    {% editable_section \\\\\\"promo_section\\\\\\" page.id %}\\\\r\\\\n\\\\r\\\\n                    {% if page.promo_image or page.promo_title or page.promo_text %}\\\\r\\\\n                        <div class=\\\\\\"col-lg-10 promo-text\\\\\\">\\\\r\\\\n                            {% if page.promo_title %}\\\\r\\\\n                                <h2>{{ page.promo_title }}</h2>\\\\r\\\\n                            {% endif %}\\\\r\\\\n                            {% if page.promo_text %}\\\\r\\\\n                                {{ page.promo_text|richtext }}\\\\r\\\\n                            {% endif %}\\\\r\\\\n                        </div>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                    {% if page.promo_image %}\\\\r\\\\n                        <figure>{% image page.promo_image fill-590x413-c100 %}</figure>\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.body %}\\\\r\\\\n        <div class=\\\\\\"container-fluid streamfield\\\\\\">\\\\r\\\\n                <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"col-sm-10 col-sm-offset-1 col-md-8 col-md-offset-2 streamfield-column\\\\\\">\\\\r\\\\n\\\\r\\\\n                        {# -- editable_streamfield template tag -- #}\\\\r\\\\n                        {% editable_streamfield page.body page.id color=\\\\\\"black\\\\\\" %}\\\\r\\\\n\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n\\\\r\\\\n        <div class=\\\\\\"container\\\\\\">\\\\r\\\\n            <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                <div class=\\\\\\"col-md-12 locations-section\\\\\\">\\\\r\\\\n                    {% if page.featured_section_2 %}\\\\r\\\\n                        <h2 class=\\\\\\"locations-section__title\\\\\\">{{ page.featured_section_2_title }}</h2>\\\\r\\\\n                        {% for childpage in page.featured_section_2.specific.children|slice:\\\\\\"3\\\\\\" %}\\\\r\\\\n                            {% include \\\\\\"includes/card/location-card.html\\\\\\" with page=childpage %}\\\\r\\\\n                        {% endfor %}\\\\r\\\\n                    {% endif %}\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        </div>\\\\r\\\\n\\\\r\\\\n        {% if page.featured_section_3 %}\\\\r\\\\n            <div class=\\\\\\"blog-section__background\\\\\\">\\\\r\\\\n                <div class=\\\\\\"container\\\\\\">\\\\r\\\\n                    <div class=\\\\\\"row\\\\\\">\\\\r\\\\n                        <div class=\\\\\\"col-md-12 blog-section\\\\\\">\\\\r\\\\n                            <h2 class=\\\\\\"blog-section__title\\\\\\">{{ page.featured_section_3_title }}</h2>\\\\r\\\\n                            <div class=\\\\\\"blog-section__grid\\\\\\">\\\\r\\\\n                                {% for childpage in page.featured_section_3.specific.children|slice:\\\\\\"6\\\\\\" %}\\\\r\\\\n                                    {% include \\\\\\"includes/card/picture-card.html\\\\\\" with page=childpage portrait=True %}\\\\r\\\\n                                {% endfor %}\\\\r\\\\n                            </div>\\\\r\\\\n                        </div>\\\\r\\\\n                    </div>\\\\r\\\\n                </div>\\\\r\\\\n            </div>\\\\r\\\\n        {% endif %}\\\\r\\\\n    </div>\\\\r\\\\n{% endblock content %}\\", \\"language\\": \\"html\\"}, \\"id\\": \\"06997d4b-0062-4593-a17b-14a2fcd94ebf\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"k269j\\\\\\">There&#x27;s some basic styling and javascript required to layout the edit button elements nicely and you can add your own custom styles to suit your own frontend either via settings or edit the first section of the template tag file.</p>\\", \\"id\\": \\"ded0904d-4497-4971-86c7-b011329ca52a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\".c2e-editable {\\\\r\\\\n    display: inline-block;\\\\r\\\\n    opacity: 0.5;\\\\r\\\\n    margin: 10px;\\\\r\\\\n    transition: opacity 0.2s ease-in-out;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.absolute {\\\\r\\\\n    position: absolute;\\\\r\\\\n    margin: 0;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable.pull-up {\\\\r\\\\n    transform: translateY(-30px);\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.c2e-editable:hover {\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.editable-icon:hover{\\\\r\\\\n    opacity: 1;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"ef44311e-6d5c-4fc8-af89-88480f53735a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"var relativeParents = document.querySelectorAll(\\\\\\"[data-relative-parent]\\\\\\")\\\\r\\\\nfor (var i = 0; i < relativeParents.length; i++) {\\\\r\\\\n    if (relativeParents[i].dataset.relativeParent == \\\\\\"true\\\\\\" && relativeParents[i].parentElement.style.position != \\\\\\"relative\\\\\\") {\\\\r\\\\n        relativeParents[i].parentElement.style.position = \\\\\\"relative\\\\\\"\\\\r\\\\n    }\\\\r\\\\n}\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"4237c298-4514-453f-9d70-bc532606387c\\"}]", "date": "2023-09-30", "live": false, "path": "0001000100010007", "slug": "click-to-edit-template-tags", "depth": 4, "owner": 1, "title": "Click to Edit Template Tags", "locale": 1, "locked": false, "excerpt": "Add a click 2 edit icon to frontend templates. They behave like 'edit this page' but link to a field, section or streamfield content.", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/click-to-edit-template-tags/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Click to Edit Template Tags", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 160, "translation_key": "f63621e0-6229-47c4-92a5-0e0b850be8b3", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2023-09-30T22:53:29.373Z"}	\N	37	1	30	1	Click to Edit Template Tags
162	f	2024-02-17 15:59:53.154+00	{"pk": 38, "body": "[]", "date": "2024-02-17", "live": false, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": null, "pypi_package_name": "wagtail-exposapi", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	38	1	32	1	Wagtail Exposapi
163	f	2024-02-17 16:07:42.743+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": false, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": null, "show_in_menus": false, "latest_revision": 162, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": null, "pypi_package_name": "wagtail-exposapi", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-02-17T15:59:53.154Z"}	\N	38	1	32	1	Wagtail Exposapi
164	f	2024-02-17 16:08:51.21+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Full details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": false, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": null, "show_in_menus": true, "latest_revision": 163, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": null, "pypi_package_name": "wagtail-exposapi", "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-02-17T16:07:42.743Z"}	\N	38	1	32	1	Wagtail Exposapi
165	f	2024-02-17 16:09:49.353+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 164, "show_in_menus": true, "latest_revision": 164, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:08:51.260Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:08:51.210Z"}	\N	38	1	32	1	Wagtail Exposapi
166	f	2024-02-17 16:10:54.642+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "A JSON API to expose your Wagtail sites internals", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 165, "show_in_menus": true, "latest_revision": 165, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:09:49.445Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:09:49.353Z"}	\N	38	1	32	1	Wagtail Exposapi
167	f	2024-02-17 16:12:59.473+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><p data-block-key=\\\\\\"fvc24\\\\\\">This is a re-work of the <a id=\\\\\\"34\\\\\\" linktype=\\\\\\"page\\\\\\">Response Checker</a> I created earlier.</p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "A JSON API to expose your Wagtail sites internals", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 166, "show_in_menus": true, "latest_revision": 166, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:10:54.893Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:10:54.642Z"}	\N	38	1	32	1	Wagtail Exposapi
168	f	2024-02-17 16:13:40.607+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><p data-block-key=\\\\\\"fvc24\\\\\\">This is a re-work of the <a id=\\\\\\"34\\\\\\" linktype=\\\\\\"page\\\\\\">Response Checker</a> I created earlier and that command is still available in this package.</p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "A JSON API to expose your Wagtail sites internals", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 167, "show_in_menus": true, "latest_revision": 167, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:12:59.532Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:12:59.473Z"}	\N	38	1	32	1	Wagtail Exposapi
169	f	2024-02-17 16:19:09.721+00	{"pk": 38, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.\\", \\"level\\": \\"h1\\"}, \\"id\\": \\"fb6a3148-6bbc-44ea-9605-1ae69feb160c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><p data-block-key=\\\\\\"fvc24\\\\\\">This is a re-work of the <a id=\\\\\\"34\\\\\\" linktype=\\\\\\"page\\\\\\">Response Checker</a> I created earlier and that command is still available in this package.</p><p data-block-key=\\\\\\"7aor\\\\\\">I have also created a stand alone click cli package that can be used in place of the command. <a href=\\\\\\"https://github.com/nickmoreton/wagtail-devtools-cli\\\\\\">CLI on github</a></p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "A JSON API to expose your Wagtail sites internals", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 168, "show_in_menus": true, "latest_revision": 168, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:13:40.667Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:13:40.607Z"}	\N	38	1	32	1	Wagtail Exposapi
170	f	2024-09-28 12:03:40.511+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI: <a href=\\\\\\"https://github.com/nickmoreton/wagtail-start\\\\\\">https://github.com/nickmoreton/wagtail-start</a> to start a new Wagtail CMS site.</h2><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><p data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your preferred method of setting up a virtual environment.</p><p data-block-key=\\\\\\"1tfq5\\\\\\">Run</p>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\\\r\\\\npython manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"47bbfb2b-7ff1-40be-8724-5d9f67b4de13\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"55fr7\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: (<i>nvm</i> use if you have nvm installed) and <i>npm install</i>.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9716eba7-6964-442c-86b9-1312399aea2b\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 141, "show_in_menus": false, "latest_revision": 141, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2023-09-22T22:04:43.308Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-09-22T22:04:43.145Z"}	\N	36	1	30	1	Wagtail Start CLI
171	f	2024-09-28 12:05:09.991+00	{"pk": 27, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"t9ypn\\\\\\">This is a minimal setup for compiling client side code with Webpack.</p><p data-block-key=\\\\\\"61u09\\\\\\">It will compile all files in client/styles css, client/scripts javascript and output them to webapp/static as bundle.css and bundle.js.</p><h3 data-block-key=\\\\\\"de590\\\\\\">Setup node and NPM</h3><p data-block-key=\\\\\\"5rn05\\\\\\">First lets make sure the node version used will always be the intended version 18.</p><p data-block-key=\\\\\\"e2ucd\\\\\\">In the root of your project run:</p>\\", \\"id\\": \\"003de25f-c641-44b9-81a8-f80bcb809a81\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo 18 > .nvmrc\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"782daa03-8a42-4b7f-bdfa-b511f5b543aa\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fu62r\\\\\\">Install NVM (node version manager)</h3><p data-block-key=\\\\\\"b2ecu\\\\\\">Instructions can be viewed at <a href=\\\\\\"https://github.com/nvm-sh/nvm\\\\\\">https://github.com/nvm-sh/nvm</a> where you can choose your preferred installation method. I used brew on MacOS.</p>\\", \\"id\\": \\"d5358e8f-6883-4406-ac0c-fd86a13365de\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"brew install nvm\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"3b916dbf-eb10-4682-9a7f-cb526b126301\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"17sgd\\\\\\">Use node version 18</h3>\\", \\"id\\": \\"05fec8d6-735b-4820-ad96-dd653df623d3\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm use\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"fb6e3072-3750-4d09-bdb2-138ffaa8b59f\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1fpeb\\\\\\">If you don&#x27;t have the correct version of node installed a message will tell you that and you can install it with:</p>\\", \\"id\\": \\"686ba7f7-a270-49e3-9308-4ffc3f178a0c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"nvm install 18\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"48827bdb-d1c5-4ba0-86d0-74e114736727\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"adhk4\\\\\\">Initialize NPM</h3>\\", \\"id\\": \\"6c3820db-4af6-445f-871d-4471e8f6a633\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm init\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c38f8160-33b4-4818-9ceb-208bd12b1bf3\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6c4so\\\\\\">This will create a package.json file in the root of your project.</p><p data-block-key=\\\\\\"ftj06\\\\\\">Then install the required packages by running:</p>\\", \\"id\\": \\"8679cc93-80de-4b7a-ae54-e1cc674d65c0\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm install --save-dev \\\\\\\\\\\\r\\\\n    @babel/preset-env \\\\\\\\\\\\r\\\\n    babel-loader \\\\\\\\\\\\r\\\\n    browser-sync-webpack-plugin \\\\\\\\\\\\r\\\\n    css-loader \\\\\\\\\\\\r\\\\n    mini-css-extract-plugin \\\\\\\\\\\\r\\\\n    sass \\\\\\\\\\\\r\\\\n    sass-loader \\\\\\\\\\\\r\\\\n    webpack \\\\\\\\\\\\r\\\\n    webpack-cli \\\\\\\\\\\\r\\\\n    webpack-dev-server\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"4e3bcc3a-0bfb-4456-9794-965b0750ae93\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eek32\\\\\\">This will have created a node_modules directory in the root of your project. It&#x27;s not a folder we need to commit to the repository so add it to the .gitignore file.</p>\\", \\"id\\": \\"588e7034-759a-45ec-8364-200ef86d7337\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"echo \\\\\\"node_modules\\\\\\" >> .gitignore\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"6e471733-f010-4cb5-a229-5adc1cf18c22\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7d22s\\\\\\">Add Webpack configuration</h3><p data-block-key=\\\\\\"1i20\\\\\\">You can read more about Webpack at <a href=\\\\\\"https://webpack.js.org/\\\\\\">https://webpack.js.org/</a>.</p><p data-block-key=\\\\\\"8fu4v\\\\\\">Create a file <b>webpack.config.js</b> in the root of your project with the following content:</p><p data-block-key=\\\\\\"ct7nq\\\\\\"></p>\\", \\"id\\": \\"56c121c4-dae3-4987-8cbb-50dd838d8036\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"const path = require(\\\\\\"path\\\\\\");\\\\r\\\\nconst MiniCssExtractPlugin = require(\\\\\\"mini-css-extract-plugin\\\\\\");\\\\r\\\\nconst BrowserSyncPlugin = require(\\\\\\"browser-sync-webpack-plugin\\\\\\");\\\\r\\\\n\\\\r\\\\nmodule.exports = {\\\\r\\\\n  mode: \\\\\\"production\\\\\\", // or \\\\\\"development\\\\\\"\\\\r\\\\n  entry: path.resolve(__dirname, \\\\\\"./client/scripts/index.js\\\\\\"),\\\\r\\\\n  output: {\\\\r\\\\n    path: path.resolve(__dirname, \\\\\\"./webapp/static/webapp\\\\\\"),\\\\r\\\\n    filename: \\\\\\"bundle.js\\\\\\",\\\\r\\\\n  },\\\\r\\\\n  module: {\\\\r\\\\n    rules: [\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.js$/,\\\\r\\\\n        exclude: /node_modules/,\\\\r\\\\n        use: {\\\\r\\\\n          loader: \\\\\\"babel-loader\\\\\\",\\\\r\\\\n          options: {\\\\r\\\\n            presets: [\\\\\\"@babel/preset-env\\\\\\"],\\\\r\\\\n          },\\\\r\\\\n        },\\\\r\\\\n      },\\\\r\\\\n      {\\\\r\\\\n        test: /\\\\\\\\.scss$/,\\\\r\\\\n        use: [MiniCssExtractPlugin.loader, \\\\\\"css-loader\\\\\\", \\\\\\"sass-loader\\\\\\"],\\\\r\\\\n      },\\\\r\\\\n    ],\\\\r\\\\n  },\\\\r\\\\n  plugins: [\\\\r\\\\n    new MiniCssExtractPlugin({\\\\r\\\\n      filename: \\\\\\"bundle.css\\\\\\",\\\\r\\\\n    }),\\\\r\\\\n    new BrowserSyncPlugin({\\\\r\\\\n      host: \\\\\\"localhost\\\\\\",\\\\r\\\\n      port: 3000,\\\\r\\\\n      proxy: \\\\\\"http://127.0.0.1:8000/\\\\\\", // the port your django app will be running on in development\\\\r\\\\n      files: [\\\\\\"./**/*.html\\\\\\"],\\\\r\\\\n    }),\\\\r\\\\n  ],\\\\r\\\\n};\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"673253dd-689e-43b0-b5a9-83f3d5347004\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"6g6su\\\\\\">Add client side code</h3><p data-block-key=\\\\\\"9d8ph\\\\\\">Create a directory called client in the root of your project with the following folders:</p>\\", \\"id\\": \\"86b008de-4bd0-4d08-89a6-b64f777e5b00\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"mkdir -p client/{scripts,styles}\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"2abf49b5-e2db-457c-973e-a55a468083ff\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"cu6n0\\\\\\">Add styles</h3><p data-block-key=\\\\\\"cjtt8\\\\\\">Create a file client/styles/index.scss with the following content:</p><p data-block-key=\\\\\\"3v417\\\\\\"></p>\\", \\"id\\": \\"7492330e-1535-4388-bd54-9c7bf67598ec\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"body {\\\\r\\\\n  background-color: grey;\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"2f319dd2-1d59-4e70-873c-1d5d39426968\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ab6ak\\\\\\"><b>Add javascript</b></p><p data-block-key=\\\\\\"3fv6r\\\\\\">Create a file client/scripts/index.js with the following content:</p>\\", \\"id\\": \\"edfa24ef-dcd2-424c-9f2c-955b3110ca0a\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"console.log(\\\\\\"Awesome Wagtail !\\\\\\");\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"49a7187b-d74d-4156-9547-1a3a61e7d7fb\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"b6er7\\\\\\">Update the scripts section in the package.json file to:</p>\\", \\"id\\": \\"7a2fbbec-c893-4e17-a7bf-657668b74bdf\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"\\\\\\"scripts\\\\\\": {\\\\r\\\\n  \\\\\\"build\\\\\\": \\\\\\"webpack --mode production\\\\\\",\\\\r\\\\n  \\\\\\"start\\\\\\": \\\\\\"webpack --mode development --watch\\\\\\"\\\\r\\\\n},\\", \\"language\\": \\"json\\"}, \\"id\\": \\"8ddae73b-9420-4c20-a445-a333407bad37\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"fqig2\\\\\\">Run Webpack</h3><p data-block-key=\\\\\\"1tj01\\\\\\">To compile the client side code during development run:</p>\\", \\"id\\": \\"099e899a-5c8c-485f-8a97-9e6a22d454d9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm start # which will compile and watch for changes\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"c7abec35-6fbc-4cb7-bd3b-672ced66b0b9\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"2dqoj\\\\\\">To compile the client side code for production run:</p>\\", \\"id\\": \\"6e9676a6-c160-4808-a2fc-c474cc9aba74\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"npm run build # which will compile and minify the code\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"1c1adac8-8f44-46ee-bd73-f2d74889bfbc\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"c9sbu\\\\\\">Running either of these commands will create a webapp/static/webapp directory containing bundle.css and bundle.js.</p><h2 data-block-key=\\\\\\"h0ft\\\\\\">Update the base template to use the compiled files</h2><p data-block-key=\\\\\\"81rq1\\\\\\">Open the webapp/templates/base.html file and update the head section to include the compiled css and javascript files:</p>\\", \\"id\\": \\"1e26b465-7350-45b3-a9c9-ad93decfea76\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"<!-- change -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'css/webapp.css' %}\\\\\\">\\\\r\\\\n<!-- to -->\\\\r\\\\n<link rel=\\\\\\"stylesheet\\\\\\" type=\\\\\\"text/css\\\\\\" href=\\\\\\"{% static 'webapp/bundle.css' %}\\\\\\">\\\\r\\\\n<!-- change -->\\\\r\\\\n<script src=\\\\\\"{% static 'js/webapp.js' %}\\\\\\"></script>\\\\r\\\\n<!-- to -->\\\\r\\\\n<script src=\\\\\\"{% static 'webapp/bundle.js' %}\\\\\\"></script>\\", \\"language\\": \\"html\\"}, \\"id\\": \\"7c35342c-b3c2-40ab-8f3c-9ca1572f3652\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"11pot\\\\\\">You can delete the webapp/static/css and webapp/static/js directories and files as they are no longer needed.</p><h2 data-block-key=\\\\\\"3vbt0\\\\\\">Run the development server</h2><p data-block-key=\\\\\\"2bde9\\\\\\">In a new console run the development server (after activating the virtualenv):</p>\\", \\"id\\": \\"33d2e1fb-e69c-453f-81d8-97fd0481dcd8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"682cab45-26a4-464b-8621-7e8d3f07b32b\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"da1c6\\\\\\">As long as you are running the <b>npm start</b> command in the other console...</p><p data-block-key=\\\\\\"85rb8\\\\\\">Open your browser at <a href=\\\\\\"http://localhost:3000/\\\\\\">http://localhost:3000</a> and you should see the home page with a grey background and a message in the console.</p><p data-block-key=\\\\\\"2afmb\\\\\\">Try changing the background color in client/styles/index.scss and you should see the changes in the browser without having to refresh the page.</p><h2 data-block-key=\\\\\\"3pv64\\\\\\">Just for fun :-)</h2><p data-block-key=\\\\\\"5g6tj\\\\\\">Create a file client/scripts/logo.js with the following content:</p>\\", \\"id\\": \\"15a8d67b-7b24-4c15-8043-ccc15717ce89\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Logo {\\\\r\\\\n  constructor() {\\\\r\\\\n        this.logo = document.getElementsByClassName('logo')[0];\\\\r\\\\n        this.header = document.getElementsByClassName('header')[0];\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    init() {\\\\r\\\\n      setTimeout(() => {\\\\r\\\\n        this.logo.classList.add('logo--fade-in');\\\\r\\\\n            this.header.classList.add('header--slope');\\\\r\\\\n        }, 1000);\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nmodule.exports = Logo;\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"31251878-15de-46ec-8e89-2f61ca840af4\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"6i44k\\\\\\">Update client/scripts/index.js to the following:</p>\\", \\"id\\": \\"2fb946ee-fc33-4626-ad72-fd0e92ace6c9\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"import \\\\\\"../styles/index.scss\\\\\\";\\\\r\\\\nimport Logo from \\\\\\"./logo.js\\\\\\";\\\\r\\\\n\\\\r\\\\nconst logo = new Logo();\\\\r\\\\nlogo.init();\\", \\"language\\": \\"javascript\\"}, \\"id\\": \\"533b0532-4437-4842-8146-23f3204c1528\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"bli3g\\\\\\">Create a file client/styles/_vars.scss with the following content:</p>\\", \\"id\\": \\"3fb72dab-e272-4990-8756-ddce38ad6bd4\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"$background-color: #43b1b0;\\\\r\\\\n$foreground-color: #fff;\\", \\"language\\": \\"css\\"}, \\"id\\": \\"daac85a5-de53-48cb-91b7-1d1cb417de05\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"d5cs4\\\\\\">Alter the client/styles/index.scss file to the following:</p>\\", \\"id\\": \\"ae0bdae5-b932-49bb-a706-1a2fd648ff97\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"@import \\\\\\"./vars\\\\\\";\\\\r\\\\n\\\\r\\\\nbody {\\\\r\\\\n  background-color: $background-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nh2, a {\\\\r\\\\n  color: $foreground-color !important;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\nsvg .egg {\\\\r\\\\n  fill: $foreground-color;\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.logo--fade-in {\\\\r\\\\n  animation: fade-in 1s ease-out;\\\\r\\\\n  animation-fill-mode: forwards;\\\\r\\\\n  svg g {\\\\r\\\\n    fill: white;\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes fade-in {\\\\r\\\\n  0% {\\\\r\\\\n    opacity: 0.2;\\\\r\\\\n    transform: scale(1);\\\\r\\\\n  }\\\\r\\\\n  75% {\\\\r\\\\n    opacity: 0.8;\\\\r\\\\n    transform: scale(1.8) translateX(10%);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    opacity: 1;\\\\r\\\\n    transform: scale(1.4) translateX(0) translateY(20px) rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n.header--slope {\\\\r\\\\n  animation: slope 1s ease-in-out;\\\\r\\\\n  animation-fill-mode: forwards;  \\\\r\\\\n}\\\\r\\\\n\\\\r\\\\n@keyframes slope {\\\\r\\\\n  0% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  90% {\\\\r\\\\n    transform: rotate(0deg);\\\\r\\\\n  }\\\\r\\\\n  100% {\\\\r\\\\n    transform: rotate(-2deg);\\\\r\\\\n  }\\\\r\\\\n}\\", \\"language\\": \\"css\\"}, \\"id\\": \\"0485e308-3d73-4b43-b450-c4ffd494a112\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"eon8u\\\\\\">With npm start still running: If you view the Wagtail start page (home) it&#x27;s going to look a little different.</p>\\", \\"id\\": \\"94be5fb4-4f60-45f1-af41-22e5f6bddc68\\"}]", "live": true, "path": "00010001000100020001", "slug": "set-up-webpack-and-client-side-code-compilation", "depth": 5, "owner": 1, "title": "Set up Webpack and client side code compilation", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/deploy-wagtail-cms-to-pythonanywhere-part-2/set-up-webpack-and-client-side-code-compilation/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Set up Webpack and client side code compilation", "content_type": 28, "live_revision": 72, "show_in_menus": false, "latest_revision": 72, "translation_key": "d8cf4c84-68bb-4faa-961c-6a6e9c760071", "last_published_at": "2023-08-30T16:38:10.369Z", "first_published_at": "2023-08-30T16:36:11.615Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2023-08-30T16:38:10.245Z"}	\N	27	1	28	1	Set up Webpack and client side code compilation
172	f	2024-09-28 13:09:05.604+00	{"pk": 38, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Wagtail Exposapi is a Wagtail plugin that provides a JSON API for your Wagtail sites internals.</h2><p data-block-key=\\\\\\"fdlpi\\\\\\">Installation and usage details can be read here: <a href=\\\\\\"https://github.com/wagtail-packages/wagtail-exposapi\\\\\\">https://github.com/wagtail-packages/wagtail-exposapi</a></p><p data-block-key=\\\\\\"fvc24\\\\\\">This is a re-work of the <a id=\\\\\\"34\\\\\\" linktype=\\\\\\"page\\\\\\">Response Checker</a> I created earlier and that command is still available in this package.</p><p data-block-key=\\\\\\"7aor\\\\\\">I have also created a stand alone click cli package that can be used in place of the command. <a href=\\\\\\"https://github.com/nickmoreton/wagtail-devtools-cli\\\\\\">CLI on github</a></p><h2 data-block-key=\\\\\\"edsds\\\\\\">Usage Suggestion</h2><p data-block-key=\\\\\\"38aku\\\\\\">When installed a JSON API view will list all:</p><ul><li data-block-key=\\\\\\"832hp\\\\\\">admin listing page urls.</li><li data-block-key=\\\\\\"6addd\\\\\\">at least one of all edit page urls for installed Wagtail core apps.</li><li data-block-key=\\\\\\"agc5k\\\\\\">at least one of all edit page type urls for your own models in installed apps.</li><li data-block-key=\\\\\\"7dumf\\\\\\">at least one of all page type views for your own models in installed apps.</li></ul><p data-block-key=\\\\\\"e8gsa\\\\\\">It does this with zero configuration. If need be you can provided configuration to exclude models or apps or provide a full list of apps/models to work with.</p><p data-block-key=\\\\\\"em6sa\\\\\\">With this information it&#x27;s possible to make a get request to each URL and check the response using various external tools or scripts e.g.</p><ul><li data-block-key=\\\\\\"3sja\\\\\\">use a tool like Postman to check the responses.</li><li data-block-key=\\\\\\"1sool\\\\\\">create a script to check the responses.</li><li data-block-key=\\\\\\"8vajh\\\\\\">use a monitoring service to check the responses.</li><li data-block-key=\\\\\\"f6o30\\\\\\">use a CI/CD pipeline to check the responses.</li><li data-block-key=\\\\\\"dnb01\\\\\\">and so on.</li></ul>\\", \\"id\\": \\"8c314fbf-4ae1-46e8-8ebc-4a74e78dd30c\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Included Base Command</h2><p data-block-key=\\\\\\"et15f\\\\\\">The package includes a base command that you can extend in your own site to fetch the API data and check the responses while developing your site.</p><p data-block-key=\\\\\\"8nn9n\\\\\\">This is especially useful if you have upgraded your wagtail site to a new version and want to make sure you&#x27;ve covered the upgrade points around views and templates.</p><p data-block-key=\\\\\\"2cf89\\\\\\">The default behaviour is to report any urls that return a response code other than 200.</p><p data-block-key=\\\\\\"9mafs\\\\\\">You can add options to see more details: --expanded includes the 200 responses in the output, --all includes all responses endpoints in a site (could be slow depending the size of the size).</p><p data-block-key=\\\\\\"fbo9g\\\\\\">The command needs to be able to login to the site so you need to provide a --username, --password and --url and --login-path, the defaults are superuser for the username and password and http://localhost:8000 for the url and /admin/login/ for the login path.</p><p data-block-key=\\\\\\"8grbr\\\\\\">Create a new command in your site that extends BaseResponsesCommand.</p>\\", \\"id\\": \\"8aae95be-2a54-44ee-a73e-2ae079501c0d\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"from exposapi.responses_command import BaseResponsesCommand\\\\r\\\\n\\\\r\\\\nclass Command(BaseResponsesCommand):\\\\r\\\\n    pass\\", \\"language\\": \\"python\\"}, \\"id\\": \\"7264100a-7512-4449-bf88-373fea2202da\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"umtjb\\\\\\">For convenience you can add default options to the command so you don&#x27;t need to type them each time you run the command.</p>\\", \\"id\\": \\"4885b2c5-17ef-47a8-b0ab-100beafe39c8\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"class Command(BaseResponsesCommand):\\\\r\\\\n    # you might want to fetch these from environment variables\\\\r\\\\n    username = \\\\\\"your-login-username\\\\\\"\\\\r\\\\n    password = \\\\\\"your-login-password\\\\\\"\\\\r\\\\n    url = \\\\\\"http://localhost:8000\\\\\\"  # the base url of your site\\\\r\\\\n    login_path = \\\\\\"/admin/login/\\\\\\"  # the login url for your site\\", \\"language\\": \\"python\\"}, \\"id\\": \\"4b4364e8-d143-4df8-8b8d-fd35c6c4a446\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"umtjb\\\\\\">Configuration</h2><p data-block-key=\\\\\\"7pm09\\\\\\">If you want to customise the introspection you can provide the configuration shown below.</p>\\", \\"id\\": \\"189efce4-98e3-4378-9f7e-d51788cf4631\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"EXPOSAPI_CONFIG = {\\\\r\\\\n    \\\\\\"base_url\\\\\\": \\\\\\"http://localhost:8000\\\\\\",\\\\r\\\\n    \\\\\\"listing_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"listing_pages_config\\\\\\": [\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Search promotions\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailsearchpromotions\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailsearchpromotions:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        {\\\\r\\\\n            \\\\\\"title\\\\\\": \\\\\\"Forms\\\\\\",\\\\r\\\\n            \\\\\\"app_name\\\\\\": \\\\\\"wagtailforms\\\\\\",\\\\r\\\\n            \\\\\\"listing_name\\\\\\": \\\\\\"wagtailforms:index\\\\\\",\\\\r\\\\n        },\\\\r\\\\n        ...,  # these will override the introspection for the listing pages\\\\r\\\\n    ],\\\\r\\\\n    \\\\\\"apps_exclude\\\\\\": [\\\\r\\\\n        \\\\\\"wagtailimages\\\\\\",\\\\r\\\\n        ...,  # these apps won't be included in the edit pages\\\\r\\\\n    ],\\\\r\\\\n}\\", \\"language\\": \\"python\\"}, \\"id\\": \\"387ffb35-bf15-4143-b2d7-c36b6238e08d\\"}]", "date": "2024-02-17", "live": true, "path": "0001000100020005", "slug": "wagtail-exposapi", "depth": 4, "owner": 1, "title": "Wagtail Exposapi", "locale": 1, "locked": false, "excerpt": "A JSON API to expose your Wagtail sites internals", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/packages/wagtail-exposapi/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Exposapi", "content_type": 32, "live_revision": 169, "show_in_menus": true, "latest_revision": 169, "translation_key": "7ea898e9-cda3-4a2e-b2d9-533f5f525d49", "last_published_at": "2024-02-17T16:19:09.881Z", "pypi_package_name": "wagtail-exposapi", "first_published_at": "2024-02-17T16:08:51.260Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-02-17T16:19:09.721Z"}	\N	38	1	32	1	Wagtail Exposapi
173	f	2024-09-30 08:09:02.079+00	{"pk": 36, "body": "[{\\"type\\": \\"rich_text\\", \\"value\\": \\"<h2 data-block-key=\\\\\\"uuf5i\\\\\\">Use this CLI to start a new Wagtail CMS site.</h2><p data-block-key=\\\\\\"dvjlh\\\\\\">Options:</p><ul><li data-block-key=\\\\\\"1kg61\\\\\\">Remove the default welcome page</li><li data-block-key=\\\\\\"59sm6\\\\\\">Add node and npm to the project</li><li data-block-key=\\\\\\"6bdg8\\\\\\">Add webpack to the project</li></ul><p data-block-key=\\\\\\"8k2uv\\\\\\">It uses the Wagtail start command and then alters the sites folder and file layout. Optionally, you can also include a basic webpack setup to build and compile the front end code.</p><p data-block-key=\\\\\\"a63f4\\\\\\">The site will include only a base home page and is ready for development.</p><p data-block-key=\\\\\\"64b6u\\\\\\">Download: <a href=\\\\\\" https://github.com/nickmoreton/wagtail-start \\\\\\"> https://github.com/nickmoreton/wagtail-start </a></p><h2 data-block-key=\\\\\\"fua4q\\\\\\">Installation</h2>\\", \\"id\\": \\"7ecc75e5-bcfa-45f0-9079-a729783903ac\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry install\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"0d27990e-acc5-4455-a02d-2f69930d422e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"7vn2k\\\\\\">Usage</h3>\\", \\"id\\": \\"733f07a1-9416-4a54-aa94-755cb8c0f50c\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"poetry run new [project_name]\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"a9cef8b8-506b-45f8-b435-8afeabbdc49e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"1kv20\\\\\\">The project will be created in it&#x27;s own directory inside the parent directory of the CLI tool.</p><h2 data-block-key=\\\\\\"2lngf\\\\\\">New site development</h2><p data-block-key=\\\\\\"5bd36\\\\\\">Once the site is generated, you can start developing it further.</p><h3 data-block-key=\\\\\\"587tj\\\\\\">Backend</h3><p data-block-key=\\\\\\"2bhp\\\\\\">Install the dependencies, use your preferred method of setting up a virtual environment.</p><p data-block-key=\\\\\\"1tfq5\\\\\\">Run</p>\\", \\"id\\": \\"9c6733a9-7ea3-4919-8c84-069d367927d2\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"python manage.py migrate\\\\r\\\\npython manage.py createsuperuser\\\\r\\\\npython manage.py runserver\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"47bbfb2b-7ff1-40be-8724-5d9f67b4de13\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<h3 data-block-key=\\\\\\"55fr7\\\\\\">Frontend</h3><ol><li data-block-key=\\\\\\"105vj\\\\\\">Install the dependencies: (<i>nvm</i> use if you have nvm installed) and <i>npm install</i>.</li><li data-block-key=\\\\\\"99adb\\\\\\">Run the dev server: npm start.</li><li data-block-key=\\\\\\"db1im\\\\\\">Open the site in your browser: http://localhost:3000.</li><li data-block-key=\\\\\\"f8a9t\\\\\\">For production build: npm run build.</li></ol>\\", \\"id\\": \\"9716eba7-6964-442c-86b9-1312399aea2b\\"}]", "date": "2023-09-22", "live": true, "path": "0001000100010006", "slug": "wagtail-start-cli", "depth": 4, "owner": 1, "title": "Wagtail Start CLI", "locale": 1, "locked": false, "excerpt": "Generate a starter Wagtail site that includes a basic frontend web pack setup", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/wagtail-start-cli/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Wagtail Start CLI", "content_type": 30, "live_revision": 170, "show_in_menus": false, "latest_revision": 170, "translation_key": "4f744ae7-8ce4-4b78-9aa9-d84c79bcb74d", "last_published_at": "2024-09-28T12:03:40.664Z", "first_published_at": "2023-09-22T21:51:14.400Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-09-28T12:03:40.511Z"}	\N	36	1	30	1	Wagtail Start CLI
174	f	2024-12-18 17:38:28.355+00	{"pk": 39, "body": "[]", "date": "2024-12-18", "live": false, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": null, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": null}	\N	39	1	30	1	Getting Started With Wagtail
175	f	2024-12-18 17:39:47.618+00	{"pk": 39, "body": "[]", "date": "2024-12-18", "live": false, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "The official Wagtail site provides all the details about starting a Wagtail site and this builds on the examples there", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 174, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-12-18T17:38:28.355Z"}	\N	39	1	30	1	Getting Started With Wagtail
177	f	2024-12-18 17:50:07.185+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<ul><li data-block-key=\\\\\\"ybzc4\\\\\\">Docker Development Environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">Postgresql, Mysql or Sqlite3 Database</li><li data-block-key=\\\\\\"9deoa\\\\\\">Frontend Node SASS and Javascript compilation</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"<p data-block-key=\\\\\\"vl266\\\\\\">The welcome screen</p>\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}]", "date": "2024-12-18", "live": false, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 1, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 175, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-12-18T17:39:47.618Z"}	\N	39	1	30	1	Getting Started With Wagtail
178	f	2024-12-18 17:50:31.283+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<ul><li data-block-key=\\\\\\"ybzc4\\\\\\">Docker Development Environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">Postgresql, Mysql or Sqlite3 Database</li><li data-block-key=\\\\\\"9deoa\\\\\\">Frontend Node SASS and Javascript compilation</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}]", "date": "2024-12-18", "live": false, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 1, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 177, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-12-18T17:50:07.185Z"}	\N	39	1	30	1	Getting Started With Wagtail
179	f	2024-12-18 17:52:47.115+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<ul><li data-block-key=\\\\\\"ybzc4\\\\\\">Docker Development Environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">Postgresql, Mysql or Sqlite3 Database</li><li data-block-key=\\\\\\"9deoa\\\\\\">Frontend Node SASS and Javascript compilation</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a></p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}]", "date": "2024-12-18", "live": false, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": null, "show_in_menus": false, "latest_revision": 178, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": null, "first_published_at": null, "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-12-18T17:50:31.283Z"}	\N	39	1	30	1	Getting Started With Wagtail
180	f	2024-12-18 18:01:03.508+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s a few short commands to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 179, "show_in_menus": false, "latest_revision": 179, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T17:52:47.185Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T17:52:47.115Z"}	\N	39	1	30	1	Getting Started With Wagtail
181	f	2024-12-18 18:01:08.676+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s a few short commands to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 179, "show_in_menus": false, "latest_revision": 180, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T17:52:47.185Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": true, "latest_revision_created_at": "2024-12-18T18:01:03.508Z"}	\N	39	1	30	1	Getting Started With Wagtail
182	f	2024-12-18 18:04:34.71+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 181, "show_in_menus": false, "latest_revision": 181, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T18:01:08.893Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T18:01:08.676Z"}	\N	39	1	30	1	Getting Started With Wagtail
183	f	2024-12-18 21:29:24.644+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere\\\\\\">https://github.com/wagtail-examples/wsk-deploy-python-anywhere</a></p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"loluu\\\\\\">This is a fork of the Starter kit with code include code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"c702ac46-6f64-4b4b-83a1-e2b273ea30bf\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 182, "show_in_menus": false, "latest_revision": 182, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T18:04:34.775Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T18:04:34.710Z"}	\N	39	1	30	1	Getting Started With Wagtail
184	f	2024-12-18 21:30:30.339+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere\\\\\\">https://github.com/wagtail-examples/wsk-deploy-python-anywhere</a></p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"loluu\\\\\\">This is a fork of the Starter kit with code include code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"c702ac46-6f64-4b4b-83a1-e2b273ea30bf\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 183, "show_in_menus": false, "latest_revision": 183, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:29:24.740Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:29:24.644Z"}	\N	39	1	30	1	Getting Started With Wagtail
185	f	2024-12-18 21:31:10.856+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone the repo to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere\\\\\\">https://github.com/wagtail-examples/wsk-deploy-python-anywhere</a></p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"loluu\\\\\\">This is a fork of the Starter kit with code include code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"c702ac46-6f64-4b4b-83a1-e2b273ea30bf\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 184, "show_in_menus": false, "latest_revision": 184, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:30:30.420Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:30:30.339Z"}	\N	39	1	30	1	Getting Started With Wagtail
186	f	2024-12-18 21:36:26.335+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Choose a database\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"32c77f3c-ab8a-40a5-9f3e-5252f674d408\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\\\\\">backend setup</a></p>\\", \\"id\\": \\"69faab26-8b1d-4f1c-ac5d-dd3c56691b8f\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Frontend features\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"e92c63fa-1d33-4be8-9c80-161f224bc98e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\\\\\">frontend setup</a></p>\\", \\"id\\": \\"58a7b5d4-7a4d-4c90-929c-f9cb11f205f6\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere\\\\\\">https://github.com/wagtail-examples/wsk-deploy-python-anywhere</a></p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"loluu\\\\\\">This is a fork of the Starter kit with code include code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"c702ac46-6f64-4b4b-83a1-e2b273ea30bf\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 185, "show_in_menus": false, "latest_revision": 185, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:31:10.938Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:31:10.856Z"}	\N	39	1	30	1	Getting Started With Wagtail
187	f	2024-12-18 21:41:03.379+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Choose a database\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"32c77f3c-ab8a-40a5-9f3e-5252f674d408\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\\\\\">backend setup</a> and available database types</p><ul><li data-block-key=\\\\\\"4cg3k\\\\\\">Postgresql</li><li data-block-key=\\\\\\"63ef2\\\\\\">Mysql</li><li data-block-key=\\\\\\"eku2n\\\\\\">Sqlite3</li></ul>\\", \\"id\\": \\"69faab26-8b1d-4f1c-ac5d-dd3c56691b8f\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Frontend features\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"e92c63fa-1d33-4be8-9c80-161f224bc98e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\\\\\">frontend setup</a></p><ul><li data-block-key=\\\\\\"disva\\\\\\">Compile Sass</li><li data-block-key=\\\\\\"evtpn\\\\\\">Compile Javascript</li><li data-block-key=\\\\\\"4ne7g\\\\\\">and more...</li></ul>\\", \\"id\\": \\"58a7b5d4-7a4d-4c90-929c-f9cb11f205f6\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere\\\\\\">https://github.com/wagtail-examples/wsk-deploy-python-anywhere</a></p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"loluu\\\\\\">This is a fork of the Starter kit with code include code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"c702ac46-6f64-4b4b-83a1-e2b273ea30bf\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 186, "show_in_menus": false, "latest_revision": 186, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:36:26.481Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:36:26.335Z"}	\N	39	1	30	1	Getting Started With Wagtail
188	f	2024-12-18 21:43:51.102+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Choose a database\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"32c77f3c-ab8a-40a5-9f3e-5252f674d408\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\\\\\">backend setup</a> and available database types</p><ul><li data-block-key=\\\\\\"4cg3k\\\\\\">Postgresql</li><li data-block-key=\\\\\\"63ef2\\\\\\">Mysql</li><li data-block-key=\\\\\\"eku2n\\\\\\">Sqlite3</li></ul>\\", \\"id\\": \\"69faab26-8b1d-4f1c-ac5d-dd3c56691b8f\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Frontend features\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"e92c63fa-1d33-4be8-9c80-161f224bc98e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\\\\\">frontend setup</a></p><ul><li data-block-key=\\\\\\"disva\\\\\\">Compile Sass</li><li data-block-key=\\\\\\"evtpn\\\\\\">Compile Javascript</li><li data-block-key=\\\\\\"4ne7g\\\\\\">and more...</li></ul>\\", \\"id\\": \\"58a7b5d4-7a4d-4c90-929c-f9cb11f205f6\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xjq8k\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere/blob/main/docs/deployment.md\\\\\\">full setup instructions</a></p>\\", \\"id\\": \\"c1872549-f2c8-440e-88bf-2ef50233c10c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Includes code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com</p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 187, "show_in_menus": false, "latest_revision": 187, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:41:03.429Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:41:03.379Z"}	\N	39	1	30	1	Getting Started With Wagtail
189	f	2024-12-18 21:44:58.039+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Choose a database\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"32c77f3c-ab8a-40a5-9f3e-5252f674d408\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\\\\\">backend setup</a> and available database types</p><ul><li data-block-key=\\\\\\"4cg3k\\\\\\">Postgresql</li><li data-block-key=\\\\\\"63ef2\\\\\\">Mysql</li><li data-block-key=\\\\\\"eku2n\\\\\\">Sqlite3</li></ul>\\", \\"id\\": \\"69faab26-8b1d-4f1c-ac5d-dd3c56691b8f\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Frontend features\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"e92c63fa-1d33-4be8-9c80-161f224bc98e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\\\\\">frontend setup</a></p><ul><li data-block-key=\\\\\\"disva\\\\\\">Compile Sass</li><li data-block-key=\\\\\\"evtpn\\\\\\">Compile Javascript</li><li data-block-key=\\\\\\"4ne7g\\\\\\">and more...</li></ul>\\", \\"id\\": \\"58a7b5d4-7a4d-4c90-929c-f9cb11f205f6\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xjq8k\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere/blob/main/docs/deployment.md\\\\\\">full setup instructions</a></p>\\", \\"id\\": \\"c1872549-f2c8-440e-88bf-2ef50233c10c\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Includes code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com using a FREE account.</p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010008", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 188, "show_in_menus": false, "latest_revision": 188, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:43:51.156Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:43:51.102Z"}	\N	39	1	30	1	Getting Started With Wagtail
190	f	2024-12-18 21:50:33.478+00	{"pk": 39, "body": "[{\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"A Wagtail quick-start template\\", \\"level\\": \\"h2\\"}, \\"id\\": \\"c10fe1b4-0fb9-4ab7-8f6b-6a4c9909d1bd\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"ybzc4\\\\\\">Building on the wagtail start command this template adds:</p><ul><li data-block-key=\\\\\\"droqe\\\\\\">Docker / docker-compose development environment</li><li data-block-key=\\\\\\"7jj7\\\\\\">A choice of Postgresql, Mysql or Sqlite3 database</li><li data-block-key=\\\\\\"9deoa\\\\\\">SASS for css styling</li><li data-block-key=\\\\\\"fv2ss\\\\\\">Pico CSS for almost classless styling</li><li data-block-key=\\\\\\"6r8v0\\\\\\">esbuild javascript bundler and build system</li><li data-block-key=\\\\\\"2819l\\\\\\">Testing mail server for development</li><li data-block-key=\\\\\\"ds8h3\\\\\\">Database management GUI&#x27;s</li><li data-block-key=\\\\\\"c65m4\\\\\\">Wagtail CMS v6.3</li></ul>\\", \\"id\\": \\"4e6761ed-deda-445f-b988-dcd6cf88d9e4\\"}, {\\"type\\": \\"image_aligned_block\\", \\"value\\": {\\"image\\": 6, \\"alignment\\": \\"center\\", \\"content\\": \\"\\"}, \\"id\\": \\"853027bb-a330-4ae4-9bfe-bdd8e027e060\\"}, {\\"type\\": \\"callout\\", \\"value\\": \\"<p data-block-key=\\\\\\"xed5n\\\\\\">Includes code adjustments plus a guide to help you get the app deployed to PythonAnywhere.com using a FREE account.</p>\\", \\"id\\": \\"4bc10d41-77ea-468c-a2ec-4d0e422fabda\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"psob8\\\\\\">Head on over to: <a href=\\\\\\"https://github.com/wagtail-examples/wagtail-starter-kit\\\\\\">https://github.com/wagtail-examples/wagtail-starter-kit</a> and fork or clone it to your computer.</p><p data-block-key=\\\\\\"716vf\\\\\\">There&#x27;s just one short command to run to get the site running on your development computer.</p>\\", \\"id\\": \\"19ccebf8-ff28-4294-b0c1-85c7ad97d356\\"}, {\\"type\\": \\"code\\", \\"value\\": {\\"code\\": \\"make quickstart\\", \\"language\\": \\"bash\\"}, \\"id\\": \\"bcd4503c-c8cf-4966-85a8-56e8490e83e0\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Choose a database\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"32c77f3c-ab8a-40a5-9f3e-5252f674d408\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-backend\\\\\\">backend setup</a> and available database types</p><ul><li data-block-key=\\\\\\"4cg3k\\\\\\">Postgresql</li><li data-block-key=\\\\\\"63ef2\\\\\\">Mysql</li><li data-block-key=\\\\\\"eku2n\\\\\\">Sqlite3</li></ul>\\", \\"id\\": \\"69faab26-8b1d-4f1c-ac5d-dd3c56691b8f\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Frontend features\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"e92c63fa-1d33-4be8-9c80-161f224bc98e\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"7z5jz\\\\\\">Read about the <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere?tab=readme-ov-file#working-with-the-fronend\\\\\\">frontend setup</a></p><ul><li data-block-key=\\\\\\"disva\\\\\\">Compile Sass</li><li data-block-key=\\\\\\"evtpn\\\\\\">Compile Javascript</li><li data-block-key=\\\\\\"4ne7g\\\\\\">and more...</li></ul>\\", \\"id\\": \\"58a7b5d4-7a4d-4c90-929c-f9cb11f205f6\\"}, {\\"type\\": \\"heading\\", \\"value\\": {\\"heading\\": \\"Production Deployment\\", \\"level\\": \\"h3\\"}, \\"id\\": \\"6ce374a8-6f74-4f92-90dd-55de7d189217\\"}, {\\"type\\": \\"rich_text\\", \\"value\\": \\"<p data-block-key=\\\\\\"xjq8k\\\\\\">Deploy the starter kit: <a href=\\\\\\"https://github.com/wagtail-examples/wsk-deploy-python-anywhere/blob/main/docs/deployment.md\\\\\\">full setup instructions</a></p>\\", \\"id\\": \\"c1872549-f2c8-440e-88bf-2ef50233c10c\\"}]", "date": "2024-12-18", "live": true, "path": "0001000100010009", "slug": "getting-started-with-wagtail", "depth": 4, "owner": 1, "title": "Getting Started With Wagtail", "locale": 1, "locked": false, "excerpt": "Clone/fork this repo for an expanded Wagtail quick-start template", "expired": false, "alias_of": null, "numchild": 0, "url_path": "/home/articles/getting-started-with-wagtail/", "expire_at": null, "locked_at": null, "locked_by": null, "seo_title": "", "go_live_at": null, "draft_title": "Getting Started With Wagtail", "content_type": 30, "live_revision": 189, "show_in_menus": false, "latest_revision": 189, "translation_key": "a4f433ec-c61a-4cae-9342-5f29173e2cf4", "last_published_at": "2024-12-18T21:44:58.090Z", "first_published_at": "2024-12-18T17:52:47.185Z", "search_description": "", "wagtail_admin_comments": [], "has_unpublished_changes": false, "latest_revision_created_at": "2024-12-18T21:44:58.039Z"}	\N	39	1	30	1	Getting Started With Wagtail
\.


--
-- Data for Name: wagtailcore_site; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_site (id, hostname, port, is_default_site, root_page_id, site_name) FROM stdin;
2	www.nickmoreton.co.uk	443	t	3	Nick Moreton
\.


--
-- Data for Name: wagtailcore_task; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_task (id, name, active, content_type_id) FROM stdin;
1	Moderators approval	t	2
\.


--
-- Data for Name: wagtailcore_taskstate; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_taskstate (id, status, started_at, finished_at, content_type_id, revision_id, task_id, workflow_state_id, finished_by_id, comment) FROM stdin;
\.


--
-- Data for Name: wagtailcore_workflow; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_workflow (id, name, active) FROM stdin;
1	Moderators approval	t
\.


--
-- Data for Name: wagtailcore_workflowcontenttype; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_workflowcontenttype (content_type_id, workflow_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_workflowpage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_workflowpage (page_id, workflow_id) FROM stdin;
1	1
\.


--
-- Data for Name: wagtailcore_workflowstate; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_workflowstate (id, status, created_at, current_task_state_id, object_id, requested_by_id, workflow_id, content_type_id, base_content_type_id) FROM stdin;
\.


--
-- Data for Name: wagtailcore_workflowtask; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailcore_workflowtask (id, sort_order, task_id, workflow_id) FROM stdin;
1	0	1	1
\.


--
-- Data for Name: wagtaildocs_document; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtaildocs_document (id, title, file, created_at, uploaded_by_user_id, collection_id, file_size, file_hash) FROM stdin;
\.


--
-- Data for Name: wagtaildocs_uploadeddocument; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtaildocs_uploadeddocument (id, file, uploaded_by_user_id) FROM stdin;
\.


--
-- Data for Name: wagtailembeds_embed; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailembeds_embed (id, url, max_width, type, html, title, author_name, provider_name, thumbnail_url, width, height, last_updated, hash, cache_until) FROM stdin;
\.


--
-- Data for Name: wagtailforms_formsubmission; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailforms_formsubmission (id, form_data, submit_time, page_id) FROM stdin;
\.


--
-- Data for Name: wagtailimages_image; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailimages_image (id, title, file, width, height, created_at, focal_point_x, focal_point_y, focal_point_width, focal_point_height, uploaded_by_user_id, file_size, collection_id, file_hash) FROM stdin;
1	sample	original_images/sample.png	1240	1395	2023-08-29 12:28:51.863+00	\N	\N	\N	\N	1	98092	1	a30e6240ffa340a318d8905cd5a4abe183839adb
2	Screenshot 2023-08-30 at 17.18.48	original_images/Screenshot_2023-08-30_at_17.18.48.png	1150	683	2023-08-30 16:19:19.647+00	\N	\N	\N	\N	1	72379	1	879c8ccaee2757aec7b66fd886d9ec7652456d34
3	Wagtail Honeypot	original_images/sample.jpg	1034	612	2023-09-01 16:18:38.498+00	\N	\N	\N	\N	1	36645	1	cb65cc06564963f87cfea8cf32051630bd8e7be7
4	Dependency checker console output	original_images/console.png	497	838	2023-09-02 10:02:18.995+00	\N	\N	\N	\N	1	102846	1	66b7f985a8894801d819967aead2c82385530c63
5	click2edit-screen	original_images/click2edit-screen.png	2916	2178	2023-09-30 22:34:07.064+00	\N	\N	\N	\N	1	5593194	1	7fa08a6d28c59d06ff4cacd79b9f73dca2cd4d6a
6	Wagtail Starter Kit Welcome Screen	original_images/Wagtail_Starter_Kit_Welcome_Screen.jpg	2850	2038	2024-12-18 17:49:43.518+00	\N	\N	\N	\N	1	173483	1	d480bc2a793e4c3afa63380ef09391ff565044cc
\.


--
-- Data for Name: wagtailimages_rendition; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailimages_rendition (id, file, width, height, focal_point_key, filter_spec, image_id) FROM stdin;
\.


--
-- Data for Name: wagtailimages_uploadedimage; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailimages_uploadedimage (id, file, uploaded_by_user_id) FROM stdin;
\.


--
-- Data for Name: wagtailredirects_redirect; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailredirects_redirect (id, old_path, is_permanent, redirect_link, redirect_page_id, site_id, automatically_created, created_at, redirect_page_route_path) FROM stdin;
\.


--
-- Data for Name: wagtailsearch_indexentry; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailsearch_indexentry (id, object_id, title_norm, content_type_id, autocomplete, title, body) FROM stdin;
2	1	1.6	1	'root':1	'root':1B	
1	3	1.6	3	'home':1	'home':1B	
4	4	1.6	29	'articles':1	'articl':1B	
5	5	1.6	31	'packages':1	'packag':1B	
6	6	0.4	30	'cms':3 'deploy':1 'pythonanywhere':5 'to':4 'wagtail':2	'cms':3B 'deploy':1B 'pythonanywher':5B 'wagtail':2B	
7	7	0.3888888888888889	28	'a':2 'code':9 'create':1 'git':3 'repo':4 'source':8 'store':6 'the':7 'to':5	'code':9B 'creat':1B 'git':3B 'repo':4B 'sourc':8B 'store':6B	
8	8	0.8095238095238094	28	'a':3 'on':5 'pythonanywhere':6 'set':1 'up':2 'webapp':4	'pythonanywher':6B 'set':1B 'webapp':4B	
9	9	1.1875	28	'dependencies':2 'python':1	'depend':2B 'python':1B	
10	10	0.8148148148148147	28	'a':2 'site':4 'start':1 'wagtail':3	'site':4B 'start':1B 'wagtail':3B	
11	11	0.8333333333333334	28	'environment':2 'setup':1 'variables':3	'environ':2B 'setup':1B 'variabl':3B	
12	12	0.4696969696969697	28	'a':2 'add':1 'container':6 'development':8 'docker':5 'for':7 'local':3 'mysql':4	'add':1B 'contain':6B 'develop':8B 'docker':5B 'local':3B 'mysql':4B	
13	13	0.6	28	'configure':1 'database':7 'mysql':6 'the':5 'to':3 'use':4 'wagtail':2	'configur':1B 'databas':7B 'mysql':6B 'use':4B 'wagtail':2B	
14	14	0.7692307692307693	28	'a':2 'create':1 'database':4 'mysql':3 'on':5 'pythonanywhere':6	'creat':1B 'databas':4B 'mysql':3B 'pythonanywher':6B	
15	15	0.7857142857142857	28	'app':4 'settings':5 'some':2 'update':1 'web':3	'app':4B 'set':5B 'updat':1B 'web':3B	
16	16	0.5555555555555556	28	'alter':1 'environment':7 'more':6 'settings':3 'to':4 'use':5 'variables':8 'wagtail':2	'alter':1B 'environ':7B 'set':3B 'use':5B 'variabl':8B 'wagtail':2B	
17	17	0.5833333333333334	28	'add':1 'further':2 'hook':9 'post':7 'post-recieve':6 'recieve':8 'steps':3 'the':5 'to':4	'add':1B 'hook':9B 'post':7B 'post-reciev':6B 'reciev':8B 'step':3B	
18	18	0.8823529411764706	28	'file':4 'on':5 'pythonanywhere':6 'the':2 'update':1 'wsg':3	'file':4B 'pythonanywher':6B 'updat':1B 'wsg':3B	
19	19	1.722222222222222	28	'a':2 'deployment':3 'start':1	'deploy':3B 'start':1B	
20	20	1.1403508771929824	32	'code':3 'qr':2 'wagtail':1	'code':3B 'qr':2B 'wagtail':1B	
21	21	0.5916666666666667	28	'a':5 'and':3 'initial':1 'new':6 'project':8 'repo':2 'starting':4 'wagtail':7	'initi':1B 'new':6B 'project':8B 'repo':2B 'start':4B 'wagtail':7B	
22	22	1.1746031746031746	28	'mysql':4 'setup':1 'to':2 'use':3	'mysql':4B 'setup':1B 'use':3B	
23	23	0.6060606060606061	28	'a':3 'and':5 'bare':7 'bare-repo':6 'on':9 'pythonanywhere':10 'repo':8 'set':1 'up':2 'webapp':4	'bare':7B 'bare-repo':6B 'pythonanywher':10B 'repo':8B 'set':1B 'webapp':4B	
24	24	1.2028985507246377	28	'add':1 'deployment':3 'further':2 'settings':4	'add':1B 'deploy':3B 'set':4B	
25	25	1.7708333333333333	28	'a':2 'deployment':3 'starting':1	'deploy':3B 'start':1B	
26	26	0.6066666666666667	30	'2':7 'cms':3 'deploy':1 'part':6 'pythonanywhere':5 'to':4 'wagtail':2	'2':7B 'cms':3B 'deploy':1B 'part':6B 'pythonanywher':5B 'wagtail':2B	
27	27	0.6217948717948718	28	'and':4 'client':5 'code':7 'compilation':8 'set':1 'side':6 'up':2 'webpack':3	'client':5B 'code':7B 'compil':8B 'set':1B 'side':6B 'webpack':3B	
28	28	0.9351851851851852	28	'commit':5 'pre':4 'pre-commit':3 'set':1 'up':2	'commit':5B 'pre':4B 'pre-commit':3B 'set':1B	
29	29	1.8392857142857142	32	'honeypot':2 'wagtail':1	'honeypot':2B 'wagtail':1B	
30	30	1.218390804597701	32	'formatted':2 'richtext':3 'wagtail':1	'format':2B 'richtext':3B 'wagtail':1B	
31	32	0.9166666666666666	32	'360':2 'tours':4 'virtual':3 'wagtail':1	'360':2B 'tour':4B 'virtual':3B 'wagtail':1B	
32	33	0.9193548387096774	30	'checker':4 'dependency':2 'python':1 'version':3	'checker':4B 'depend':2B 'python':1B 'version':3B	
33	34	1.21875	30	'checker':3 'response':2 'wagtail':1	'checker':3B 'respons':2B 'wagtail':1B	
34	35	0.9166666666666666	30	'content':2 'reporter':4 'types':3 'wagtail':1	'content':2B 'report':4B 'type':3B 'wagtail':1B	
35	36	1.2156862745098038	30	'cli':3 'start':2 'wagtail':1	'cli':3B 'start':2B 'wagtail':1B	
36	37	0.9142857142857143	30	'click':1 'edit':3 'tags':5 'template':4 'to':2	'click':1B 'edit':3B 'tag':5B 'templat':4B	
37	38	1.8055555555555556	32	'exposapi':2 'wagtail':1	'exposapi':2B 'wagtail':1B	
38	39	1.1981981981981982	30	'getting':1 'started':2 'wagtail':4 'with':3	'get':1B 'start':2B 'wagtail':4B	
39	1	3.526315789473684	27	'sample':1	'sampl':1A	
40	2	0.7128205128205128	27	'-08':3 '-30':4 '17.18.48':6 '2023':2 'at':5 'screenshot':1	'-08':3A '-30':4A '17.18.48':6A '2023':2A 'screenshot':1A	
41	3	1.7625	27	'honeypot':2 'wagtail':1	'honeypot':2A 'wagtail':1A	
42	4	0.8841463414634146	27	'checker':2 'console':3 'dependency':1 'output':4	'checker':2A 'consol':3A 'depend':1A 'output':4A	
43	5	1.1746031746031746	27	'click2edit':2 'click2edit-screen':1 'screen':3	'click2edit':2A 'click2edit-screen':1A 'screen':3A	
44	6	0.7116279069767442	27	'kit':3 'screen':5 'starter':2 'wagtail':1 'welcome':4	'kit':3A 'screen':5A 'starter':2A 'wagtail':1A 'welcom':4A	
\.


--
-- Data for Name: wagtailsearch_query; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailsearch_query (id, query_string) FROM stdin;
\.


--
-- Data for Name: wagtailsearch_querydailyhits; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailsearch_querydailyhits (id, date, hits, query_id) FROM stdin;
\.


--
-- Data for Name: wagtailusers_userprofile; Type: TABLE DATA; Schema: public; Owner: -
--

COPY public.wagtailusers_userprofile (id, submitted_notifications, approved_notifications, rejected_notifications, user_id, preferred_language, current_time_zone, avatar, updated_comments_notifications, dismissibles, theme) FROM stdin;
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 2, true);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 18, true);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 207, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 1, false);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 1, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: core_navigation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.core_navigation_id_seq', 1, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 1, false);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 51, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 204, true);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.taggit_tag_id_seq', 1, false);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.taggit_taggeditem_id_seq', 1, false);


--
-- Name: wagtailadmin_admin_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailadmin_admin_id_seq', 1, false);


--
-- Name: wagtailcore_collection_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_collection_id_seq', 1, true);


--
-- Name: wagtailcore_collectionviewrestriction_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_collectionviewrestriction_groups_id_seq', 1, false);


--
-- Name: wagtailcore_collectionviewrestriction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_collectionviewrestriction_id_seq', 1, false);


--
-- Name: wagtailcore_comment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_comment_id_seq', 1, false);


--
-- Name: wagtailcore_commentreply_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_commentreply_id_seq', 1, false);


--
-- Name: wagtailcore_groupapprovaltask_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_groupapprovaltask_groups_id_seq', 1, true);


--
-- Name: wagtailcore_groupcollectionpermission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_groupcollectionpermission_id_seq', 12, true);


--
-- Name: wagtailcore_grouppagepermission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_grouppagepermission_id_seq', 7, true);


--
-- Name: wagtailcore_locale_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_locale_id_seq', 1, true);


--
-- Name: wagtailcore_modellogentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_modellogentry_id_seq', 1, false);


--
-- Name: wagtailcore_page_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_page_id_seq', 39, true);


--
-- Name: wagtailcore_pagelogentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_pagelogentry_id_seq', 1, false);


--
-- Name: wagtailcore_pagerevision_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_pagerevision_id_seq', 190, true);


--
-- Name: wagtailcore_pagesubscription_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_pagesubscription_id_seq', 1, false);


--
-- Name: wagtailcore_pageviewrestriction_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_pageviewrestriction_groups_id_seq', 1, false);


--
-- Name: wagtailcore_pageviewrestriction_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_pageviewrestriction_id_seq', 1, false);


--
-- Name: wagtailcore_referenceindex_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_referenceindex_id_seq', 1, false);


--
-- Name: wagtailcore_site_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_site_id_seq', 2, true);


--
-- Name: wagtailcore_task_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_task_id_seq', 1, true);


--
-- Name: wagtailcore_taskstate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_taskstate_id_seq', 1, false);


--
-- Name: wagtailcore_workflow_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_workflow_id_seq', 1, true);


--
-- Name: wagtailcore_workflowstate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_workflowstate_id_seq', 1, false);


--
-- Name: wagtailcore_workflowtask_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailcore_workflowtask_id_seq', 1, true);


--
-- Name: wagtaildocs_document_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtaildocs_document_id_seq', 1, false);


--
-- Name: wagtaildocs_uploadeddocument_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtaildocs_uploadeddocument_id_seq', 1, false);


--
-- Name: wagtailembeds_embed_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailembeds_embed_id_seq', 1, false);


--
-- Name: wagtailforms_formsubmission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailforms_formsubmission_id_seq', 1, false);


--
-- Name: wagtailimages_image_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailimages_image_id_seq', 6, true);


--
-- Name: wagtailimages_rendition_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailimages_rendition_id_seq', 1, false);


--
-- Name: wagtailimages_uploadedimage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailimages_uploadedimage_id_seq', 1, false);


--
-- Name: wagtailredirects_redirect_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailredirects_redirect_id_seq', 1, false);


--
-- Name: wagtailsearch_indexentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailsearch_indexentry_id_seq', 44, true);


--
-- Name: wagtailsearch_query_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailsearch_query_id_seq', 1, false);


--
-- Name: wagtailsearch_querydailyhits_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailsearch_querydailyhits_id_seq', 1, false);


--
-- Name: wagtailusers_userprofile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: -
--

SELECT pg_catalog.setval('public.wagtailusers_userprofile_id_seq', 1, false);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: core_navigation core_navigation_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.core_navigation
    ADD CONSTRAINT core_navigation_pkey PRIMARY KEY (id);


--
-- Name: core_navigation core_navigation_site_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.core_navigation
    ADD CONSTRAINT core_navigation_site_id_key UNIQUE (site_id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: home_homepage home_homepage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.home_homepage
    ADD CONSTRAINT home_homepage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: pages_articlechapterpage pages_articlechapterpage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articlechapterpage
    ADD CONSTRAINT pages_articlechapterpage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: pages_articleindexpage pages_articleindexpage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articleindexpage
    ADD CONSTRAINT pages_articleindexpage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: pages_articlepage pages_articlepage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articlepage
    ADD CONSTRAINT pages_articlepage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: pages_packageindexpage pages_packageindexpage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_packageindexpage
    ADD CONSTRAINT pages_packageindexpage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: pages_packagepage pages_packagepage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_packagepage
    ADD CONSTRAINT pages_packagepage_pkey PRIMARY KEY (page_ptr_id);


--
-- Name: taggit_tag taggit_tag_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_name_key UNIQUE (name);


--
-- Name: taggit_tag taggit_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_slug_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_slug_key UNIQUE (slug);


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq UNIQUE (content_type_id, object_id, tag_id);


--
-- Name: taggit_taggeditem taggit_taggeditem_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_grouppagepermission unique_permission; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT unique_permission UNIQUE (group_id, page_id, permission_id);


--
-- Name: wagtailcore_grouppagepermission unique_permission_type; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT unique_permission_type UNIQUE (group_id, page_id, permission_type);


--
-- Name: wagtailadmin_admin wagtailadmin_admin_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailadmin_admin
    ADD CONSTRAINT wagtailadmin_admin_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_collection wagtailcore_collection_path_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collection
    ADD CONSTRAINT wagtailcore_collection_path_key UNIQUE (path);


--
-- Name: wagtailcore_collection wagtailcore_collection_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collection
    ADD CONSTRAINT wagtailcore_collection_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_collectionviewrestriction_groups wagtailcore_collectionvi_collectionviewrestrictio_988995ae_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction_groups
    ADD CONSTRAINT wagtailcore_collectionvi_collectionviewrestrictio_988995ae_uniq UNIQUE (collectionviewrestriction_id, group_id);


--
-- Name: wagtailcore_collectionviewrestriction_groups wagtailcore_collectionviewrestriction_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction_groups
    ADD CONSTRAINT wagtailcore_collectionviewrestriction_groups_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_collectionviewrestriction wagtailcore_collectionviewrestriction_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction
    ADD CONSTRAINT wagtailcore_collectionviewrestriction_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_comment wagtailcore_comment_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_comment
    ADD CONSTRAINT wagtailcore_comment_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_commentreply wagtailcore_commentreply_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_commentreply
    ADD CONSTRAINT wagtailcore_commentreply_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_groupapprovaltask_groups wagtailcore_groupapprova_groupapprovaltask_id_gro_bb5ee7eb_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask_groups
    ADD CONSTRAINT wagtailcore_groupapprova_groupapprovaltask_id_gro_bb5ee7eb_uniq UNIQUE (groupapprovaltask_id, group_id);


--
-- Name: wagtailcore_groupapprovaltask_groups wagtailcore_groupapprovaltask_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask_groups
    ADD CONSTRAINT wagtailcore_groupapprovaltask_groups_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_groupapprovaltask wagtailcore_groupapprovaltask_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask
    ADD CONSTRAINT wagtailcore_groupapprovaltask_pkey PRIMARY KEY (task_ptr_id);


--
-- Name: wagtailcore_groupcollectionpermission wagtailcore_groupcollect_group_id_collection_id_p_a21cefe9_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupcollectionpermission
    ADD CONSTRAINT wagtailcore_groupcollect_group_id_collection_id_p_a21cefe9_uniq UNIQUE (group_id, collection_id, permission_id);


--
-- Name: wagtailcore_groupcollectionpermission wagtailcore_groupcollectionpermission_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupcollectionpermission
    ADD CONSTRAINT wagtailcore_groupcollectionpermission_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_grouppagepermission wagtailcore_grouppagepermission_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT wagtailcore_grouppagepermission_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_locale wagtailcore_locale_language_code_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_locale
    ADD CONSTRAINT wagtailcore_locale_language_code_key UNIQUE (language_code);


--
-- Name: wagtailcore_locale wagtailcore_locale_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_locale
    ADD CONSTRAINT wagtailcore_locale_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_modellogentry wagtailcore_modellogentry_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_modellogentry
    ADD CONSTRAINT wagtailcore_modellogentry_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_page wagtailcore_page_path_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_path_key UNIQUE (path);


--
-- Name: wagtailcore_page wagtailcore_page_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_page wagtailcore_page_translation_key_locale_id_9b041bad_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_translation_key_locale_id_9b041bad_uniq UNIQUE (translation_key, locale_id);


--
-- Name: wagtailcore_pagelogentry wagtailcore_pagelogentry_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagelogentry
    ADD CONSTRAINT wagtailcore_pagelogentry_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_revision wagtailcore_pagerevision_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_revision
    ADD CONSTRAINT wagtailcore_pagerevision_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_pagesubscription wagtailcore_pagesubscription_page_id_user_id_0cef73ed_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagesubscription
    ADD CONSTRAINT wagtailcore_pagesubscription_page_id_user_id_0cef73ed_uniq UNIQUE (page_id, user_id);


--
-- Name: wagtailcore_pagesubscription wagtailcore_pagesubscription_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagesubscription
    ADD CONSTRAINT wagtailcore_pagesubscription_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_pageviewrestriction_groups wagtailcore_pageviewrest_pageviewrestriction_id_g_d23f80bb_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction_groups
    ADD CONSTRAINT wagtailcore_pageviewrest_pageviewrestriction_id_g_d23f80bb_uniq UNIQUE (pageviewrestriction_id, group_id);


--
-- Name: wagtailcore_pageviewrestriction_groups wagtailcore_pageviewrestriction_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction_groups
    ADD CONSTRAINT wagtailcore_pageviewrestriction_groups_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_pageviewrestriction wagtailcore_pageviewrestriction_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction
    ADD CONSTRAINT wagtailcore_pageviewrestriction_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_referenceindex wagtailcore_referenceind_base_content_type_id_obj_9e6ccd6a_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_referenceindex
    ADD CONSTRAINT wagtailcore_referenceind_base_content_type_id_obj_9e6ccd6a_uniq UNIQUE (base_content_type_id, object_id, to_content_type_id, to_object_id, content_path_hash);


--
-- Name: wagtailcore_referenceindex wagtailcore_referenceindex_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_referenceindex
    ADD CONSTRAINT wagtailcore_referenceindex_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_site wagtailcore_site_hostname_port_2c626d70_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_site
    ADD CONSTRAINT wagtailcore_site_hostname_port_2c626d70_uniq UNIQUE (hostname, port);


--
-- Name: wagtailcore_site wagtailcore_site_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_site
    ADD CONSTRAINT wagtailcore_site_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_task wagtailcore_task_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_task
    ADD CONSTRAINT wagtailcore_task_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_taskstate wagtailcore_taskstate_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstate_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_workflow wagtailcore_workflow_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflow
    ADD CONSTRAINT wagtailcore_workflow_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_workflowcontenttype wagtailcore_workflowcontenttype_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowcontenttype
    ADD CONSTRAINT wagtailcore_workflowcontenttype_pkey PRIMARY KEY (content_type_id);


--
-- Name: wagtailcore_workflowpage wagtailcore_workflowpage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowpage
    ADD CONSTRAINT wagtailcore_workflowpage_pkey PRIMARY KEY (page_id);


--
-- Name: wagtailcore_workflowstate wagtailcore_workflowstate_current_task_state_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflowstate_current_task_state_id_key UNIQUE (current_task_state_id);


--
-- Name: wagtailcore_workflowstate wagtailcore_workflowstate_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflowstate_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_workflowtask wagtailcore_workflowtask_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowtask
    ADD CONSTRAINT wagtailcore_workflowtask_pkey PRIMARY KEY (id);


--
-- Name: wagtailcore_workflowtask wagtailcore_workflowtask_workflow_id_task_id_4ec7a62b_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowtask
    ADD CONSTRAINT wagtailcore_workflowtask_workflow_id_task_id_4ec7a62b_uniq UNIQUE (workflow_id, task_id);


--
-- Name: wagtaildocs_document wagtaildocs_document_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtaildocs_document
    ADD CONSTRAINT wagtaildocs_document_pkey PRIMARY KEY (id);


--
-- Name: wagtaildocs_uploadeddocument wagtaildocs_uploadeddocument_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtaildocs_uploadeddocument
    ADD CONSTRAINT wagtaildocs_uploadeddocument_pkey PRIMARY KEY (id);


--
-- Name: wagtailembeds_embed wagtailembeds_embed_hash_c9bd8c9a_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailembeds_embed
    ADD CONSTRAINT wagtailembeds_embed_hash_c9bd8c9a_uniq UNIQUE (hash);


--
-- Name: wagtailembeds_embed wagtailembeds_embed_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailembeds_embed
    ADD CONSTRAINT wagtailembeds_embed_pkey PRIMARY KEY (id);


--
-- Name: wagtailforms_formsubmission wagtailforms_formsubmission_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailforms_formsubmission
    ADD CONSTRAINT wagtailforms_formsubmission_pkey PRIMARY KEY (id);


--
-- Name: wagtailimages_image wagtailimages_image_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_image
    ADD CONSTRAINT wagtailimages_image_pkey PRIMARY KEY (id);


--
-- Name: wagtailimages_rendition wagtailimages_rendition_image_id_filter_spec_foc_323c8fe0_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_rendition
    ADD CONSTRAINT wagtailimages_rendition_image_id_filter_spec_foc_323c8fe0_uniq UNIQUE (image_id, filter_spec, focal_point_key);


--
-- Name: wagtailimages_rendition wagtailimages_rendition_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_rendition
    ADD CONSTRAINT wagtailimages_rendition_pkey PRIMARY KEY (id);


--
-- Name: wagtailimages_uploadedimage wagtailimages_uploadedimage_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_uploadedimage
    ADD CONSTRAINT wagtailimages_uploadedimage_pkey PRIMARY KEY (id);


--
-- Name: wagtailredirects_redirect wagtailredirects_redirect_old_path_site_id_783622d7_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailredirects_redirect
    ADD CONSTRAINT wagtailredirects_redirect_old_path_site_id_783622d7_uniq UNIQUE (old_path, site_id);


--
-- Name: wagtailredirects_redirect wagtailredirects_redirect_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailredirects_redirect
    ADD CONSTRAINT wagtailredirects_redirect_pkey PRIMARY KEY (id);


--
-- Name: wagtailsearch_indexentry wagtailsearch_indexentry_content_type_id_object_i_bcd7ba73_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_indexentry
    ADD CONSTRAINT wagtailsearch_indexentry_content_type_id_object_i_bcd7ba73_uniq UNIQUE (content_type_id, object_id);


--
-- Name: wagtailsearch_indexentry wagtailsearch_indexentry_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_indexentry
    ADD CONSTRAINT wagtailsearch_indexentry_pkey PRIMARY KEY (id);


--
-- Name: wagtailsearch_query wagtailsearch_query_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_query
    ADD CONSTRAINT wagtailsearch_query_pkey PRIMARY KEY (id);


--
-- Name: wagtailsearch_query wagtailsearch_query_query_string_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_query
    ADD CONSTRAINT wagtailsearch_query_query_string_key UNIQUE (query_string);


--
-- Name: wagtailsearch_querydailyhits wagtailsearch_querydailyhits_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_querydailyhits
    ADD CONSTRAINT wagtailsearch_querydailyhits_pkey PRIMARY KEY (id);


--
-- Name: wagtailsearch_querydailyhits wagtailsearch_querydailyhits_query_id_date_1dd232e6_uniq; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_querydailyhits
    ADD CONSTRAINT wagtailsearch_querydailyhits_query_id_date_1dd232e6_uniq UNIQUE (query_id, date);


--
-- Name: wagtailusers_userprofile wagtailusers_userprofile_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailusers_userprofile
    ADD CONSTRAINT wagtailusers_userprofile_pkey PRIMARY KEY (id);


--
-- Name: wagtailusers_userprofile wagtailusers_userprofile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailusers_userprofile
    ADD CONSTRAINT wagtailusers_userprofile_user_id_key UNIQUE (user_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: base_content_object_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX base_content_object_idx ON public.wagtailcore_revision USING btree (base_content_type_id, object_id);


--
-- Name: content_object_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX content_object_idx ON public.wagtailcore_revision USING btree (content_type_id, object_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: taggit_tag_name_58eb2ed9_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_tag_name_58eb2ed9_like ON public.taggit_tag USING btree (name varchar_pattern_ops);


--
-- Name: taggit_tag_slug_6be58b2c_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_tag_slug_6be58b2c_like ON public.taggit_tag USING btree (slug varchar_pattern_ops);


--
-- Name: taggit_taggeditem_content_type_id_9957a03c; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_taggeditem_content_type_id_9957a03c ON public.taggit_taggeditem USING btree (content_type_id);


--
-- Name: taggit_taggeditem_content_type_id_object_id_196cc965_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_taggeditem_content_type_id_object_id_196cc965_idx ON public.taggit_taggeditem USING btree (content_type_id, object_id);


--
-- Name: taggit_taggeditem_object_id_e2d7d1df; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_taggeditem_object_id_e2d7d1df ON public.taggit_taggeditem USING btree (object_id);


--
-- Name: taggit_taggeditem_tag_id_f4f5b767; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX taggit_taggeditem_tag_id_f4f5b767 ON public.taggit_taggeditem USING btree (tag_id);


--
-- Name: unique_in_progress_workflow; Type: INDEX; Schema: public; Owner: -
--

CREATE UNIQUE INDEX unique_in_progress_workflow ON public.wagtailcore_workflowstate USING btree (base_content_type_id, object_id) WHERE ((status)::text = ANY ((ARRAY['in_progress'::character varying, 'needs_changes'::character varying])::text[]));


--
-- Name: wagtailcore_collection_path_d848dc19_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_collection_path_d848dc19_like ON public.wagtailcore_collection USING btree (path varchar_pattern_ops);


--
-- Name: wagtailcore_collectionview_collectionviewrestriction__47320efd; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_collectionview_collectionviewrestriction__47320efd ON public.wagtailcore_collectionviewrestriction_groups USING btree (collectionviewrestriction_id);


--
-- Name: wagtailcore_collectionviewrestriction_collection_id_761908ec; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_collectionviewrestriction_collection_id_761908ec ON public.wagtailcore_collectionviewrestriction USING btree (collection_id);


--
-- Name: wagtailcore_collectionviewrestriction_groups_group_id_1823f2a3; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_collectionviewrestriction_groups_group_id_1823f2a3 ON public.wagtailcore_collectionviewrestriction_groups USING btree (group_id);


--
-- Name: wagtailcore_comment_page_id_108444b5; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_comment_page_id_108444b5 ON public.wagtailcore_comment USING btree (page_id);


--
-- Name: wagtailcore_comment_resolved_by_id_a282aa0e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_comment_resolved_by_id_a282aa0e ON public.wagtailcore_comment USING btree (resolved_by_id);


--
-- Name: wagtailcore_comment_revision_created_id_1d058279; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_comment_revision_created_id_1d058279 ON public.wagtailcore_comment USING btree (revision_created_id);


--
-- Name: wagtailcore_comment_user_id_0c577ca6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_comment_user_id_0c577ca6 ON public.wagtailcore_comment USING btree (user_id);


--
-- Name: wagtailcore_commentreply_comment_id_afc7e027; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_commentreply_comment_id_afc7e027 ON public.wagtailcore_commentreply USING btree (comment_id);


--
-- Name: wagtailcore_commentreply_user_id_d0b3b9c3; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_commentreply_user_id_d0b3b9c3 ON public.wagtailcore_commentreply USING btree (user_id);


--
-- Name: wagtailcore_groupapprovalt_groupapprovaltask_id_9a9255ea; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_groupapprovalt_groupapprovaltask_id_9a9255ea ON public.wagtailcore_groupapprovaltask_groups USING btree (groupapprovaltask_id);


--
-- Name: wagtailcore_groupapprovaltask_groups_group_id_2e64b61f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_groupapprovaltask_groups_group_id_2e64b61f ON public.wagtailcore_groupapprovaltask_groups USING btree (group_id);


--
-- Name: wagtailcore_groupcollectionpermission_collection_id_5423575a; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_groupcollectionpermission_collection_id_5423575a ON public.wagtailcore_groupcollectionpermission USING btree (collection_id);


--
-- Name: wagtailcore_groupcollectionpermission_group_id_05d61460; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_groupcollectionpermission_group_id_05d61460 ON public.wagtailcore_groupcollectionpermission USING btree (group_id);


--
-- Name: wagtailcore_groupcollectionpermission_permission_id_1b626275; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_groupcollectionpermission_permission_id_1b626275 ON public.wagtailcore_groupcollectionpermission USING btree (permission_id);


--
-- Name: wagtailcore_grouppagepermission_group_id_fc07e671; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_grouppagepermission_group_id_fc07e671 ON public.wagtailcore_grouppagepermission USING btree (group_id);


--
-- Name: wagtailcore_grouppagepermission_page_id_710b114a; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_grouppagepermission_page_id_710b114a ON public.wagtailcore_grouppagepermission USING btree (page_id);


--
-- Name: wagtailcore_grouppagepermission_permission_id_05acb22e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_grouppagepermission_permission_id_05acb22e ON public.wagtailcore_grouppagepermission USING btree (permission_id);


--
-- Name: wagtailcore_locale_language_code_03149338_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_locale_language_code_03149338_like ON public.wagtailcore_locale USING btree (language_code varchar_pattern_ops);


--
-- Name: wagtailcore_modellogentry_action_d2d856ee; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_action_d2d856ee ON public.wagtailcore_modellogentry USING btree (action);


--
-- Name: wagtailcore_modellogentry_action_d2d856ee_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_action_d2d856ee_like ON public.wagtailcore_modellogentry USING btree (action varchar_pattern_ops);


--
-- Name: wagtailcore_modellogentry_content_changed_8bc39742; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_content_changed_8bc39742 ON public.wagtailcore_modellogentry USING btree (content_changed);


--
-- Name: wagtailcore_modellogentry_content_type_id_68849e77; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_content_type_id_68849e77 ON public.wagtailcore_modellogentry USING btree (content_type_id);


--
-- Name: wagtailcore_modellogentry_object_id_e0e7d4ef; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_object_id_e0e7d4ef ON public.wagtailcore_modellogentry USING btree (object_id);


--
-- Name: wagtailcore_modellogentry_object_id_e0e7d4ef_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_object_id_e0e7d4ef_like ON public.wagtailcore_modellogentry USING btree (object_id varchar_pattern_ops);


--
-- Name: wagtailcore_modellogentry_revision_id_df6ca33a; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_revision_id_df6ca33a ON public.wagtailcore_modellogentry USING btree (revision_id);


--
-- Name: wagtailcore_modellogentry_timestamp_9694521b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_timestamp_9694521b ON public.wagtailcore_modellogentry USING btree ("timestamp");


--
-- Name: wagtailcore_modellogentry_user_id_0278d1bf; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_modellogentry_user_id_0278d1bf ON public.wagtailcore_modellogentry USING btree (user_id);


--
-- Name: wagtailcore_page_alias_of_id_12945502; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_alias_of_id_12945502 ON public.wagtailcore_page USING btree (alias_of_id);


--
-- Name: wagtailcore_page_content_type_id_c28424df; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_content_type_id_c28424df ON public.wagtailcore_page USING btree (content_type_id);


--
-- Name: wagtailcore_page_first_published_at_2b5dd637; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_first_published_at_2b5dd637 ON public.wagtailcore_page USING btree (first_published_at);


--
-- Name: wagtailcore_page_latest_revision_id_e60fef51; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_latest_revision_id_e60fef51 ON public.wagtailcore_page USING btree (latest_revision_id);


--
-- Name: wagtailcore_page_live_revision_id_930bd822; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_live_revision_id_930bd822 ON public.wagtailcore_page USING btree (live_revision_id);


--
-- Name: wagtailcore_page_locale_id_3c7e30a6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_locale_id_3c7e30a6 ON public.wagtailcore_page USING btree (locale_id);


--
-- Name: wagtailcore_page_locked_by_id_bcb86245; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_locked_by_id_bcb86245 ON public.wagtailcore_page USING btree (locked_by_id);


--
-- Name: wagtailcore_page_owner_id_fbf7c332; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_owner_id_fbf7c332 ON public.wagtailcore_page USING btree (owner_id);


--
-- Name: wagtailcore_page_path_98eba2c8_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_path_98eba2c8_like ON public.wagtailcore_page USING btree (path varchar_pattern_ops);


--
-- Name: wagtailcore_page_slug_e7c11b8f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_slug_e7c11b8f ON public.wagtailcore_page USING btree (slug);


--
-- Name: wagtailcore_page_slug_e7c11b8f_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_page_slug_e7c11b8f_like ON public.wagtailcore_page USING btree (slug varchar_pattern_ops);


--
-- Name: wagtailcore_pagelogentry_action_c2408198; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_action_c2408198 ON public.wagtailcore_pagelogentry USING btree (action);


--
-- Name: wagtailcore_pagelogentry_action_c2408198_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_action_c2408198_like ON public.wagtailcore_pagelogentry USING btree (action varchar_pattern_ops);


--
-- Name: wagtailcore_pagelogentry_content_changed_99f27ade; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_content_changed_99f27ade ON public.wagtailcore_pagelogentry USING btree (content_changed);


--
-- Name: wagtailcore_pagelogentry_content_type_id_74e7708a; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_content_type_id_74e7708a ON public.wagtailcore_pagelogentry USING btree (content_type_id);


--
-- Name: wagtailcore_pagelogentry_page_id_8464e327; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_page_id_8464e327 ON public.wagtailcore_pagelogentry USING btree (page_id);


--
-- Name: wagtailcore_pagelogentry_revision_id_8043d103; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_revision_id_8043d103 ON public.wagtailcore_pagelogentry USING btree (revision_id);


--
-- Name: wagtailcore_pagelogentry_timestamp_deb774c4; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_timestamp_deb774c4 ON public.wagtailcore_pagelogentry USING btree ("timestamp");


--
-- Name: wagtailcore_pagelogentry_user_id_604ccfd8; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagelogentry_user_id_604ccfd8 ON public.wagtailcore_pagelogentry USING btree (user_id);


--
-- Name: wagtailcore_pagerevision_approved_go_live_at_e56afc67; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagerevision_approved_go_live_at_e56afc67 ON public.wagtailcore_revision USING btree (approved_go_live_at);


--
-- Name: wagtailcore_pagerevision_created_at_66954e3b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagerevision_created_at_66954e3b ON public.wagtailcore_revision USING btree (created_at);


--
-- Name: wagtailcore_pagerevision_submitted_for_moderation_c682e44c; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagerevision_submitted_for_moderation_c682e44c ON public.wagtailcore_revision USING btree (submitted_for_moderation);


--
-- Name: wagtailcore_pagerevision_user_id_2409d2f4; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagerevision_user_id_2409d2f4 ON public.wagtailcore_revision USING btree (user_id);


--
-- Name: wagtailcore_pagesubscription_page_id_a085e7a6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagesubscription_page_id_a085e7a6 ON public.wagtailcore_pagesubscription USING btree (page_id);


--
-- Name: wagtailcore_pagesubscription_user_id_89d7def9; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pagesubscription_user_id_89d7def9 ON public.wagtailcore_pagesubscription USING btree (user_id);


--
-- Name: wagtailcore_pageviewrestri_pageviewrestriction_id_f147a99a; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pageviewrestri_pageviewrestriction_id_f147a99a ON public.wagtailcore_pageviewrestriction_groups USING btree (pageviewrestriction_id);


--
-- Name: wagtailcore_pageviewrestriction_groups_group_id_6460f223; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pageviewrestriction_groups_group_id_6460f223 ON public.wagtailcore_pageviewrestriction_groups USING btree (group_id);


--
-- Name: wagtailcore_pageviewrestriction_page_id_15a8bea6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_pageviewrestriction_page_id_15a8bea6 ON public.wagtailcore_pageviewrestriction USING btree (page_id);


--
-- Name: wagtailcore_referenceindex_base_content_type_id_313cf40f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_referenceindex_base_content_type_id_313cf40f ON public.wagtailcore_referenceindex USING btree (base_content_type_id);


--
-- Name: wagtailcore_referenceindex_content_type_id_766e0336; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_referenceindex_content_type_id_766e0336 ON public.wagtailcore_referenceindex USING btree (content_type_id);


--
-- Name: wagtailcore_referenceindex_to_content_type_id_93690bbd; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_referenceindex_to_content_type_id_93690bbd ON public.wagtailcore_referenceindex USING btree (to_content_type_id);


--
-- Name: wagtailcore_revision_base_content_type_id_5b4ef7bd; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_revision_base_content_type_id_5b4ef7bd ON public.wagtailcore_revision USING btree (base_content_type_id);


--
-- Name: wagtailcore_revision_content_type_id_c8cb69c0; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_revision_content_type_id_c8cb69c0 ON public.wagtailcore_revision USING btree (content_type_id);


--
-- Name: wagtailcore_site_hostname_96b20b46; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_site_hostname_96b20b46 ON public.wagtailcore_site USING btree (hostname);


--
-- Name: wagtailcore_site_hostname_96b20b46_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_site_hostname_96b20b46_like ON public.wagtailcore_site USING btree (hostname varchar_pattern_ops);


--
-- Name: wagtailcore_site_root_page_id_e02fb95c; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_site_root_page_id_e02fb95c ON public.wagtailcore_site USING btree (root_page_id);


--
-- Name: wagtailcore_task_content_type_id_249ab8ba; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_task_content_type_id_249ab8ba ON public.wagtailcore_task USING btree (content_type_id);


--
-- Name: wagtailcore_taskstate_content_type_id_0a758fdc; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_taskstate_content_type_id_0a758fdc ON public.wagtailcore_taskstate USING btree (content_type_id);


--
-- Name: wagtailcore_taskstate_finished_by_id_13f98229; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_taskstate_finished_by_id_13f98229 ON public.wagtailcore_taskstate USING btree (finished_by_id);


--
-- Name: wagtailcore_taskstate_page_revision_id_9f52c88e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_taskstate_page_revision_id_9f52c88e ON public.wagtailcore_taskstate USING btree (revision_id);


--
-- Name: wagtailcore_taskstate_task_id_c3677c34; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_taskstate_task_id_c3677c34 ON public.wagtailcore_taskstate USING btree (task_id);


--
-- Name: wagtailcore_taskstate_workflow_state_id_9239a775; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_taskstate_workflow_state_id_9239a775 ON public.wagtailcore_taskstate USING btree (workflow_state_id);


--
-- Name: wagtailcore_workflowcontenttype_workflow_id_9aad7cd2; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowcontenttype_workflow_id_9aad7cd2 ON public.wagtailcore_workflowcontenttype USING btree (workflow_id);


--
-- Name: wagtailcore_workflowpage_workflow_id_56f56ff6; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowpage_workflow_id_56f56ff6 ON public.wagtailcore_workflowpage USING btree (workflow_id);


--
-- Name: wagtailcore_workflowstate_base_content_type_id_a30dc576; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowstate_base_content_type_id_a30dc576 ON public.wagtailcore_workflowstate USING btree (base_content_type_id);


--
-- Name: wagtailcore_workflowstate_content_type_id_2bb78ce1; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowstate_content_type_id_2bb78ce1 ON public.wagtailcore_workflowstate USING btree (content_type_id);


--
-- Name: wagtailcore_workflowstate_requested_by_id_4090bca3; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowstate_requested_by_id_4090bca3 ON public.wagtailcore_workflowstate USING btree (requested_by_id);


--
-- Name: wagtailcore_workflowstate_workflow_id_1f18378f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowstate_workflow_id_1f18378f ON public.wagtailcore_workflowstate USING btree (workflow_id);


--
-- Name: wagtailcore_workflowtask_task_id_ce7716fe; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowtask_task_id_ce7716fe ON public.wagtailcore_workflowtask USING btree (task_id);


--
-- Name: wagtailcore_workflowtask_workflow_id_b9717175; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailcore_workflowtask_workflow_id_b9717175 ON public.wagtailcore_workflowtask USING btree (workflow_id);


--
-- Name: wagtaildocs_document_collection_id_23881625; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtaildocs_document_collection_id_23881625 ON public.wagtaildocs_document USING btree (collection_id);


--
-- Name: wagtaildocs_document_uploaded_by_user_id_17258b41; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtaildocs_document_uploaded_by_user_id_17258b41 ON public.wagtaildocs_document USING btree (uploaded_by_user_id);


--
-- Name: wagtaildocs_uploadeddocument_uploaded_by_user_id_8dd61a73; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtaildocs_uploadeddocument_uploaded_by_user_id_8dd61a73 ON public.wagtaildocs_uploadeddocument USING btree (uploaded_by_user_id);


--
-- Name: wagtailembeds_embed_cache_until_26c94bb0; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailembeds_embed_cache_until_26c94bb0 ON public.wagtailembeds_embed USING btree (cache_until);


--
-- Name: wagtailembeds_embed_hash_c9bd8c9a_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailembeds_embed_hash_c9bd8c9a_like ON public.wagtailembeds_embed USING btree (hash varchar_pattern_ops);


--
-- Name: wagtailforms_formsubmission_page_id_e48e93e7; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailforms_formsubmission_page_id_e48e93e7 ON public.wagtailforms_formsubmission USING btree (page_id);


--
-- Name: wagtailimages_image_collection_id_c2f8af7e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_image_collection_id_c2f8af7e ON public.wagtailimages_image USING btree (collection_id);


--
-- Name: wagtailimages_image_created_at_86fa6cd4; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_image_created_at_86fa6cd4 ON public.wagtailimages_image USING btree (created_at);


--
-- Name: wagtailimages_image_file_hash_fb5bbb23; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_image_file_hash_fb5bbb23 ON public.wagtailimages_image USING btree (file_hash);


--
-- Name: wagtailimages_image_file_hash_fb5bbb23_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_image_file_hash_fb5bbb23_like ON public.wagtailimages_image USING btree (file_hash varchar_pattern_ops);


--
-- Name: wagtailimages_image_uploaded_by_user_id_5d73dc75; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_image_uploaded_by_user_id_5d73dc75 ON public.wagtailimages_image USING btree (uploaded_by_user_id);


--
-- Name: wagtailimages_rendition_filter_spec_1cba3201; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_rendition_filter_spec_1cba3201 ON public.wagtailimages_rendition USING btree (filter_spec);


--
-- Name: wagtailimages_rendition_filter_spec_1cba3201_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_rendition_filter_spec_1cba3201_like ON public.wagtailimages_rendition USING btree (filter_spec varchar_pattern_ops);


--
-- Name: wagtailimages_rendition_image_id_3e1fd774; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_rendition_image_id_3e1fd774 ON public.wagtailimages_rendition USING btree (image_id);


--
-- Name: wagtailimages_uploadedimage_uploaded_by_user_id_85921689; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailimages_uploadedimage_uploaded_by_user_id_85921689 ON public.wagtailimages_uploadedimage USING btree (uploaded_by_user_id);


--
-- Name: wagtailredirects_redirect_old_path_bb35247b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailredirects_redirect_old_path_bb35247b ON public.wagtailredirects_redirect USING btree (old_path);


--
-- Name: wagtailredirects_redirect_old_path_bb35247b_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailredirects_redirect_old_path_bb35247b_like ON public.wagtailredirects_redirect USING btree (old_path varchar_pattern_ops);


--
-- Name: wagtailredirects_redirect_redirect_page_id_b5728a8f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailredirects_redirect_redirect_page_id_b5728a8f ON public.wagtailredirects_redirect USING btree (redirect_page_id);


--
-- Name: wagtailredirects_redirect_site_id_780a0e1e; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailredirects_redirect_site_id_780a0e1e ON public.wagtailredirects_redirect USING btree (site_id);


--
-- Name: wagtailsear_autocom_476c89_gin; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsear_autocom_476c89_gin ON public.wagtailsearch_indexentry USING gin (autocomplete);


--
-- Name: wagtailsear_body_90c85d_gin; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsear_body_90c85d_gin ON public.wagtailsearch_indexentry USING gin (body);


--
-- Name: wagtailsear_title_9caae0_gin; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsear_title_9caae0_gin ON public.wagtailsearch_indexentry USING gin (title);


--
-- Name: wagtailsearch_indexentry_content_type_id_62ed694f; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsearch_indexentry_content_type_id_62ed694f ON public.wagtailsearch_indexentry USING btree (content_type_id);


--
-- Name: wagtailsearch_query_query_string_e785ea07_like; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsearch_query_query_string_e785ea07_like ON public.wagtailsearch_query USING btree (query_string varchar_pattern_ops);


--
-- Name: wagtailsearch_querydailyhits_query_id_2185994b; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX wagtailsearch_querydailyhits_query_id_2185994b ON public.wagtailsearch_querydailyhits USING btree (query_id);


--
-- Name: workflowstate_base_ct_id_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX workflowstate_base_ct_id_idx ON public.wagtailcore_workflowstate USING btree (base_content_type_id, object_id);


--
-- Name: workflowstate_ct_id_idx; Type: INDEX; Schema: public; Owner: -
--

CREATE INDEX workflowstate_ct_id_idx ON public.wagtailcore_workflowstate USING btree (content_type_id, object_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: core_navigation core_navigation_site_id_a798b04a_fk_wagtailcore_site_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.core_navigation
    ADD CONSTRAINT core_navigation_site_id_a798b04a_fk_wagtailcore_site_id FOREIGN KEY (site_id) REFERENCES public.wagtailcore_site(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: home_homepage home_homepage_page_ptr_id_e5b77cf7_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.home_homepage
    ADD CONSTRAINT home_homepage_page_ptr_id_e5b77cf7_fk_wagtailcore_page_id FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pages_articlechapterpage pages_articlechapter_page_ptr_id_13de3488_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articlechapterpage
    ADD CONSTRAINT pages_articlechapter_page_ptr_id_13de3488_fk_wagtailco FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pages_articleindexpage pages_articleindexpa_page_ptr_id_dfd3755f_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articleindexpage
    ADD CONSTRAINT pages_articleindexpa_page_ptr_id_dfd3755f_fk_wagtailco FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pages_articlepage pages_articlepage_page_ptr_id_0e3df446_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_articlepage
    ADD CONSTRAINT pages_articlepage_page_ptr_id_0e3df446_fk_wagtailcore_page_id FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pages_packageindexpage pages_packageindexpa_page_ptr_id_7e48dd6e_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_packageindexpage
    ADD CONSTRAINT pages_packageindexpa_page_ptr_id_7e48dd6e_fk_wagtailco FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: pages_packagepage pages_packagepage_page_ptr_id_70c7d1e2_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.pages_packagepage
    ADD CONSTRAINT pages_packagepage_page_ptr_id_70c7d1e2_fk_wagtailcore_page_id FOREIGN KEY (page_ptr_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_9957a03c_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_9957a03c_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id FOREIGN KEY (tag_id) REFERENCES public.taggit_tag(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_collectionviewrestriction wagtailcore_collecti_collection_id_761908ec_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction
    ADD CONSTRAINT wagtailcore_collecti_collection_id_761908ec_fk_wagtailco FOREIGN KEY (collection_id) REFERENCES public.wagtailcore_collection(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_collectionviewrestriction_groups wagtailcore_collecti_collectionviewrestri_47320efd_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction_groups
    ADD CONSTRAINT wagtailcore_collecti_collectionviewrestri_47320efd_fk_wagtailco FOREIGN KEY (collectionviewrestriction_id) REFERENCES public.wagtailcore_collectionviewrestriction(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_collectionviewrestriction_groups wagtailcore_collecti_group_id_1823f2a3_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_collectionviewrestriction_groups
    ADD CONSTRAINT wagtailcore_collecti_group_id_1823f2a3_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_comment wagtailcore_comment_page_id_108444b5_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_comment
    ADD CONSTRAINT wagtailcore_comment_page_id_108444b5_fk_wagtailcore_page_id FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_comment wagtailcore_comment_resolved_by_id_a282aa0e_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_comment
    ADD CONSTRAINT wagtailcore_comment_resolved_by_id_a282aa0e_fk_auth_user_id FOREIGN KEY (resolved_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_comment wagtailcore_comment_revision_created_id_1d058279_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_comment
    ADD CONSTRAINT wagtailcore_comment_revision_created_id_1d058279_fk_wagtailco FOREIGN KEY (revision_created_id) REFERENCES public.wagtailcore_revision(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_comment wagtailcore_comment_user_id_0c577ca6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_comment
    ADD CONSTRAINT wagtailcore_comment_user_id_0c577ca6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_commentreply wagtailcore_commentr_comment_id_afc7e027_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_commentreply
    ADD CONSTRAINT wagtailcore_commentr_comment_id_afc7e027_fk_wagtailco FOREIGN KEY (comment_id) REFERENCES public.wagtailcore_comment(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_commentreply wagtailcore_commentreply_user_id_d0b3b9c3_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_commentreply
    ADD CONSTRAINT wagtailcore_commentreply_user_id_d0b3b9c3_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupapprovaltask_groups wagtailcore_groupapp_group_id_2e64b61f_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask_groups
    ADD CONSTRAINT wagtailcore_groupapp_group_id_2e64b61f_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupapprovaltask_groups wagtailcore_groupapp_groupapprovaltask_id_9a9255ea_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask_groups
    ADD CONSTRAINT wagtailcore_groupapp_groupapprovaltask_id_9a9255ea_fk_wagtailco FOREIGN KEY (groupapprovaltask_id) REFERENCES public.wagtailcore_groupapprovaltask(task_ptr_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupapprovaltask wagtailcore_groupapp_task_ptr_id_cfe58781_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupapprovaltask
    ADD CONSTRAINT wagtailcore_groupapp_task_ptr_id_cfe58781_fk_wagtailco FOREIGN KEY (task_ptr_id) REFERENCES public.wagtailcore_task(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupcollectionpermission wagtailcore_groupcol_collection_id_5423575a_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupcollectionpermission
    ADD CONSTRAINT wagtailcore_groupcol_collection_id_5423575a_fk_wagtailco FOREIGN KEY (collection_id) REFERENCES public.wagtailcore_collection(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupcollectionpermission wagtailcore_groupcol_group_id_05d61460_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupcollectionpermission
    ADD CONSTRAINT wagtailcore_groupcol_group_id_05d61460_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_groupcollectionpermission wagtailcore_groupcol_permission_id_1b626275_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_groupcollectionpermission
    ADD CONSTRAINT wagtailcore_groupcol_permission_id_1b626275_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_grouppagepermission wagtailcore_grouppag_group_id_fc07e671_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT wagtailcore_grouppag_group_id_fc07e671_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_grouppagepermission wagtailcore_grouppag_page_id_710b114a_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT wagtailcore_grouppag_page_id_710b114a_fk_wagtailco FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_grouppagepermission wagtailcore_grouppag_permission_id_05acb22e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_grouppagepermission
    ADD CONSTRAINT wagtailcore_grouppag_permission_id_05acb22e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_modellogentry wagtailcore_modellog_content_type_id_68849e77_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_modellogentry
    ADD CONSTRAINT wagtailcore_modellog_content_type_id_68849e77_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_alias_of_id_12945502_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_alias_of_id_12945502_fk_wagtailcore_page_id FOREIGN KEY (alias_of_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_content_type_id_c28424df_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_content_type_id_c28424df_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_latest_revision_id_e60fef51_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_latest_revision_id_e60fef51_fk_wagtailco FOREIGN KEY (latest_revision_id) REFERENCES public.wagtailcore_revision(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_live_revision_id_930bd822_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_live_revision_id_930bd822_fk_wagtailco FOREIGN KEY (live_revision_id) REFERENCES public.wagtailcore_revision(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_locale_id_3c7e30a6_fk_wagtailcore_locale_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_locale_id_3c7e30a6_fk_wagtailcore_locale_id FOREIGN KEY (locale_id) REFERENCES public.wagtailcore_locale(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_locked_by_id_bcb86245_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_locked_by_id_bcb86245_fk_auth_user_id FOREIGN KEY (locked_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_page wagtailcore_page_owner_id_fbf7c332_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_page
    ADD CONSTRAINT wagtailcore_page_owner_id_fbf7c332_fk_auth_user_id FOREIGN KEY (owner_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pagelogentry wagtailcore_pageloge_content_type_id_74e7708a_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagelogentry
    ADD CONSTRAINT wagtailcore_pageloge_content_type_id_74e7708a_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_revision wagtailcore_pagerevision_user_id_2409d2f4_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_revision
    ADD CONSTRAINT wagtailcore_pagerevision_user_id_2409d2f4_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pagesubscription wagtailcore_pagesubs_page_id_a085e7a6_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagesubscription
    ADD CONSTRAINT wagtailcore_pagesubs_page_id_a085e7a6_fk_wagtailco FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pagesubscription wagtailcore_pagesubscription_user_id_89d7def9_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pagesubscription
    ADD CONSTRAINT wagtailcore_pagesubscription_user_id_89d7def9_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pageviewrestriction_groups wagtailcore_pageview_group_id_6460f223_fk_auth_grou; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction_groups
    ADD CONSTRAINT wagtailcore_pageview_group_id_6460f223_fk_auth_grou FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pageviewrestriction wagtailcore_pageview_page_id_15a8bea6_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction
    ADD CONSTRAINT wagtailcore_pageview_page_id_15a8bea6_fk_wagtailco FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_pageviewrestriction_groups wagtailcore_pageview_pageviewrestriction__f147a99a_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_pageviewrestriction_groups
    ADD CONSTRAINT wagtailcore_pageview_pageviewrestriction__f147a99a_fk_wagtailco FOREIGN KEY (pageviewrestriction_id) REFERENCES public.wagtailcore_pageviewrestriction(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_referenceindex wagtailcore_referenc_base_content_type_id_313cf40f_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_referenceindex
    ADD CONSTRAINT wagtailcore_referenc_base_content_type_id_313cf40f_fk_django_co FOREIGN KEY (base_content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_referenceindex wagtailcore_referenc_content_type_id_766e0336_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_referenceindex
    ADD CONSTRAINT wagtailcore_referenc_content_type_id_766e0336_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_referenceindex wagtailcore_referenc_to_content_type_id_93690bbd_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_referenceindex
    ADD CONSTRAINT wagtailcore_referenc_to_content_type_id_93690bbd_fk_django_co FOREIGN KEY (to_content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_revision wagtailcore_revision_base_content_type_id_5b4ef7bd_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_revision
    ADD CONSTRAINT wagtailcore_revision_base_content_type_id_5b4ef7bd_fk_django_co FOREIGN KEY (base_content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_revision wagtailcore_revision_content_type_id_c8cb69c0_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_revision
    ADD CONSTRAINT wagtailcore_revision_content_type_id_c8cb69c0_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_site wagtailcore_site_root_page_id_e02fb95c_fk_wagtailcore_page_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_site
    ADD CONSTRAINT wagtailcore_site_root_page_id_e02fb95c_fk_wagtailcore_page_id FOREIGN KEY (root_page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_task wagtailcore_task_content_type_id_249ab8ba_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_task
    ADD CONSTRAINT wagtailcore_task_content_type_id_249ab8ba_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_taskstate wagtailcore_taskstat_content_type_id_0a758fdc_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstat_content_type_id_0a758fdc_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_taskstate wagtailcore_taskstat_revision_id_df25a499_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstat_revision_id_df25a499_fk_wagtailco FOREIGN KEY (revision_id) REFERENCES public.wagtailcore_revision(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_taskstate wagtailcore_taskstat_workflow_state_id_9239a775_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstat_workflow_state_id_9239a775_fk_wagtailco FOREIGN KEY (workflow_state_id) REFERENCES public.wagtailcore_workflowstate(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_taskstate wagtailcore_taskstate_finished_by_id_13f98229_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstate_finished_by_id_13f98229_fk_auth_user_id FOREIGN KEY (finished_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_taskstate wagtailcore_taskstate_task_id_c3677c34_fk_wagtailcore_task_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_taskstate
    ADD CONSTRAINT wagtailcore_taskstate_task_id_c3677c34_fk_wagtailcore_task_id FOREIGN KEY (task_id) REFERENCES public.wagtailcore_task(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowstate wagtailcore_workflow_base_content_type_id_a30dc576_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflow_base_content_type_id_a30dc576_fk_django_co FOREIGN KEY (base_content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowstate wagtailcore_workflow_content_type_id_2bb78ce1_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflow_content_type_id_2bb78ce1_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowcontenttype wagtailcore_workflow_content_type_id_b261bb37_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowcontenttype
    ADD CONSTRAINT wagtailcore_workflow_content_type_id_b261bb37_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowstate wagtailcore_workflow_current_task_state_i_3a1a0632_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflow_current_task_state_i_3a1a0632_fk_wagtailco FOREIGN KEY (current_task_state_id) REFERENCES public.wagtailcore_taskstate(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowpage wagtailcore_workflow_page_id_81e7bab6_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowpage
    ADD CONSTRAINT wagtailcore_workflow_page_id_81e7bab6_fk_wagtailco FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowstate wagtailcore_workflow_requested_by_id_4090bca3_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflow_requested_by_id_4090bca3_fk_auth_user FOREIGN KEY (requested_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowtask wagtailcore_workflow_task_id_ce7716fe_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowtask
    ADD CONSTRAINT wagtailcore_workflow_task_id_ce7716fe_fk_wagtailco FOREIGN KEY (task_id) REFERENCES public.wagtailcore_task(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowstate wagtailcore_workflow_workflow_id_1f18378f_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowstate
    ADD CONSTRAINT wagtailcore_workflow_workflow_id_1f18378f_fk_wagtailco FOREIGN KEY (workflow_id) REFERENCES public.wagtailcore_workflow(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowpage wagtailcore_workflow_workflow_id_56f56ff6_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowpage
    ADD CONSTRAINT wagtailcore_workflow_workflow_id_56f56ff6_fk_wagtailco FOREIGN KEY (workflow_id) REFERENCES public.wagtailcore_workflow(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowcontenttype wagtailcore_workflow_workflow_id_9aad7cd2_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowcontenttype
    ADD CONSTRAINT wagtailcore_workflow_workflow_id_9aad7cd2_fk_wagtailco FOREIGN KEY (workflow_id) REFERENCES public.wagtailcore_workflow(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailcore_workflowtask wagtailcore_workflow_workflow_id_b9717175_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailcore_workflowtask
    ADD CONSTRAINT wagtailcore_workflow_workflow_id_b9717175_fk_wagtailco FOREIGN KEY (workflow_id) REFERENCES public.wagtailcore_workflow(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtaildocs_document wagtaildocs_document_collection_id_23881625_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtaildocs_document
    ADD CONSTRAINT wagtaildocs_document_collection_id_23881625_fk_wagtailco FOREIGN KEY (collection_id) REFERENCES public.wagtailcore_collection(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtaildocs_document wagtaildocs_document_uploaded_by_user_id_17258b41_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtaildocs_document
    ADD CONSTRAINT wagtaildocs_document_uploaded_by_user_id_17258b41_fk_auth_user FOREIGN KEY (uploaded_by_user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtaildocs_uploadeddocument wagtaildocs_uploaded_uploaded_by_user_id_8dd61a73_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtaildocs_uploadeddocument
    ADD CONSTRAINT wagtaildocs_uploaded_uploaded_by_user_id_8dd61a73_fk_auth_user FOREIGN KEY (uploaded_by_user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailforms_formsubmission wagtailforms_formsub_page_id_e48e93e7_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailforms_formsubmission
    ADD CONSTRAINT wagtailforms_formsub_page_id_e48e93e7_fk_wagtailco FOREIGN KEY (page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailimages_image wagtailimages_image_collection_id_c2f8af7e_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_image
    ADD CONSTRAINT wagtailimages_image_collection_id_c2f8af7e_fk_wagtailco FOREIGN KEY (collection_id) REFERENCES public.wagtailcore_collection(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailimages_image wagtailimages_image_uploaded_by_user_id_5d73dc75_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_image
    ADD CONSTRAINT wagtailimages_image_uploaded_by_user_id_5d73dc75_fk_auth_user FOREIGN KEY (uploaded_by_user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailimages_rendition wagtailimages_rendit_image_id_3e1fd774_fk_wagtailim; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_rendition
    ADD CONSTRAINT wagtailimages_rendit_image_id_3e1fd774_fk_wagtailim FOREIGN KEY (image_id) REFERENCES public.wagtailimages_image(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailimages_uploadedimage wagtailimages_upload_uploaded_by_user_id_85921689_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailimages_uploadedimage
    ADD CONSTRAINT wagtailimages_upload_uploaded_by_user_id_85921689_fk_auth_user FOREIGN KEY (uploaded_by_user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailredirects_redirect wagtailredirects_red_redirect_page_id_b5728a8f_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailredirects_redirect
    ADD CONSTRAINT wagtailredirects_red_redirect_page_id_b5728a8f_fk_wagtailco FOREIGN KEY (redirect_page_id) REFERENCES public.wagtailcore_page(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailredirects_redirect wagtailredirects_red_site_id_780a0e1e_fk_wagtailco; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailredirects_redirect
    ADD CONSTRAINT wagtailredirects_red_site_id_780a0e1e_fk_wagtailco FOREIGN KEY (site_id) REFERENCES public.wagtailcore_site(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailsearch_indexentry wagtailsearch_indexe_content_type_id_62ed694f_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_indexentry
    ADD CONSTRAINT wagtailsearch_indexe_content_type_id_62ed694f_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailsearch_querydailyhits wagtailsearch_queryd_query_id_2185994b_fk_wagtailse; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailsearch_querydailyhits
    ADD CONSTRAINT wagtailsearch_queryd_query_id_2185994b_fk_wagtailse FOREIGN KEY (query_id) REFERENCES public.wagtailsearch_query(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: wagtailusers_userprofile wagtailusers_userprofile_user_id_59c92331_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.wagtailusers_userprofile
    ADD CONSTRAINT wagtailusers_userprofile_user_id_59c92331_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

