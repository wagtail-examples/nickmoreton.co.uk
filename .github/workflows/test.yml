name: checks

on:
  push:
    branches:
      - "**"
      - "!main"

  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  python:
    name: python
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          # Install a specific version of uv.
          version: "0.6.6"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Check if requirements.txt is up to date
        run: |
          uv export --no-hashes --no-dev --output-file requirements.txt --locked
          if ! git diff --exit-code requirements.txt; then
            echo "requirements.txt is not up to date. Please update it."
            exit 1
          fi

      - name: Check code style
        run: |
          uv run black --check .
          uv run isort --check .
          uv run flake8 .

      - name: Check migrations
        run: uv run python manage.py makemigrations --check --dry-run

      - name: Run tests
        run: uv run manage.py test

  node:
    name: node
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22 # Ensure this is the same as the version in .nvmrc

      - name: Install the project
        run: npm ci

      # this isn't very robust but eventually the build step swill
      # happen at build time so the static_compiled directory will
      # not exist in the repository
      - name: Check static files have been built
        run: |
          npm run build
          if ! git diff --exit-code webapp/static_compiled/css/bundle.css; then
            echo "static_compiled is not up to date. Please update it."
            exit 1
          fi


  # requirements:
  #   runs-on: ubuntu-latest
  #   name: Install and Check requirements
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       id: setup-python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"

  #     - name: Set checks as executable
  #       run: chmod +x ./checks/*.sh

  #     - name: Install dependencies
  #       id: install-dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install -r requirements.txt

  #     - name: Check requirements
  #       run: ./checks/dependencies.sh
  # static:
  #   name: Check static Assets
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 22

  #     - name: Set checks as executable
  #       run: chmod +x ./checks/*.sh

  #     - name: Install dependencies
  #       id: install-dependencies
  #       run: |
  #         npm ci

  #     - name: Check static
  #       run: ./checks/static.sh
  # code-style:
  #   name: Check code Style
  #   runs-on: ubuntu-latest
  #   needs: requirements
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: Set up Python 3.10
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"

  #     - name: Install Dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install -r ./checks/requirements.dev.txt

  #     - name: Flake8
  #       run: flake8 ./

  #     - name: Isort
  #       run: isort ./ --check

  #     - name: Black
  #       run: black ./ --check
  # migrations:
  #   name: Check migrations
  #   runs-on: ubuntu-latest
  #   needs: requirements
  #   services:
  #     mysql:
  #       image: mysql:5.7
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_DATABASE: test
  #       options: >-
  #         --health-cmd "mysqladmin ping"
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 3306:3306
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Python
  #       id: setup-python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.10"

  #     - name: Install dependencies
  #       id: install-dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         python -m pip install -r requirements.txt

  #     - name: Check migrations
  #       run: python manage.py makemigrations --check --dry-run
  #       env:
  #         MYSQL_ROOT_PASSWORD: root
  #         MYSQL_DATABASE: test
  #         MYSQL_USER: root
  #         MYSQL_PASSWORD: root
  #         MYSQL_ROOT_HOST: "%"
  #         MYSQL_HOST: 127.0.0.1
  #         MYSQL_PORT: 3306
